AxiosError: Request failed with status code 400
    at settle (/home/josepaludo/Documents/4kst/desafio-tecnico/api/node_modules/axios/lib/core/settle.js:19:12)
    at Unzip.handleStreamEnd (/home/josepaludo/Documents/4kst/desafio-tecnico/api/node_modules/axios/lib/adapters/http.js:589:11)
    at Unzip.emit (node:events:525:35)
    at Unzip.emit (node:domain:489:12)
    at endReadableNT (node:internal/streams/readable:1359:12)
    at processTicksAndRejections (node:internal/process/task_queues:82:21)
    at Axios.request (/home/josepaludo/Documents/4kst/desafio-tecnico/api/node_modules/axios/lib/core/Axios.js:45:41)
    at processTicksAndRejections (node:internal/process/task_queues:95:5) {
  code: 'ERR_BAD_REQUEST',
  config: {
    transitional: {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false
    },
    adapter: [ 'xhr', 'http' ],
    transformRequest: [ [Function: transformRequest] ],
    transformResponse: [ [Function: transformResponse] ],
    timeout: 0,
    xsrfCookieName: 'XSRF-TOKEN',
    xsrfHeaderName: 'X-XSRF-TOKEN',
    maxContentLength: -1,
    maxBodyLength: -1,
    env: {
      FormData: [Function: FormData] {
        LINE_BREAK: '\r\n',
        DEFAULT_CONTENT_TYPE: 'application/octet-stream'
      },
      Blob: [class Blob]
    },
    validateStatus: [Function: validateStatus],
    headers: Object [AxiosHeaders] {
      Accept: 'application/json, text/plain, */*',
      'Content-Type': 'application/json',
      'User-Agent': 'axios/1.6.8',
      'Content-Length': '141',
      'Accept-Encoding': 'gzip, compress, deflate, br'
    },
    method: 'post',
    url: 'https://www.wikidata.org/w/rest.php/oauth2/access_token',
    data: '{"grant_type":"client_credentials","client_id":"f1eaf401d045108de857f9150048f03f","client_secret":"91139e005084a2e34f08dcf7799679affc9bd2fe"}'
  },
  request: <ref *1> ClientRequest {
    _events: [Object: null prototype] {
      abort: [Function (anonymous)],
      aborted: [Function (anonymous)],
      connect: [Function (anonymous)],
      error: [Function (anonymous)],
      socket: [Function (anonymous)],
      timeout: [Function (anonymous)],
      finish: [Function: requestOnFinish]
    },
    _eventsCount: 7,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: true,
    _last: true,
    chunkedEncoding: false,
    shouldKeepAlive: false,
    maxRequestsOnConnectionReached: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: false,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    strictContentLength: false,
    _contentLength: '141',
    _hasBody: true,
    _trailer: '',
    finished: true,
    _headerSent: true,
    _closed: true,
    socket: TLSSocket {
      _tlsOptions: {
        allowHalfOpen: undefined,
        pipe: false,
        secureContext: SecureContext { context: SecureContext {} },
        isServer: false,
        requestCert: true,
        rejectUnauthorized: true,
        session: undefined,
        ALPNProtocols: undefined,
        requestOCSP: undefined,
        enableTrace: undefined,
        pskCallback: undefined,
        highWaterMark: undefined,
        onread: undefined,
        signal: undefined
      },
      _secureEstablished: true,
      _securePending: false,
      _newSessionPending: false,
      _controlReleased: true,
      secureConnecting: false,
      _SNICallback: null,
      servername: 'www.wikidata.org',
      alpnProtocol: false,
      authorized: true,
      authorizationError: null,
      encrypted: true,
      _events: [Object: null prototype] {
        close: [
          [Function: onSocketCloseDestroySSL],
          [Function: onClose],
          [Function: socketCloseListener]
        ],
        end: [Function: onReadableStreamEnd],
        newListener: [Function: keylogNewListener],
        secure: [Function: onConnectSecure],
        session: [Function (anonymous)],
        free: [Function: onFree],
        timeout: [Function: onTimeout],
        agentRemove: [Function: onRemove],
        error: [Function: socketErrorListener]
      },
      _eventsCount: 9,
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: 'www.wikidata.org',
      _closeAfterHandlingError: false,
      _readableState: ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: [],
        flowing: true,
        ended: true,
        endEmitted: true,
        reading: false,
        constructed: true,
        sync: false,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        errorEmitted: false,
        emitClose: false,
        autoDestroy: true,
        destroyed: true,
        errored: null,
        closed: true,
        closeEmitted: true,
        defaultEncoding: 'utf8',
        awaitDrainWriters: null,
        multiAwaitDrain: false,
        readingMore: false,
        dataEmitted: true,
        decoder: null,
        encoding: null,
        [Symbol(kPaused)]: false
      },
      _maxListeners: undefined,
      _writableState: WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: true,
        needDrain: false,
        ending: true,
        ended: true,
        finished: true,
        destroyed: true,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        afterWriteTickInfo: null,
        buffered: [],
        bufferedIndex: 0,
        allBuffers: true,
        allNoop: true,
        pendingcb: 0,
        constructed: true,
        prefinished: true,
        errorEmitted: false,
        emitClose: false,
        autoDestroy: true,
        errored: null,
        closed: true,
        closeEmitted: true,
        [Symbol(kOnFinished)]: []
      },
      allowHalfOpen: false,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: undefined,
      _server: null,
      ssl: null,
      _requestCert: true,
      _rejectUnauthorized: true,
      parser: null,
      _httpMessage: [Circular *1],
      write: [Function: writeAfterFIN],
      [Symbol(res)]: null,
      [Symbol(verified)]: true,
      [Symbol(pendingSession)]: null,
      [Symbol(async_id_symbol)]: 35,
      [Symbol(kHandle)]: null,
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: false,
      [Symbol(kSetKeepAlive)]: true,
      [Symbol(kSetKeepAliveInitialDelay)]: 60,
      [Symbol(kBytesRead)]: 1442,
      [Symbol(kBytesWritten)]: 400,
      [Symbol(connect-options)]: {
        rejectUnauthorized: true,
        ciphers: 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
        checkServerIdentity: [Function: checkServerIdentity],
        minDHSize: 1024,
        maxRedirects: 21,
        maxBodyLength: Infinity,
        protocol: 'https:',
        path: null,
        method: 'POST',
        headers: [Object: null prototype] {
          Accept: 'application/json, text/plain, */*',
          'Content-Type': 'application/json',
          'User-Agent': 'axios/1.6.8',
          'Content-Length': '141',
          'Accept-Encoding': 'gzip, compress, deflate, br'
        },
        agents: { http: undefined, https: undefined },
        auth: undefined,
        family: undefined,
        beforeRedirect: [Function: dispatchBeforeRedirect],
        beforeRedirects: { proxy: [Function: beforeRedirect] },
        hostname: 'www.wikidata.org',
        port: 443,
        agent: undefined,
        nativeProtocols: <ref *5> {
          'http:': {
            _connectionListener: [Function: connectionListener],
            METHODS: [
              'ACL',         'BIND',       'CHECKOUT',
              'CONNECT',     'COPY',       'DELETE',
              'GET',         'HEAD',       'LINK',
              'LOCK',        'M-SEARCH',   'MERGE',
              'MKACTIVITY',  'MKCALENDAR', 'MKCOL',
              'MOVE',        'NOTIFY',     'OPTIONS',
              'PATCH',       'POST',       'PROPFIND',
              'PROPPATCH',   'PURGE',      'PUT',
              'REBIND',      'REPORT',     'SEARCH',
              'SOURCE',      'SUBSCRIBE',  'TRACE',
              'UNBIND',      'UNLINK',     'UNLOCK',
              'UNSUBSCRIBE'
            ],
            STATUS_CODES: {
              '100': 'Continue',
              '101': 'Switching Protocols',
              '102': 'Processing',
              '103': 'Early Hints',
              '200': 'OK',
              '201': 'Created',
              '202': 'Accepted',
              '203': 'Non-Authoritative Information',
              '204': 'No Content',
              '205': 'Reset Content',
              '206': 'Partial Content',
              '207': 'Multi-Status',
              '208': 'Already Reported',
              '226': 'IM Used',
              '300': 'Multiple Choices',
              '301': 'Moved Permanently',
              '302': 'Found',
              '303': 'See Other',
              '304': 'Not Modified',
              '305': 'Use Proxy',
              '307': 'Temporary Redirect',
              '308': 'Permanent Redirect',
              '400': 'Bad Request',
              '401': 'Unauthorized',
              '402': 'Payment Required',
              '403': 'Forbidden',
              '404': 'Not Found',
              '405': 'Method Not Allowed',
              '406': 'Not Acceptable',
              '407': 'Proxy Authentication Required',
              '408': 'Request Timeout',
              '409': 'Conflict',
              '410': 'Gone',
              '411': 'Length Required',
              '412': 'Precondition Failed',
              '413': 'Payload Too Large',
              '414': 'URI Too Long',
              '415': 'Unsupported Media Type',
              '416': 'Range Not Satisfiable',
              '417': 'Expectation Failed',
              '418': "I'm a Teapot",
              '421': 'Misdirected Request',
              '422': 'Unprocessable Entity',
              '423': 'Locked',
              '424': 'Failed Dependency',
              '425': 'Too Early',
              '426': 'Upgrade Required',
              '428': 'Precondition Required',
              '429': 'Too Many Requests',
              '431': 'Request Header Fields Too Large',
              '451': 'Unavailable For Legal Reasons',
              '500': 'Internal Server Error',
              '501': 'Not Implemented',
              '502': 'Bad Gateway',
              '503': 'Service Unavailable',
              '504': 'Gateway Timeout',
              '505': 'HTTP Version Not Supported',
              '506': 'Variant Also Negotiates',
              '507': 'Insufficient Storage',
              '508': 'Loop Detected',
              '509': 'Bandwidth Limit Exceeded',
              '510': 'Not Extended',
              '511': 'Network Authentication Required'
            },
            Agent: [Function: Agent] { defaultMaxSockets: Infinity },
            ClientRequest: [Function: ClientRequest],
            IncomingMessage: [Function: IncomingMessage],
            OutgoingMessage: [Function: OutgoingMessage],
            Server: [Function: Server],
            ServerResponse: [Function: ServerResponse],
            createServer: [Function: createServer],
            validateHeaderName: [Function: __node_internal_],
            validateHeaderValue: [Function: __node_internal_],
            get: [Function: get],
            request: [Function: request],
            setMaxIdleHTTPParsers: [Function: setMaxIdleHTTPParsers],
            maxHeaderSize: [Getter],
            globalAgent: [Getter/Setter]
          },
          'https:': {
            Agent: [Function: Agent],
            globalAgent: <ref *3> Agent {
              _events: [Object: null prototype] {
                free: [Function (anonymous)],
                newListener: [Function: maybeEnableKeylog]
              },
              _eventsCount: 2,
              _maxListeners: undefined,
              defaultPort: 443,
              protocol: 'https:',
              options: [Object: null prototype] { noDelay: true, path: null },
              requests: [Object: null prototype] {},
              sockets: [Object: null prototype] {
                'accounts.spotify.com:443:::::::::::::::::::::': [
                  <ref *2> TLSSocket {
                    _tlsOptions: {
                      allowHalfOpen: undefined,
                      pipe: false,
                      secureContext: SecureContext { context: SecureContext {} },
                      isServer: false,
                      requestCert: true,
                      rejectUnauthorized: true,
                      session: undefined,
                      ALPNProtocols: undefined,
                      requestOCSP: undefined,
                      enableTrace: undefined,
                      pskCallback: undefined,
                      highWaterMark: undefined,
                      onread: undefined,
                      signal: undefined
                    },
                    _secureEstablished: false,
                    _securePending: false,
                    _newSessionPending: false,
                    _controlReleased: true,
                    secureConnecting: true,
                    _SNICallback: null,
                    servername: null,
                    alpnProtocol: null,
                    authorized: false,
                    authorizationError: null,
                    encrypted: true,
                    _events: [Object: null prototype] {
                      close: [
                        [Function: onSocketCloseDestroySSL],
                        [Function: bound onceWrapper] {
                          listener: [Function (anonymous)]
                        },
                        [Function: onClose],
                        [Function: socketCloseListener],
                        [Function: bound onceWrapper] {
                          listener: [Function: onClose]
                        }
                      ],
                      end: [
                        [Function: onConnectEnd],
                        [Function: onReadableStreamEnd],
                        [Function: socketOnEnd]
                      ],
                      newListener: [Function: keylogNewListener],
                      connect: [
                        [Function: bound onceWrapper] {
                          listener: [Function (anonymous)]
                        },
                        [Function: bound onceWrapper] {
                          listener: [Function (anonymous)]
                        },
                        [Function: bound onceWrapper] {
                          listener: [Function: connect]
                        }
                      ],
                      secure: [Function: onConnectSecure],
                      session: [Function (anonymous)],
                      free: [Function: onFree],
                      timeout: [Function: onTimeout],
                      agentRemove: [Function: onRemove],
                      error: [Function: socketErrorListener],
                      data: [Function: socketOnData],
                      drain: [Function: ondrain]
                    },
                    _eventsCount: 12,
                    connecting: true,
                    _hadError: false,
                    _parent: null,
                    _host: 'accounts.spotify.com',
                    _closeAfterHandlingError: false,
                    _readableState: ReadableState {
                      objectMode: false,
                      highWaterMark: 16384,
                      buffer: BufferList { head: null, tail: null, length: 0 },
                      length: 0,
                      pipes: [],
                      flowing: true,
                      ended: false,
                      endEmitted: false,
                      reading: true,
                      constructed: true,
                      sync: false,
                      needReadable: true,
                      emittedReadable: false,
                      readableListening: false,
                      resumeScheduled: false,
                      errorEmitted: false,
                      emitClose: false,
                      autoDestroy: true,
                      destroyed: false,
                      errored: null,
                      closed: false,
                      closeEmitted: false,
                      defaultEncoding: 'utf8',
                      awaitDrainWriters: null,
                      multiAwaitDrain: false,
                      readingMore: false,
                      dataEmitted: false,
                      decoder: null,
                      encoding: null,
                      [Symbol(kPaused)]: false
                    },
                    _maxListeners: undefined,
                    _writableState: WritableState {
                      objectMode: false,
                      highWaterMark: 16384,
                      finalCalled: false,
                      needDrain: false,
                      ending: false,
                      ended: false,
                      finished: false,
                      destroyed: false,
                      decodeStrings: false,
                      defaultEncoding: 'utf8',
                      length: 378,
                      writing: true,
                      corked: 0,
                      sync: false,
                      bufferProcessing: false,
                      onwrite: [Function: bound onwrite],
                      writecb: [Function (anonymous)],
                      writelen: 378,
                      afterWriteTickInfo: null,
                      buffered: [],
                      bufferedIndex: 0,
                      allBuffers: true,
                      allNoop: true,
                      pendingcb: 1,
                      constructed: true,
                      prefinished: false,
                      errorEmitted: false,
                      emitClose: false,
                      autoDestroy: true,
                      errored: null,
                      closed: false,
                      closeEmitted: false,
                      [Symbol(kOnFinished)]: []
                    },
                    allowHalfOpen: false,
                    _sockname: null,
                    _pendingData: [
                      {
                        chunk: 'POST /api/token HTTP/1.1\r\n' +
                          'Accept: application/json, text/plain, */*\r\n' +
                          'Content-Type: application/x-www-form-urlencoded\r\n' +
                          'User-Agent: axios/1.6.8\r\n' +
                          'Content-Length: 119\r\n' +
                          'Accept-Encoding: gzip, compress, deflate, br\r\n' +
                          'Host: accounts.spotify.com\r\n' +
                          'Connection: close\r\n' +
                          '\r\n',
                        encoding: 'latin1',
                        callback: [Function: nop]
                      },
                      {
                        chunk: <Buffer 67 72 61 6e 74 5f 74 79 70 65 3d 63 6c 69 65 6e 74 5f 63 72 65 64 65 6e 74 69 61 6c 73 26 63 6c 69 65 6e 74 5f 69 64 3d 65 62 63 63 39 39 31 32 34 30 ... 69 more bytes>,
                        encoding: 'buffer',
                        callback: [Function (anonymous)]
                      },
                      allBuffers: false
                    ],
                    _pendingEncoding: '',
                    server: undefined,
                    _server: null,
                    ssl: TLSWrap {
                      _parent: TCP {
                        reading: [Getter/Setter],
                        onconnection: null,
                        [Symbol(owner_symbol)]: [Circular *2]
                      },
                      _parentWrap: undefined,
                      _secureContext: SecureContext { context: SecureContext {} },
                      reading: false,
                      onkeylog: [Function: onkeylog],
                      onhandshakestart: {},
                      onhandshakedone: [Function (anonymous)],
                      onocspresponse: [Function: onocspresponse],
                      onnewsession: [Function: onnewsessionclient],
                      onerror: [Function: onerror],
                      [Symbol(owner_symbol)]: [Circular *2]
                    },
                    _requestCert: true,
                    _rejectUnauthorized: true,
                    parser: <ref *4> HTTPParser {
                      '0': null,
                      '1': [Function: parserOnHeaders],
                      '2': [Function: parserOnHeadersComplete],
                      '3': [Function: parserOnBody],
                      '4': [Function: parserOnMessageComplete],
                      '5': null,
                      '6': null,
                      _headers: [],
                      _url: '',
                      socket: [Circular *2],
                      incoming: null,
                      outgoing: <ref *6> ClientRequest {
                        _events: [Object: null prototype] {
                          response: [Function: bound onceWrapper] {
                            listener: [Function (anonymous)]
                          },
                          abort: [Function (anonymous)],
                          aborted: [Function (anonymous)],
                          connect: [Function (anonymous)],
                          error: [Function (anonymous)],
                          socket: [Function (anonymous)],
                          timeout: [Function (anonymous)]
                        },
                        _eventsCount: 7,
                        _maxListeners: undefined,
                        outputData: [],
                        outputSize: 0,
                        writable: true,
                        destroyed: false,
                        _last: true,
                        chunkedEncoding: false,
                        shouldKeepAlive: false,
                        maxRequestsOnConnectionReached: false,
                        _defaultKeepAlive: true,
                        useChunkedEncodingByDefault: true,
                        sendDate: false,
                        _removedConnection: false,
                        _removedContLen: false,
                        _removedTE: false,
                        strictContentLength: false,
                        _contentLength: '119',
                        _hasBody: true,
                        _trailer: '',
                        finished: false,
                        _headerSent: true,
                        _closed: false,
                        socket: [Circular *2],
                        _header: 'POST /api/token HTTP/1.1\r\n' +
                          'Accept: application/json, text/plain, */*\r\n' +
                          'Content-Type: application/x-www-form-urlencoded\r\n' +
                          'User-Agent: axios/1.6.8\r\n' +
                          'Content-Length: 119\r\n' +
                          'Accept-Encoding: gzip, compress, deflate, br\r\n' +
                          'Host: accounts.spotify.com\r\n' +
                          'Connection: close\r\n' +
                          '\r\n',
                        _keepAliveTimeout: 0,
                        _onPendingData: [Function: nop],
                        agent: [Circular *3],
                        socketPath: undefined,
                        method: 'POST',
                        maxHeaderSize: undefined,
                        insecureHTTPParser: undefined,
                        joinDuplicateHeaders: undefined,
                        path: '/api/token',
                        _ended: false,
                        res: null,
                        aborted: false,
                        timeoutCb: null,
                        upgradeOrConnect: false,
                        parser: [Circular *4],
                        maxHeadersCount: null,
                        reusedSocket: false,
                        host: 'accounts.spotify.com',
                        protocol: 'https:',
                        _redirectable: Writable {
                          _writableState: WritableState {
                            objectMode: false,
                            highWaterMark: 16384,
                            finalCalled: false,
                            needDrain: false,
                            ending: false,
                            ended: false,
                            finished: false,
                            destroyed: false,
                            decodeStrings: true,
                            defaultEncoding: 'utf8',
                            length: 0,
                            writing: false,
                            corked: 0,
                            sync: true,
                            bufferProcessing: false,
                            onwrite: [Function: bound onwrite],
                            writecb: null,
                            writelen: 0,
                            afterWriteTickInfo: null,
                            buffered: [],
                            bufferedIndex: 0,
                            allBuffers: true,
                            allNoop: true,
                            pendingcb: 0,
                            constructed: true,
                            prefinished: false,
                            errorEmitted: false,
                            emitClose: true,
                            autoDestroy: true,
                            errored: null,
                            closed: false,
                            closeEmitted: false,
                            [Symbol(kOnFinished)]: []
                          },
                          _events: [Object: null prototype] {
                            response: [Function: handleResponse],
                            error: [Function: handleRequestError],
                            socket: [Function: handleRequestSocket]
                          },
                          _eventsCount: 3,
                          _maxListeners: undefined,
                          _options: {
                            maxRedirects: 21,
                            maxBodyLength: Infinity,
                            protocol: 'https:',
                            path: '/api/token',
                            method: 'POST',
                            headers: [Object: null prototype] {
                              Accept: 'application/json, text/plain, */*',
                              'Content-Type': 'application/x-www-form-urlencoded',
                              'User-Agent': 'axios/1.6.8',
                              'Content-Length': '119',
                              'Accept-Encoding': 'gzip, compress, deflate, br'
                            },
                            agents: { http: undefined, https: undefined },
                            auth: undefined,
                            family: undefined,
                            beforeRedirect: [Function: dispatchBeforeRedirect],
                            beforeRedirects: { proxy: [Function: beforeRedirect] },
                            hostname: 'accounts.spotify.com',
                            port: '',
                            agent: undefined,
                            nativeProtocols: [Circular *5],
                            pathname: '/api/token'
                          },
                          _ended: false,
                          _ending: true,
                          _redirectCount: 0,
                          _redirects: [],
                          _requestBodyLength: 119,
                          _requestBodyBuffers: [
                            {
                              data: <Buffer 67 72 61 6e 74 5f 74 79 70 65 3d 63 6c 69 65 6e 74 5f 63 72 65 64 65 6e 74 69 61 6c 73 26 63 6c 69 65 6e 74 5f 69 64 3d 65 62 63 63 39 39 31 32 34 30 ... 69 more bytes>,
                              encoding: undefined
                            }
                          ],
                          _onNativeResponse: [Function (anonymous)],
                          _currentRequest: [Circular *6],
                          _currentUrl: 'https://accounts.spotify.com/api/token',
                          [Symbol(kCapture)]: false
                        },
                        [Symbol(kCapture)]: false,
                        [Symbol(kBytesWritten)]: 0,
                        [Symbol(kEndCalled)]: false,
                        [Symbol(kNeedDrain)]: false,
                        [Symbol(corked)]: 0,
                        [Symbol(kOutHeaders)]: [Object: null prototype] {
                          accept: [
                            'Accept',
                            'application/json, text/plain, */*'
                          ],
                          'content-type': [
                            'Content-Type',
                            'application/x-www-form-urlencoded'
                          ],
                          'user-agent': [ 'User-Agent', 'axios/1.6.8' ],
                          'content-length': [ 'Content-Length', '119' ],
                          'accept-encoding': [
                            'Accept-Encoding',
                            'gzip, compress, deflate, br'
                          ],
                          host: [ 'Host', 'accounts.spotify.com' ]
                        },
                        [Symbol(errored)]: null,
                        [Symbol(kUniqueHeaders)]: null
                      },
                      maxHeaderPairs: 2000,
                      _consumed: false,
                      onIncoming: [Function: parserOnIncomingClient],
                      joinDuplicateHeaders: undefined,
                      [Symbol(resource_symbol)]: HTTPClientAsyncResource {
                        type: 'HTTPINCOMINGMESSAGE',
                        req: <ref *6> ClientRequest {
                          _events: [Object: null prototype] {
                            response: [Function: bound onceWrapper] {
                              listener: [Function (anonymous)]
                            },
                            abort: [Function (anonymous)],
                            aborted: [Function (anonymous)],
                            connect: [Function (anonymous)],
                            error: [Function (anonymous)],
                            socket: [Function (anonymous)],
                            timeout: [Function (anonymous)]
                          },
                          _eventsCount: 7,
                          _maxListeners: undefined,
                          outputData: [],
                          outputSize: 0,
                          writable: true,
                          destroyed: false,
                          _last: true,
                          chunkedEncoding: false,
                          shouldKeepAlive: false,
                          maxRequestsOnConnectionReached: false,
                          _defaultKeepAlive: true,
                          useChunkedEncodingByDefault: true,
                          sendDate: false,
                          _removedConnection: false,
                          _removedContLen: false,
                          _removedTE: false,
                          strictContentLength: false,
                          _contentLength: '119',
                          _hasBody: true,
                          _trailer: '',
                          finished: false,
                          _headerSent: true,
                          _closed: false,
                          socket: [Circular *2],
                          _header: 'POST /api/token HTTP/1.1\r\n' +
                            'Accept: application/json, text/plain, */*\r\n' +
                            'Content-Type: application/x-www-form-urlencoded\r\n' +
                            'User-Agent: axios/1.6.8\r\n' +
                            'Content-Length: 119\r\n' +
                            'Accept-Encoding: gzip, compress, deflate, br\r\n' +
                            'Host: accounts.spotify.com\r\n' +
                            'Connection: close\r\n' +
                            '\r\n',
                          _keepAliveTimeout: 0,
                          _onPendingData: [Function: nop],
                          agent: [Circular *3],
                          socketPath: undefined,
                          method: 'POST',
                          maxHeaderSize: undefined,
                          insecureHTTPParser: undefined,
                          joinDuplicateHeaders: undefined,
                          path: '/api/token',
                          _ended: false,
                          res: null,
                          aborted: false,
                          timeoutCb: null,
                          upgradeOrConnect: false,
                          parser: [Circular *4],
                          maxHeadersCount: null,
                          reusedSocket: false,
                          host: 'accounts.spotify.com',
                          protocol: 'https:',
                          _redirectable: Writable {
                            _writableState: WritableState {
                              objectMode: false,
                              highWaterMark: 16384,
                              finalCalled: false,
                              needDrain: false,
                              ending: false,
                              ended: false,
                              finished: false,
                              destroyed: false,
                              decodeStrings: true,
                              defaultEncoding: 'utf8',
                              length: 0,
                              writing: false,
                              corked: 0,
                              sync: true,
                              bufferProcessing: false,
                              onwrite: [Function: bound onwrite],
                              writecb: null,
                              writelen: 0,
                              afterWriteTickInfo: null,
                              buffered: [],
                              bufferedIndex: 0,
                              allBuffers: true,
                              allNoop: true,
                              pendingcb: 0,
                              constructed: true,
                              prefinished: false,
                              errorEmitted: false,
                              emitClose: true,
                              autoDestroy: true,
                              errored: null,
                              closed: false,
                              closeEmitted: false,
                              [Symbol(kOnFinished)]: []
                            },
                            _events: [Object: null prototype] {
                              response: [Function: handleResponse],
                              error: [Function: handleRequestError],
                              socket: [Function: handleRequestSocket]
                            },
                            _eventsCount: 3,
                            _maxListeners: undefined,
                            _options: {
                              maxRedirects: 21,
                              maxBodyLength: Infinity,
                              protocol: 'https:',
                              path: '/api/token',
                              method: 'POST',
                              headers: [Object: null prototype] {
                                Accept: 'application/json, text/plain, */*',
                                'Content-Type': 'application/x-www-form-urlencoded',
                                'User-Agent': 'axios/1.6.8',
                                'Content-Length': '119',
                                'Accept-Encoding': 'gzip, compress, deflate, br'
                              },
                              agents: { http: undefined, https: undefined },
                              auth: undefined,
                              family: undefined,
                              beforeRedirect: [Function: dispatchBeforeRedirect],
                              beforeRedirects: { proxy: [Function: beforeRedirect] },
                              hostname: 'accounts.spotify.com',
                              port: '',
                              agent: undefined,
                              nativeProtocols: [Circular *5],
                              pathname: '/api/token'
                            },
                            _ended: false,
                            _ending: true,
                            _redirectCount: 0,
                            _redirects: [],
                            _requestBodyLength: 119,
                            _requestBodyBuffers: [
                              {
                                data: <Buffer 67 72 61 6e 74 5f 74 79 70 65 3d 63 6c 69 65 6e 74 5f 63 72 65 64 65 6e 74 69 61 6c 73 26 63 6c 69 65 6e 74 5f 69 64 3d 65 62 63 63 39 39 31 32 34 30 ... 69 more bytes>,
                                encoding: undefined
                              }
                            ],
                            _onNativeResponse: [Function (anonymous)],
                            _currentRequest: [Circular *6],
                            _currentUrl: 'https://accounts.spotify.com/api/token',
                            [Symbol(kCapture)]: false
                          },
                          [Symbol(kCapture)]: false,
                          [Symbol(kBytesWritten)]: 0,
                          [Symbol(kEndCalled)]: false,
                          [Symbol(kNeedDrain)]: false,
                          [Symbol(corked)]: 0,
                          [Symbol(kOutHeaders)]: [Object: null prototype] {
                            accept: [
                              'Accept',
                              'application/json, text/plain, */*'
                            ],
                            'content-type': [
                              'Content-Type',
                              'application/x-www-form-urlencoded'
                            ],
                            'user-agent': [ 'User-Agent', 'axios/1.6.8' ],
                            'content-length': [ 'Content-Length', '119' ],
                            'accept-encoding': [
                              'Accept-Encoding',
                              'gzip, compress, deflate, br'
                            ],
                            host: [ 'Host', 'accounts.spotify.com' ]
                          },
                          [Symbol(errored)]: null,
                          [Symbol(kUniqueHeaders)]: null
                        }
                      }
                    },
                    _httpMessage: <ref *6> ClientRequest {
                      _events: [Object: null prototype] {
                        response: [Function: bound onceWrapper] {
                          listener: [Function (anonymous)]
                        },
                        abort: [Function (anonymous)],
                        aborted: [Function (anonymous)],
                        connect: [Function (anonymous)],
                        error: [Function (anonymous)],
                        socket: [Function (anonymous)],
                        timeout: [Function (anonymous)]
                      },
                      _eventsCount: 7,
                      _maxListeners: undefined,
                      outputData: [],
                      outputSize: 0,
                      writable: true,
                      destroyed: false,
                      _last: true,
                      chunkedEncoding: false,
                      shouldKeepAlive: false,
                      maxRequestsOnConnectionReached: false,
                      _defaultKeepAlive: true,
                      useChunkedEncodingByDefault: true,
                      sendDate: false,
                      _removedConnection: false,
                      _removedContLen: false,
                      _removedTE: false,
                      strictContentLength: false,
                      _contentLength: '119',
                      _hasBody: true,
                      _trailer: '',
                      finished: false,
                      _headerSent: true,
                      _closed: false,
                      socket: [Circular *2],
                      _header: 'POST /api/token HTTP/1.1\r\n' +
                        'Accept: application/json, text/plain, */*\r\n' +
                        'Content-Type: application/x-www-form-urlencoded\r\n' +
                        'User-Agent: axios/1.6.8\r\n' +
                        'Content-Length: 119\r\n' +
                        'Accept-Encoding: gzip, compress, deflate, br\r\n' +
                        'Host: accounts.spotify.com\r\n' +
                        'Connection: close\r\n' +
                        '\r\n',
                      _keepAliveTimeout: 0,
                      _onPendingData: [Function: nop],
                      agent: [Circular *3],
                      socketPath: undefined,
                      method: 'POST',
                      maxHeaderSize: undefined,
                      insecureHTTPParser: undefined,
                      joinDuplicateHeaders: undefined,
                      path: '/api/token',
                      _ended: false,
                      res: null,
                      aborted: false,
                      timeoutCb: null,
                      upgradeOrConnect: false,
                      parser: <ref *4> HTTPParser {
                        '0': null,
                        '1': [Function: parserOnHeaders],
                        '2': [Function: parserOnHeadersComplete],
                        '3': [Function: parserOnBody],
                        '4': [Function: parserOnMessageComplete],
                        '5': null,
                        '6': null,
                        _headers: [],
                        _url: '',
                        socket: [Circular *2],
                        incoming: null,
                        outgoing: [Circular *6],
                        maxHeaderPairs: 2000,
                        _consumed: false,
                        onIncoming: [Function: parserOnIncomingClient],
                        joinDuplicateHeaders: undefined,
                        [Symbol(resource_symbol)]: HTTPClientAsyncResource {
                          type: 'HTTPINCOMINGMESSAGE',
                          req: [Circular *6]
                        }
                      },
                      maxHeadersCount: null,
                      reusedSocket: false,
                      host: 'accounts.spotify.com',
                      protocol: 'https:',
                      _redirectable: Writable {
                        _writableState: WritableState {
                          objectMode: false,
                          highWaterMark: 16384,
                          finalCalled: false,
                          needDrain: false,
                          ending: false,
                          ended: false,
                          finished: false,
                          destroyed: false,
                          decodeStrings: true,
                          defaultEncoding: 'utf8',
                          length: 0,
                          writing: false,
                          corked: 0,
                          sync: true,
                          bufferProcessing: false,
                          onwrite: [Function: bound onwrite],
                          writecb: null,
                          writelen: 0,
                          afterWriteTickInfo: null,
                          buffered: [],
                          bufferedIndex: 0,
                          allBuffers: true,
                          allNoop: true,
                          pendingcb: 0,
                          constructed: true,
                          prefinished: false,
                          errorEmitted: false,
                          emitClose: true,
                          autoDestroy: true,
                          errored: null,
                          closed: false,
                          closeEmitted: false,
                          [Symbol(kOnFinished)]: []
                        },
                        _events: [Object: null prototype] {
                          response: [Function: handleResponse],
                          error: [Function: handleRequestError],
                          socket: [Function: handleRequestSocket]
                        },
                        _eventsCount: 3,
                        _maxListeners: undefined,
                        _options: {
                          maxRedirects: 21,
                          maxBodyLength: Infinity,
                          protocol: 'https:',
                          path: '/api/token',
                          method: 'POST',
                          headers: [Object: null prototype] {
                            Accept: 'application/json, text/plain, */*',
                            'Content-Type': 'application/x-www-form-urlencoded',
                            'User-Agent': 'axios/1.6.8',
                            'Content-Length': '119',
                            'Accept-Encoding': 'gzip, compress, deflate, br'
                          },
                          agents: { http: undefined, https: undefined },
                          auth: undefined,
                          family: undefined,
                          beforeRedirect: [Function: dispatchBeforeRedirect],
                          beforeRedirects: { proxy: [Function: beforeRedirect] },
                          hostname: 'accounts.spotify.com',
                          port: '',
                          agent: undefined,
                          nativeProtocols: [Circular *5],
                          pathname: '/api/token'
                        },
                        _ended: false,
                        _ending: true,
                        _redirectCount: 0,
                        _redirects: [],
                        _requestBodyLength: 119,
                        _requestBodyBuffers: [
                          {
                            data: <Buffer 67 72 61 6e 74 5f 74 79 70 65 3d 63 6c 69 65 6e 74 5f 63 72 65 64 65 6e 74 69 61 6c 73 26 63 6c 69 65 6e 74 5f 69 64 3d 65 62 63 63 39 39 31 32 34 30 ... 69 more bytes>,
                            encoding: undefined
                          }
                        ],
                        _onNativeResponse: [Function (anonymous)],
                        _currentRequest: [Circular *6],
                        _currentUrl: 'https://accounts.spotify.com/api/token',
                        [Symbol(kCapture)]: false
                      },
                      [Symbol(kCapture)]: false,
                      [Symbol(kBytesWritten)]: 0,
                      [Symbol(kEndCalled)]: false,
                      [Symbol(kNeedDrain)]: false,
                      [Symbol(corked)]: 0,
                      [Symbol(kOutHeaders)]: [Object: null prototype] {
                        accept: [
                          'Accept',
                          'application/json, text/plain, */*'
                        ],
                        'content-type': [
                          'Content-Type',
                          'application/x-www-form-urlencoded'
                        ],
                        'user-agent': [ 'User-Agent', 'axios/1.6.8' ],
                        'content-length': [ 'Content-Length', '119' ],
                        'accept-encoding': [
                          'Accept-Encoding',
                          'gzip, compress, deflate, br'
                        ],
                        host: [ 'Host', 'accounts.spotify.com' ]
                      },
                      [Symbol(errored)]: null,
                      [Symbol(kUniqueHeaders)]: null
                    },
                    [Symbol(res)]: TLSWrap {
                      _parent: TCP {
                        reading: [Getter/Setter],
                        onconnection: null,
                        [Symbol(owner_symbol)]: [Circular *2]
                      },
                      _parentWrap: undefined,
                      _secureContext: SecureContext { context: SecureContext {} },
                      reading: false,
                      onkeylog: [Function: onkeylog],
                      onhandshakestart: {},
                      onhandshakedone: [Function (anonymous)],
                      onocspresponse: [Function: onocspresponse],
                      onnewsession: [Function: onnewsessionclient],
                      onerror: [Function: onerror],
                      [Symbol(owner_symbol)]: [Circular *2]
                    },
                    [Symbol(verified)]: false,
                    [Symbol(pendingSession)]: null,
                    [Symbol(async_id_symbol)]: 6,
                    [Symbol(kHandle)]: TLSWrap {
                      _parent: TCP {
                        reading: [Getter/Setter],
                        onconnection: null,
                        [Symbol(owner_symbol)]: [Circular *2]
                      },
                      _parentWrap: undefined,
                      _secureContext: SecureContext { context: SecureContext {} },
                      reading: false,
                      onkeylog: [Function: onkeylog],
                      onhandshakestart: {},
                      onhandshakedone: [Function (anonymous)],
                      onocspresponse: [Function: onocspresponse],
                      onnewsession: [Function: onnewsessionclient],
                      onerror: [Function: onerror],
                      [Symbol(owner_symbol)]: [Circular *2]
                    },
                    [Symbol(lastWriteQueueSize)]: 0,
                    [Symbol(timeout)]: null,
                    [Symbol(kBuffer)]: null,
                    [Symbol(kBufferCb)]: null,
                    [Symbol(kBufferGen)]: null,
                    [Symbol(kCapture)]: false,
                    [Symbol(kSetNoDelay)]: false,
                    [Symbol(kSetKeepAlive)]: true,
                    [Symbol(kSetKeepAliveInitialDelay)]: 60,
                    [Symbol(kBytesRead)]: 0,
                    [Symbol(kBytesWritten)]: 0,
                    [Symbol(connect-options)]: {
                      rejectUnauthorized: true,
                      ciphers: 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
                      checkServerIdentity: [Function: checkServerIdentity],
                      minDHSize: 1024,
                      maxRedirects: 21,
                      maxBodyLength: Infinity,
                      protocol: 'https:',
                      path: null,
                      method: 'POST',
                      headers: [Object: null prototype] {
                        Accept: 'application/json, text/plain, */*',
                        'Content-Type': 'application/x-www-form-urlencoded',
                        'User-Agent': 'axios/1.6.8',
                        'Content-Length': '119',
                        'Accept-Encoding': 'gzip, compress, deflate, br'
                      },
                      agents: { http: undefined, https: undefined },
                      auth: undefined,
                      family: undefined,
                      beforeRedirect: [Function: dispatchBeforeRedirect],
                      beforeRedirects: { proxy: [Function: beforeRedirect] },
                      hostname: 'accounts.spotify.com',
                      port: 443,
                      agent: undefined,
                      nativeProtocols: [Circular *5],
                      pathname: '/api/token',
                      _defaultAgent: [Circular *3],
                      host: 'accounts.spotify.com',
                      noDelay: true,
                      servername: 'accounts.spotify.com',
                      _agentKey: 'accounts.spotify.com:443:::::::::::::::::::::',
                      encoding: null,
                      singleUse: true
                    }
                  }
                ]
              },
              freeSockets: [Object: null prototype] {},
              keepAliveMsecs: 1000,
              keepAlive: false,
              maxSockets: Infinity,
              maxFreeSockets: 256,
              scheduling: 'lifo',
              maxTotalSockets: Infinity,
              totalSocketCount: 1,
              maxCachedSessions: 100,
              _sessionCache: {
                map: {
                  'www.wikidata.org:443:::::::::::::::::::::': <Buffer 30 82 08 7d 02 01 01 02 02 03 04 04 02 13 02 04 20 49 81 10 e3 ea 7d 84 9b e4 63 a1 f3 bf 02 aa db cd 63 84 bf 4f 51 15 cc 96 ff a3 1c ef 0f 60 a7 04 ... 2127 more bytes>
                },
                list: [ 'www.wikidata.org:443:::::::::::::::::::::' ]
              },
              [Symbol(kCapture)]: false
            },
            Server: [Function: Server],
            createServer: [Function: createServer],
            get: [Function: get],
            request: [Function: request]
          }
        },
        pathname: '/w/rest.php/oauth2/access_token',
        _defaultAgent: <ref *3> Agent {
          _events: [Object: null prototype] {
            free: [Function (anonymous)],
            newListener: [Function: maybeEnableKeylog]
          },
          _eventsCount: 2,
          _maxListeners: undefined,
          defaultPort: 443,
          protocol: 'https:',
          options: [Object: null prototype] { noDelay: true, path: null },
          requests: [Object: null prototype] {},
          sockets: [Object: null prototype] {
            'accounts.spotify.com:443:::::::::::::::::::::': [
              <ref *2> TLSSocket {
                _tlsOptions: {
                  allowHalfOpen: undefined,
                  pipe: false,
                  secureContext: SecureContext { context: SecureContext {} },
                  isServer: false,
                  requestCert: true,
                  rejectUnauthorized: true,
                  session: undefined,
                  ALPNProtocols: undefined,
                  requestOCSP: undefined,
                  enableTrace: undefined,
                  pskCallback: undefined,
                  highWaterMark: undefined,
                  onread: undefined,
                  signal: undefined
                },
                _secureEstablished: false,
                _securePending: false,
                _newSessionPending: false,
                _controlReleased: true,
                secureConnecting: true,
                _SNICallback: null,
                servername: null,
                alpnProtocol: null,
                authorized: false,
                authorizationError: null,
                encrypted: true,
                _events: [Object: null prototype] {
                  close: [
                    [Function: onSocketCloseDestroySSL],
                    [Function: bound onceWrapper] {
                      listener: [Function (anonymous)]
                    },
                    [Function: onClose],
                    [Function: socketCloseListener],
                    [Function: bound onceWrapper] {
                      listener: [Function: onClose]
                    }
                  ],
                  end: [
                    [Function: onConnectEnd],
                    [Function: onReadableStreamEnd],
                    [Function: socketOnEnd]
                  ],
                  newListener: [Function: keylogNewListener],
                  connect: [
                    [Function: bound onceWrapper] {
                      listener: [Function (anonymous)]
                    },
                    [Function: bound onceWrapper] {
                      listener: [Function (anonymous)]
                    },
                    [Function: bound onceWrapper] {
                      listener: [Function: connect]
                    }
                  ],
                  secure: [Function: onConnectSecure],
                  session: [Function (anonymous)],
                  free: [Function: onFree],
                  timeout: [Function: onTimeout],
                  agentRemove: [Function: onRemove],
                  error: [Function: socketErrorListener],
                  data: [Function: socketOnData],
                  drain: [Function: ondrain]
                },
                _eventsCount: 12,
                connecting: true,
                _hadError: false,
                _parent: null,
                _host: 'accounts.spotify.com',
                _closeAfterHandlingError: false,
                _readableState: ReadableState {
                  objectMode: false,
                  highWaterMark: 16384,
                  buffer: BufferList { head: null, tail: null, length: 0 },
                  length: 0,
                  pipes: [],
                  flowing: true,
                  ended: false,
                  endEmitted: false,
                  reading: true,
                  constructed: true,
                  sync: false,
                  needReadable: true,
                  emittedReadable: false,
                  readableListening: false,
                  resumeScheduled: false,
                  errorEmitted: false,
                  emitClose: false,
                  autoDestroy: true,
                  destroyed: false,
                  errored: null,
                  closed: false,
                  closeEmitted: false,
                  defaultEncoding: 'utf8',
                  awaitDrainWriters: null,
                  multiAwaitDrain: false,
                  readingMore: false,
                  dataEmitted: false,
                  decoder: null,
                  encoding: null,
                  [Symbol(kPaused)]: false
                },
                _maxListeners: undefined,
                _writableState: WritableState {
                  objectMode: false,
                  highWaterMark: 16384,
                  finalCalled: false,
                  needDrain: false,
                  ending: false,
                  ended: false,
                  finished: false,
                  destroyed: false,
                  decodeStrings: false,
                  defaultEncoding: 'utf8',
                  length: 378,
                  writing: true,
                  corked: 0,
                  sync: false,
                  bufferProcessing: false,
                  onwrite: [Function: bound onwrite],
                  writecb: [Function (anonymous)],
                  writelen: 378,
                  afterWriteTickInfo: null,
                  buffered: [],
                  bufferedIndex: 0,
                  allBuffers: true,
                  allNoop: true,
                  pendingcb: 1,
                  constructed: true,
                  prefinished: false,
                  errorEmitted: false,
                  emitClose: false,
                  autoDestroy: true,
                  errored: null,
                  closed: false,
                  closeEmitted: false,
                  [Symbol(kOnFinished)]: []
                },
                allowHalfOpen: false,
                _sockname: null,
                _pendingData: [
                  {
                    chunk: 'POST /api/token HTTP/1.1\r\n' +
                      'Accept: application/json, text/plain, */*\r\n' +
                      'Content-Type: application/x-www-form-urlencoded\r\n' +
                      'User-Agent: axios/1.6.8\r\n' +
                      'Content-Length: 119\r\n' +
                      'Accept-Encoding: gzip, compress, deflate, br\r\n' +
                      'Host: accounts.spotify.com\r\n' +
                      'Connection: close\r\n' +
                      '\r\n',
                    encoding: 'latin1',
                    callback: [Function: nop]
                  },
                  {
                    chunk: <Buffer 67 72 61 6e 74 5f 74 79 70 65 3d 63 6c 69 65 6e 74 5f 63 72 65 64 65 6e 74 69 61 6c 73 26 63 6c 69 65 6e 74 5f 69 64 3d 65 62 63 63 39 39 31 32 34 30 ... 69 more bytes>,
                    encoding: 'buffer',
                    callback: [Function (anonymous)]
                  },
                  allBuffers: false
                ],
                _pendingEncoding: '',
                server: undefined,
                _server: null,
                ssl: TLSWrap {
                  _parent: TCP {
                    reading: [Getter/Setter],
                    onconnection: null,
                    [Symbol(owner_symbol)]: [Circular *2]
                  },
                  _parentWrap: undefined,
                  _secureContext: SecureContext { context: SecureContext {} },
                  reading: false,
                  onkeylog: [Function: onkeylog],
                  onhandshakestart: {},
                  onhandshakedone: [Function (anonymous)],
                  onocspresponse: [Function: onocspresponse],
                  onnewsession: [Function: onnewsessionclient],
                  onerror: [Function: onerror],
                  [Symbol(owner_symbol)]: [Circular *2]
                },
                _requestCert: true,
                _rejectUnauthorized: true,
                parser: <ref *4> HTTPParser {
                  '0': null,
                  '1': [Function: parserOnHeaders],
                  '2': [Function: parserOnHeadersComplete],
                  '3': [Function: parserOnBody],
                  '4': [Function: parserOnMessageComplete],
                  '5': null,
                  '6': null,
                  _headers: [],
                  _url: '',
                  socket: [Circular *2],
                  incoming: null,
                  outgoing: <ref *6> ClientRequest {
                    _events: [Object: null prototype] {
                      response: [Function: bound onceWrapper] {
                        listener: [Function (anonymous)]
                      },
                      abort: [Function (anonymous)],
                      aborted: [Function (anonymous)],
                      connect: [Function (anonymous)],
                      error: [Function (anonymous)],
                      socket: [Function (anonymous)],
                      timeout: [Function (anonymous)]
                    },
                    _eventsCount: 7,
                    _maxListeners: undefined,
                    outputData: [],
                    outputSize: 0,
                    writable: true,
                    destroyed: false,
                    _last: true,
                    chunkedEncoding: false,
                    shouldKeepAlive: false,
                    maxRequestsOnConnectionReached: false,
                    _defaultKeepAlive: true,
                    useChunkedEncodingByDefault: true,
                    sendDate: false,
                    _removedConnection: false,
                    _removedContLen: false,
                    _removedTE: false,
                    strictContentLength: false,
                    _contentLength: '119',
                    _hasBody: true,
                    _trailer: '',
                    finished: false,
                    _headerSent: true,
                    _closed: false,
                    socket: [Circular *2],
                    _header: 'POST /api/token HTTP/1.1\r\n' +
                      'Accept: application/json, text/plain, */*\r\n' +
                      'Content-Type: application/x-www-form-urlencoded\r\n' +
                      'User-Agent: axios/1.6.8\r\n' +
                      'Content-Length: 119\r\n' +
                      'Accept-Encoding: gzip, compress, deflate, br\r\n' +
                      'Host: accounts.spotify.com\r\n' +
                      'Connection: close\r\n' +
                      '\r\n',
                    _keepAliveTimeout: 0,
                    _onPendingData: [Function: nop],
                    agent: [Circular *3],
                    socketPath: undefined,
                    method: 'POST',
                    maxHeaderSize: undefined,
                    insecureHTTPParser: undefined,
                    joinDuplicateHeaders: undefined,
                    path: '/api/token',
                    _ended: false,
                    res: null,
                    aborted: false,
                    timeoutCb: null,
                    upgradeOrConnect: false,
                    parser: [Circular *4],
                    maxHeadersCount: null,
                    reusedSocket: false,
                    host: 'accounts.spotify.com',
                    protocol: 'https:',
                    _redirectable: Writable {
                      _writableState: WritableState {
                        objectMode: false,
                        highWaterMark: 16384,
                        finalCalled: false,
                        needDrain: false,
                        ending: false,
                        ended: false,
                        finished: false,
                        destroyed: false,
                        decodeStrings: true,
                        defaultEncoding: 'utf8',
                        length: 0,
                        writing: false,
                        corked: 0,
                        sync: true,
                        bufferProcessing: false,
                        onwrite: [Function: bound onwrite],
                        writecb: null,
                        writelen: 0,
                        afterWriteTickInfo: null,
                        buffered: [],
                        bufferedIndex: 0,
                        allBuffers: true,
                        allNoop: true,
                        pendingcb: 0,
                        constructed: true,
                        prefinished: false,
                        errorEmitted: false,
                        emitClose: true,
                        autoDestroy: true,
                        errored: null,
                        closed: false,
                        closeEmitted: false,
                        [Symbol(kOnFinished)]: []
                      },
                      _events: [Object: null prototype] {
                        response: [Function: handleResponse],
                        error: [Function: handleRequestError],
                        socket: [Function: handleRequestSocket]
                      },
                      _eventsCount: 3,
                      _maxListeners: undefined,
                      _options: {
                        maxRedirects: 21,
                        maxBodyLength: Infinity,
                        protocol: 'https:',
                        path: '/api/token',
                        method: 'POST',
                        headers: [Object: null prototype] {
                          Accept: 'application/json, text/plain, */*',
                          'Content-Type': 'application/x-www-form-urlencoded',
                          'User-Agent': 'axios/1.6.8',
                          'Content-Length': '119',
                          'Accept-Encoding': 'gzip, compress, deflate, br'
                        },
                        agents: { http: undefined, https: undefined },
                        auth: undefined,
                        family: undefined,
                        beforeRedirect: [Function: dispatchBeforeRedirect],
                        beforeRedirects: { proxy: [Function: beforeRedirect] },
                        hostname: 'accounts.spotify.com',
                        port: '',
                        agent: undefined,
                        nativeProtocols: <ref *5> {
                          'http:': {
                            _connectionListener: [Function: connectionListener],
                            METHODS: [
                              'ACL',         'BIND',       'CHECKOUT',
                              'CONNECT',     'COPY',       'DELETE',
                              'GET',         'HEAD',       'LINK',
                              'LOCK',        'M-SEARCH',   'MERGE',
                              'MKACTIVITY',  'MKCALENDAR', 'MKCOL',
                              'MOVE',        'NOTIFY',     'OPTIONS',
                              'PATCH',       'POST',       'PROPFIND',
                              'PROPPATCH',   'PURGE',      'PUT',
                              'REBIND',      'REPORT',     'SEARCH',
                              'SOURCE',      'SUBSCRIBE',  'TRACE',
                              'UNBIND',      'UNLINK',     'UNLOCK',
                              'UNSUBSCRIBE'
                            ],
                            STATUS_CODES: {
                              '100': 'Continue',
                              '101': 'Switching Protocols',
                              '102': 'Processing',
                              '103': 'Early Hints',
                              '200': 'OK',
                              '201': 'Created',
                              '202': 'Accepted',
                              '203': 'Non-Authoritative Information',
                              '204': 'No Content',
                              '205': 'Reset Content',
                              '206': 'Partial Content',
                              '207': 'Multi-Status',
                              '208': 'Already Reported',
                              '226': 'IM Used',
                              '300': 'Multiple Choices',
                              '301': 'Moved Permanently',
                              '302': 'Found',
                              '303': 'See Other',
                              '304': 'Not Modified',
                              '305': 'Use Proxy',
                              '307': 'Temporary Redirect',
                              '308': 'Permanent Redirect',
                              '400': 'Bad Request',
                              '401': 'Unauthorized',
                              '402': 'Payment Required',
                              '403': 'Forbidden',
                              '404': 'Not Found',
                              '405': 'Method Not Allowed',
                              '406': 'Not Acceptable',
                              '407': 'Proxy Authentication Required',
                              '408': 'Request Timeout',
                              '409': 'Conflict',
                              '410': 'Gone',
                              '411': 'Length Required',
                              '412': 'Precondition Failed',
                              '413': 'Payload Too Large',
                              '414': 'URI Too Long',
                              '415': 'Unsupported Media Type',
                              '416': 'Range Not Satisfiable',
                              '417': 'Expectation Failed',
                              '418': "I'm a Teapot",
                              '421': 'Misdirected Request',
                              '422': 'Unprocessable Entity',
                              '423': 'Locked',
                              '424': 'Failed Dependency',
                              '425': 'Too Early',
                              '426': 'Upgrade Required',
                              '428': 'Precondition Required',
                              '429': 'Too Many Requests',
                              '431': 'Request Header Fields Too Large',
                              '451': 'Unavailable For Legal Reasons',
                              '500': 'Internal Server Error',
                              '501': 'Not Implemented',
                              '502': 'Bad Gateway',
                              '503': 'Service Unavailable',
                              '504': 'Gateway Timeout',
                              '505': 'HTTP Version Not Supported',
                              '506': 'Variant Also Negotiates',
                              '507': 'Insufficient Storage',
                              '508': 'Loop Detected',
                              '509': 'Bandwidth Limit Exceeded',
                              '510': 'Not Extended',
                              '511': 'Network Authentication Required'
                            },
                            Agent: [Function: Agent] {
                              defaultMaxSockets: Infinity
                            },
                            ClientRequest: [Function: ClientRequest],
                            IncomingMessage: [Function: IncomingMessage],
                            OutgoingMessage: [Function: OutgoingMessage],
                            Server: [Function: Server],
                            ServerResponse: [Function: ServerResponse],
                            createServer: [Function: createServer],
                            validateHeaderName: [Function: __node_internal_],
                            validateHeaderValue: [Function: __node_internal_],
                            get: [Function: get],
                            request: [Function: request],
                            setMaxIdleHTTPParsers: [Function: setMaxIdleHTTPParsers],
                            maxHeaderSize: [Getter],
                            globalAgent: [Getter/Setter]
                          },
                          'https:': {
                            Agent: [Function: Agent],
                            globalAgent: [Circular *3],
                            Server: [Function: Server],
                            createServer: [Function: createServer],
                            get: [Function: get],
                            request: [Function: request]
                          }
                        },
                        pathname: '/api/token'
                      },
                      _ended: false,
                      _ending: true,
                      _redirectCount: 0,
                      _redirects: [],
                      _requestBodyLength: 119,
                      _requestBodyBuffers: [
                        {
                          data: <Buffer 67 72 61 6e 74 5f 74 79 70 65 3d 63 6c 69 65 6e 74 5f 63 72 65 64 65 6e 74 69 61 6c 73 26 63 6c 69 65 6e 74 5f 69 64 3d 65 62 63 63 39 39 31 32 34 30 ... 69 more bytes>,
                          encoding: undefined
                        }
                      ],
                      _onNativeResponse: [Function (anonymous)],
                      _currentRequest: [Circular *6],
                      _currentUrl: 'https://accounts.spotify.com/api/token',
                      [Symbol(kCapture)]: false
                    },
                    [Symbol(kCapture)]: false,
                    [Symbol(kBytesWritten)]: 0,
                    [Symbol(kEndCalled)]: false,
                    [Symbol(kNeedDrain)]: false,
                    [Symbol(corked)]: 0,
                    [Symbol(kOutHeaders)]: [Object: null prototype] {
                      accept: [ 'Accept', 'application/json, text/plain, */*' ],
                      'content-type': [
                        'Content-Type',
                        'application/x-www-form-urlencoded'
                      ],
                      'user-agent': [ 'User-Agent', 'axios/1.6.8' ],
                      'content-length': [ 'Content-Length', '119' ],
                      'accept-encoding': [
                        'Accept-Encoding',
                        'gzip, compress, deflate, br'
                      ],
                      host: [ 'Host', 'accounts.spotify.com' ]
                    },
                    [Symbol(errored)]: null,
                    [Symbol(kUniqueHeaders)]: null
                  },
                  maxHeaderPairs: 2000,
                  _consumed: false,
                  onIncoming: [Function: parserOnIncomingClient],
                  joinDuplicateHeaders: undefined,
                  [Symbol(resource_symbol)]: HTTPClientAsyncResource {
                    type: 'HTTPINCOMINGMESSAGE',
                    req: <ref *6> ClientRequest {
                      _events: [Object: null prototype] {
                        response: [Function: bound onceWrapper] {
                          listener: [Function (anonymous)]
                        },
                        abort: [Function (anonymous)],
                        aborted: [Function (anonymous)],
                        connect: [Function (anonymous)],
                        error: [Function (anonymous)],
                        socket: [Function (anonymous)],
                        timeout: [Function (anonymous)]
                      },
                      _eventsCount: 7,
                      _maxListeners: undefined,
                      outputData: [],
                      outputSize: 0,
                      writable: true,
                      destroyed: false,
                      _last: true,
                      chunkedEncoding: false,
                      shouldKeepAlive: false,
                      maxRequestsOnConnectionReached: false,
                      _defaultKeepAlive: true,
                      useChunkedEncodingByDefault: true,
                      sendDate: false,
                      _removedConnection: false,
                      _removedContLen: false,
                      _removedTE: false,
                      strictContentLength: false,
                      _contentLength: '119',
                      _hasBody: true,
                      _trailer: '',
                      finished: false,
                      _headerSent: true,
                      _closed: false,
                      socket: [Circular *2],
                      _header: 'POST /api/token HTTP/1.1\r\n' +
                        'Accept: application/json, text/plain, */*\r\n' +
                        'Content-Type: application/x-www-form-urlencoded\r\n' +
                        'User-Agent: axios/1.6.8\r\n' +
                        'Content-Length: 119\r\n' +
                        'Accept-Encoding: gzip, compress, deflate, br\r\n' +
                        'Host: accounts.spotify.com\r\n' +
                        'Connection: close\r\n' +
                        '\r\n',
                      _keepAliveTimeout: 0,
                      _onPendingData: [Function: nop],
                      agent: [Circular *3],
                      socketPath: undefined,
                      method: 'POST',
                      maxHeaderSize: undefined,
                      insecureHTTPParser: undefined,
                      joinDuplicateHeaders: undefined,
                      path: '/api/token',
                      _ended: false,
                      res: null,
                      aborted: false,
                      timeoutCb: null,
                      upgradeOrConnect: false,
                      parser: [Circular *4],
                      maxHeadersCount: null,
                      reusedSocket: false,
                      host: 'accounts.spotify.com',
                      protocol: 'https:',
                      _redirectable: Writable {
                        _writableState: WritableState {
                          objectMode: false,
                          highWaterMark: 16384,
                          finalCalled: false,
                          needDrain: false,
                          ending: false,
                          ended: false,
                          finished: false,
                          destroyed: false,
                          decodeStrings: true,
                          defaultEncoding: 'utf8',
                          length: 0,
                          writing: false,
                          corked: 0,
                          sync: true,
                          bufferProcessing: false,
                          onwrite: [Function: bound onwrite],
                          writecb: null,
                          writelen: 0,
                          afterWriteTickInfo: null,
                          buffered: [],
                          bufferedIndex: 0,
                          allBuffers: true,
                          allNoop: true,
                          pendingcb: 0,
                          constructed: true,
                          prefinished: false,
                          errorEmitted: false,
                          emitClose: true,
                          autoDestroy: true,
                          errored: null,
                          closed: false,
                          closeEmitted: false,
                          [Symbol(kOnFinished)]: []
                        },
                        _events: [Object: null prototype] {
                          response: [Function: handleResponse],
                          error: [Function: handleRequestError],
                          socket: [Function: handleRequestSocket]
                        },
                        _eventsCount: 3,
                        _maxListeners: undefined,
                        _options: {
                          maxRedirects: 21,
                          maxBodyLength: Infinity,
                          protocol: 'https:',
                          path: '/api/token',
                          method: 'POST',
                          headers: [Object: null prototype] {
                            Accept: 'application/json, text/plain, */*',
                            'Content-Type': 'application/x-www-form-urlencoded',
                            'User-Agent': 'axios/1.6.8',
                            'Content-Length': '119',
                            'Accept-Encoding': 'gzip, compress, deflate, br'
                          },
                          agents: { http: undefined, https: undefined },
                          auth: undefined,
                          family: undefined,
                          beforeRedirect: [Function: dispatchBeforeRedirect],
                          beforeRedirects: { proxy: [Function: beforeRedirect] },
                          hostname: 'accounts.spotify.com',
                          port: '',
                          agent: undefined,
                          nativeProtocols: <ref *5> {
                            'http:': {
                              _connectionListener: [Function: connectionListener],
                              METHODS: [
                                'ACL',         'BIND',       'CHECKOUT',
                                'CONNECT',     'COPY',       'DELETE',
                                'GET',         'HEAD',       'LINK',
                                'LOCK',        'M-SEARCH',   'MERGE',
                                'MKACTIVITY',  'MKCALENDAR', 'MKCOL',
                                'MOVE',        'NOTIFY',     'OPTIONS',
                                'PATCH',       'POST',       'PROPFIND',
                                'PROPPATCH',   'PURGE',      'PUT',
                                'REBIND',      'REPORT',     'SEARCH',
                                'SOURCE',      'SUBSCRIBE',  'TRACE',
                                'UNBIND',      'UNLINK',     'UNLOCK',
                                'UNSUBSCRIBE'
                              ],
                              STATUS_CODES: {
                                '100': 'Continue',
                                '101': 'Switching Protocols',
                                '102': 'Processing',
                                '103': 'Early Hints',
                                '200': 'OK',
                                '201': 'Created',
                                '202': 'Accepted',
                                '203': 'Non-Authoritative Information',
                                '204': 'No Content',
                                '205': 'Reset Content',
                                '206': 'Partial Content',
                                '207': 'Multi-Status',
                                '208': 'Already Reported',
                                '226': 'IM Used',
                                '300': 'Multiple Choices',
                                '301': 'Moved Permanently',
                                '302': 'Found',
                                '303': 'See Other',
                                '304': 'Not Modified',
                                '305': 'Use Proxy',
                                '307': 'Temporary Redirect',
                                '308': 'Permanent Redirect',
                                '400': 'Bad Request',
                                '401': 'Unauthorized',
                                '402': 'Payment Required',
                                '403': 'Forbidden',
                                '404': 'Not Found',
                                '405': 'Method Not Allowed',
                                '406': 'Not Acceptable',
                                '407': 'Proxy Authentication Required',
                                '408': 'Request Timeout',
                                '409': 'Conflict',
                                '410': 'Gone',
                                '411': 'Length Required',
                                '412': 'Precondition Failed',
                                '413': 'Payload Too Large',
                                '414': 'URI Too Long',
                                '415': 'Unsupported Media Type',
                                '416': 'Range Not Satisfiable',
                                '417': 'Expectation Failed',
                                '418': "I'm a Teapot",
                                '421': 'Misdirected Request',
                                '422': 'Unprocessable Entity',
                                '423': 'Locked',
                                '424': 'Failed Dependency',
                                '425': 'Too Early',
                                '426': 'Upgrade Required',
                                '428': 'Precondition Required',
                                '429': 'Too Many Requests',
                                '431': 'Request Header Fields Too Large',
                                '451': 'Unavailable For Legal Reasons',
                                '500': 'Internal Server Error',
                                '501': 'Not Implemented',
                                '502': 'Bad Gateway',
                                '503': 'Service Unavailable',
                                '504': 'Gateway Timeout',
                                '505': 'HTTP Version Not Supported',
                                '506': 'Variant Also Negotiates',
                                '507': 'Insufficient Storage',
                                '508': 'Loop Detected',
                                '509': 'Bandwidth Limit Exceeded',
                                '510': 'Not Extended',
                                '511': 'Network Authentication Required'
                              },
                              Agent: [Function: Agent] {
                                defaultMaxSockets: Infinity
                              },
                              ClientRequest: [Function: ClientRequest],
                              IncomingMessage: [Function: IncomingMessage],
                              OutgoingMessage: [Function: OutgoingMessage],
                              Server: [Function: Server],
                              ServerResponse: [Function: ServerResponse],
                              createServer: [Function: createServer],
                              validateHeaderName: [Function: __node_internal_],
                              validateHeaderValue: [Function: __node_internal_],
                              get: [Function: get],
                              request: [Function: request],
                              setMaxIdleHTTPParsers: [Function: setMaxIdleHTTPParsers],
                              maxHeaderSize: [Getter],
                              globalAgent: [Getter/Setter]
                            },
                            'https:': {
                              Agent: [Function: Agent],
                              globalAgent: [Circular *3],
                              Server: [Function: Server],
                              createServer: [Function: createServer],
                              get: [Function: get],
                              request: [Function: request]
                            }
                          },
                          pathname: '/api/token'
                        },
                        _ended: false,
                        _ending: true,
                        _redirectCount: 0,
                        _redirects: [],
                        _requestBodyLength: 119,
                        _requestBodyBuffers: [
                          {
                            data: <Buffer 67 72 61 6e 74 5f 74 79 70 65 3d 63 6c 69 65 6e 74 5f 63 72 65 64 65 6e 74 69 61 6c 73 26 63 6c 69 65 6e 74 5f 69 64 3d 65 62 63 63 39 39 31 32 34 30 ... 69 more bytes>,
                            encoding: undefined
                          }
                        ],
                        _onNativeResponse: [Function (anonymous)],
                        _currentRequest: [Circular *6],
                        _currentUrl: 'https://accounts.spotify.com/api/token',
                        [Symbol(kCapture)]: false
                      },
                      [Symbol(kCapture)]: false,
                      [Symbol(kBytesWritten)]: 0,
                      [Symbol(kEndCalled)]: false,
                      [Symbol(kNeedDrain)]: false,
                      [Symbol(corked)]: 0,
                      [Symbol(kOutHeaders)]: [Object: null prototype] {
                        accept: [
                          'Accept',
                          'application/json, text/plain, */*'
                        ],
                        'content-type': [
                          'Content-Type',
                          'application/x-www-form-urlencoded'
                        ],
                        'user-agent': [ 'User-Agent', 'axios/1.6.8' ],
                        'content-length': [ 'Content-Length', '119' ],
                        'accept-encoding': [
                          'Accept-Encoding',
                          'gzip, compress, deflate, br'
                        ],
                        host: [ 'Host', 'accounts.spotify.com' ]
                      },
                      [Symbol(errored)]: null,
                      [Symbol(kUniqueHeaders)]: null
                    }
                  }
                },
                _httpMessage: <ref *6> ClientRequest {
                  _events: [Object: null prototype] {
                    response: [Function: bound onceWrapper] {
                      listener: [Function (anonymous)]
                    },
                    abort: [Function (anonymous)],
                    aborted: [Function (anonymous)],
                    connect: [Function (anonymous)],
                    error: [Function (anonymous)],
                    socket: [Function (anonymous)],
                    timeout: [Function (anonymous)]
                  },
                  _eventsCount: 7,
                  _maxListeners: undefined,
                  outputData: [],
                  outputSize: 0,
                  writable: true,
                  destroyed: false,
                  _last: true,
                  chunkedEncoding: false,
                  shouldKeepAlive: false,
                  maxRequestsOnConnectionReached: false,
                  _defaultKeepAlive: true,
                  useChunkedEncodingByDefault: true,
                  sendDate: false,
                  _removedConnection: false,
                  _removedContLen: false,
                  _removedTE: false,
                  strictContentLength: false,
                  _contentLength: '119',
                  _hasBody: true,
                  _trailer: '',
                  finished: false,
                  _headerSent: true,
                  _closed: false,
                  socket: [Circular *2],
                  _header: 'POST /api/token HTTP/1.1\r\n' +
                    'Accept: application/json, text/plain, */*\r\n' +
                    'Content-Type: application/x-www-form-urlencoded\r\n' +
                    'User-Agent: axios/1.6.8\r\n' +
                    'Content-Length: 119\r\n' +
                    'Accept-Encoding: gzip, compress, deflate, br\r\n' +
                    'Host: accounts.spotify.com\r\n' +
                    'Connection: close\r\n' +
                    '\r\n',
                  _keepAliveTimeout: 0,
                  _onPendingData: [Function: nop],
                  agent: [Circular *3],
                  socketPath: undefined,
                  method: 'POST',
                  maxHeaderSize: undefined,
                  insecureHTTPParser: undefined,
                  joinDuplicateHeaders: undefined,
                  path: '/api/token',
                  _ended: false,
                  res: null,
                  aborted: false,
                  timeoutCb: null,
                  upgradeOrConnect: false,
                  parser: <ref *4> HTTPParser {
                    '0': null,
                    '1': [Function: parserOnHeaders],
                    '2': [Function: parserOnHeadersComplete],
                    '3': [Function: parserOnBody],
                    '4': [Function: parserOnMessageComplete],
                    '5': null,
                    '6': null,
                    _headers: [],
                    _url: '',
                    socket: [Circular *2],
                    incoming: null,
                    outgoing: [Circular *6],
                    maxHeaderPairs: 2000,
                    _consumed: false,
                    onIncoming: [Function: parserOnIncomingClient],
                    joinDuplicateHeaders: undefined,
                    [Symbol(resource_symbol)]: HTTPClientAsyncResource {
                      type: 'HTTPINCOMINGMESSAGE',
                      req: [Circular *6]
                    }
                  },
                  maxHeadersCount: null,
                  reusedSocket: false,
                  host: 'accounts.spotify.com',
                  protocol: 'https:',
                  _redirectable: Writable {
                    _writableState: WritableState {
                      objectMode: false,
                      highWaterMark: 16384,
                      finalCalled: false,
                      needDrain: false,
                      ending: false,
                      ended: false,
                      finished: false,
                      destroyed: false,
                      decodeStrings: true,
                      defaultEncoding: 'utf8',
                      length: 0,
                      writing: false,
                      corked: 0,
                      sync: true,
                      bufferProcessing: false,
                      onwrite: [Function: bound onwrite],
                      writecb: null,
                      writelen: 0,
                      afterWriteTickInfo: null,
                      buffered: [],
                      bufferedIndex: 0,
                      allBuffers: true,
                      allNoop: true,
                      pendingcb: 0,
                      constructed: true,
                      prefinished: false,
                      errorEmitted: false,
                      emitClose: true,
                      autoDestroy: true,
                      errored: null,
                      closed: false,
                      closeEmitted: false,
                      [Symbol(kOnFinished)]: []
                    },
                    _events: [Object: null prototype] {
                      response: [Function: handleResponse],
                      error: [Function: handleRequestError],
                      socket: [Function: handleRequestSocket]
                    },
                    _eventsCount: 3,
                    _maxListeners: undefined,
                    _options: {
                      maxRedirects: 21,
                      maxBodyLength: Infinity,
                      protocol: 'https:',
                      path: '/api/token',
                      method: 'POST',
                      headers: [Object: null prototype] {
                        Accept: 'application/json, text/plain, */*',
                        'Content-Type': 'application/x-www-form-urlencoded',
                        'User-Agent': 'axios/1.6.8',
                        'Content-Length': '119',
                        'Accept-Encoding': 'gzip, compress, deflate, br'
                      },
                      agents: { http: undefined, https: undefined },
                      auth: undefined,
                      family: undefined,
                      beforeRedirect: [Function: dispatchBeforeRedirect],
                      beforeRedirects: { proxy: [Function: beforeRedirect] },
                      hostname: 'accounts.spotify.com',
                      port: '',
                      agent: undefined,
                      nativeProtocols: <ref *5> {
                        'http:': {
                          _connectionListener: [Function: connectionListener],
                          METHODS: [
                            'ACL',         'BIND',       'CHECKOUT',
                            'CONNECT',     'COPY',       'DELETE',
                            'GET',         'HEAD',       'LINK',
                            'LOCK',        'M-SEARCH',   'MERGE',
                            'MKACTIVITY',  'MKCALENDAR', 'MKCOL',
                            'MOVE',        'NOTIFY',     'OPTIONS',
                            'PATCH',       'POST',       'PROPFIND',
                            'PROPPATCH',   'PURGE',      'PUT',
                            'REBIND',      'REPORT',     'SEARCH',
                            'SOURCE',      'SUBSCRIBE',  'TRACE',
                            'UNBIND',      'UNLINK',     'UNLOCK',
                            'UNSUBSCRIBE'
                          ],
                          STATUS_CODES: {
                            '100': 'Continue',
                            '101': 'Switching Protocols',
                            '102': 'Processing',
                            '103': 'Early Hints',
                            '200': 'OK',
                            '201': 'Created',
                            '202': 'Accepted',
                            '203': 'Non-Authoritative Information',
                            '204': 'No Content',
                            '205': 'Reset Content',
                            '206': 'Partial Content',
                            '207': 'Multi-Status',
                            '208': 'Already Reported',
                            '226': 'IM Used',
                            '300': 'Multiple Choices',
                            '301': 'Moved Permanently',
                            '302': 'Found',
                            '303': 'See Other',
                            '304': 'Not Modified',
                            '305': 'Use Proxy',
                            '307': 'Temporary Redirect',
                            '308': 'Permanent Redirect',
                            '400': 'Bad Request',
                            '401': 'Unauthorized',
                            '402': 'Payment Required',
                            '403': 'Forbidden',
                            '404': 'Not Found',
                            '405': 'Method Not Allowed',
                            '406': 'Not Acceptable',
                            '407': 'Proxy Authentication Required',
                            '408': 'Request Timeout',
                            '409': 'Conflict',
                            '410': 'Gone',
                            '411': 'Length Required',
                            '412': 'Precondition Failed',
                            '413': 'Payload Too Large',
                            '414': 'URI Too Long',
                            '415': 'Unsupported Media Type',
                            '416': 'Range Not Satisfiable',
                            '417': 'Expectation Failed',
                            '418': "I'm a Teapot",
                            '421': 'Misdirected Request',
                            '422': 'Unprocessable Entity',
                            '423': 'Locked',
                            '424': 'Failed Dependency',
                            '425': 'Too Early',
                            '426': 'Upgrade Required',
                            '428': 'Precondition Required',
                            '429': 'Too Many Requests',
                            '431': 'Request Header Fields Too Large',
                            '451': 'Unavailable For Legal Reasons',
                            '500': 'Internal Server Error',
                            '501': 'Not Implemented',
                            '502': 'Bad Gateway',
                            '503': 'Service Unavailable',
                            '504': 'Gateway Timeout',
                            '505': 'HTTP Version Not Supported',
                            '506': 'Variant Also Negotiates',
                            '507': 'Insufficient Storage',
                            '508': 'Loop Detected',
                            '509': 'Bandwidth Limit Exceeded',
                            '510': 'Not Extended',
                            '511': 'Network Authentication Required'
                          },
                          Agent: [Function: Agent] {
                            defaultMaxSockets: Infinity
                          },
                          ClientRequest: [Function: ClientRequest],
                          IncomingMessage: [Function: IncomingMessage],
                          OutgoingMessage: [Function: OutgoingMessage],
                          Server: [Function: Server],
                          ServerResponse: [Function: ServerResponse],
                          createServer: [Function: createServer],
                          validateHeaderName: [Function: __node_internal_],
                          validateHeaderValue: [Function: __node_internal_],
                          get: [Function: get],
                          request: [Function: request],
                          setMaxIdleHTTPParsers: [Function: setMaxIdleHTTPParsers],
                          maxHeaderSize: [Getter],
                          globalAgent: [Getter/Setter]
                        },
                        'https:': {
                          Agent: [Function: Agent],
                          globalAgent: [Circular *3],
                          Server: [Function: Server],
                          createServer: [Function: createServer],
                          get: [Function: get],
                          request: [Function: request]
                        }
                      },
                      pathname: '/api/token'
                    },
                    _ended: false,
                    _ending: true,
                    _redirectCount: 0,
                    _redirects: [],
                    _requestBodyLength: 119,
                    _requestBodyBuffers: [
                      {
                        data: <Buffer 67 72 61 6e 74 5f 74 79 70 65 3d 63 6c 69 65 6e 74 5f 63 72 65 64 65 6e 74 69 61 6c 73 26 63 6c 69 65 6e 74 5f 69 64 3d 65 62 63 63 39 39 31 32 34 30 ... 69 more bytes>,
                        encoding: undefined
                      }
                    ],
                    _onNativeResponse: [Function (anonymous)],
                    _currentRequest: [Circular *6],
                    _currentUrl: 'https://accounts.spotify.com/api/token',
                    [Symbol(kCapture)]: false
                  },
                  [Symbol(kCapture)]: false,
                  [Symbol(kBytesWritten)]: 0,
                  [Symbol(kEndCalled)]: false,
                  [Symbol(kNeedDrain)]: false,
                  [Symbol(corked)]: 0,
                  [Symbol(kOutHeaders)]: [Object: null prototype] {
                    accept: [ 'Accept', 'application/json, text/plain, */*' ],
                    'content-type': [
                      'Content-Type',
                      'application/x-www-form-urlencoded'
                    ],
                    'user-agent': [ 'User-Agent', 'axios/1.6.8' ],
                    'content-length': [ 'Content-Length', '119' ],
                    'accept-encoding': [
                      'Accept-Encoding',
                      'gzip, compress, deflate, br'
                    ],
                    host: [ 'Host', 'accounts.spotify.com' ]
                  },
                  [Symbol(errored)]: null,
                  [Symbol(kUniqueHeaders)]: null
                },
                [Symbol(res)]: TLSWrap {
                  _parent: TCP {
                    reading: [Getter/Setter],
                    onconnection: null,
                    [Symbol(owner_symbol)]: [Circular *2]
                  },
                  _parentWrap: undefined,
                  _secureContext: SecureContext { context: SecureContext {} },
                  reading: false,
                  onkeylog: [Function: onkeylog],
                  onhandshakestart: {},
                  onhandshakedone: [Function (anonymous)],
                  onocspresponse: [Function: onocspresponse],
                  onnewsession: [Function: onnewsessionclient],
                  onerror: [Function: onerror],
                  [Symbol(owner_symbol)]: [Circular *2]
                },
                [Symbol(verified)]: false,
                [Symbol(pendingSession)]: null,
                [Symbol(async_id_symbol)]: 6,
                [Symbol(kHandle)]: TLSWrap {
                  _parent: TCP {
                    reading: [Getter/Setter],
                    onconnection: null,
                    [Symbol(owner_symbol)]: [Circular *2]
                  },
                  _parentWrap: undefined,
                  _secureContext: SecureContext { context: SecureContext {} },
                  reading: false,
                  onkeylog: [Function: onkeylog],
                  onhandshakestart: {},
                  onhandshakedone: [Function (anonymous)],
                  onocspresponse: [Function: onocspresponse],
                  onnewsession: [Function: onnewsessionclient],
                  onerror: [Function: onerror],
                  [Symbol(owner_symbol)]: [Circular *2]
                },
                [Symbol(lastWriteQueueSize)]: 0,
                [Symbol(timeout)]: null,
                [Symbol(kBuffer)]: null,
                [Symbol(kBufferCb)]: null,
                [Symbol(kBufferGen)]: null,
                [Symbol(kCapture)]: false,
                [Symbol(kSetNoDelay)]: false,
                [Symbol(kSetKeepAlive)]: true,
                [Symbol(kSetKeepAliveInitialDelay)]: 60,
                [Symbol(kBytesRead)]: 0,
                [Symbol(kBytesWritten)]: 0,
                [Symbol(connect-options)]: {
                  rejectUnauthorized: true,
                  ciphers: 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
                  checkServerIdentity: [Function: checkServerIdentity],
                  minDHSize: 1024,
                  maxRedirects: 21,
                  maxBodyLength: Infinity,
                  protocol: 'https:',
                  path: null,
                  method: 'POST',
                  headers: [Object: null prototype] {
                    Accept: 'application/json, text/plain, */*',
                    'Content-Type': 'application/x-www-form-urlencoded',
                    'User-Agent': 'axios/1.6.8',
                    'Content-Length': '119',
                    'Accept-Encoding': 'gzip, compress, deflate, br'
                  },
                  agents: { http: undefined, https: undefined },
                  auth: undefined,
                  family: undefined,
                  beforeRedirect: [Function: dispatchBeforeRedirect],
                  beforeRedirects: { proxy: [Function: beforeRedirect] },
                  hostname: 'accounts.spotify.com',
                  port: 443,
                  agent: undefined,
                  nativeProtocols: <ref *5> {
                    'http:': {
                      _connectionListener: [Function: connectionListener],
                      METHODS: [
                        'ACL',         'BIND',       'CHECKOUT',
                        'CONNECT',     'COPY',       'DELETE',
                        'GET',         'HEAD',       'LINK',
                        'LOCK',        'M-SEARCH',   'MERGE',
                        'MKACTIVITY',  'MKCALENDAR', 'MKCOL',
                        'MOVE',        'NOTIFY',     'OPTIONS',
                        'PATCH',       'POST',       'PROPFIND',
                        'PROPPATCH',   'PURGE',      'PUT',
                        'REBIND',      'REPORT',     'SEARCH',
                        'SOURCE',      'SUBSCRIBE',  'TRACE',
                        'UNBIND',      'UNLINK',     'UNLOCK',
                        'UNSUBSCRIBE'
                      ],
                      STATUS_CODES: {
                        '100': 'Continue',
                        '101': 'Switching Protocols',
                        '102': 'Processing',
                        '103': 'Early Hints',
                        '200': 'OK',
                        '201': 'Created',
                        '202': 'Accepted',
                        '203': 'Non-Authoritative Information',
                        '204': 'No Content',
                        '205': 'Reset Content',
                        '206': 'Partial Content',
                        '207': 'Multi-Status',
                        '208': 'Already Reported',
                        '226': 'IM Used',
                        '300': 'Multiple Choices',
                        '301': 'Moved Permanently',
                        '302': 'Found',
                        '303': 'See Other',
                        '304': 'Not Modified',
                        '305': 'Use Proxy',
                        '307': 'Temporary Redirect',
                        '308': 'Permanent Redirect',
                        '400': 'Bad Request',
                        '401': 'Unauthorized',
                        '402': 'Payment Required',
                        '403': 'Forbidden',
                        '404': 'Not Found',
                        '405': 'Method Not Allowed',
                        '406': 'Not Acceptable',
                        '407': 'Proxy Authentication Required',
                        '408': 'Request Timeout',
                        '409': 'Conflict',
                        '410': 'Gone',
                        '411': 'Length Required',
                        '412': 'Precondition Failed',
                        '413': 'Payload Too Large',
                        '414': 'URI Too Long',
                        '415': 'Unsupported Media Type',
                        '416': 'Range Not Satisfiable',
                        '417': 'Expectation Failed',
                        '418': "I'm a Teapot",
                        '421': 'Misdirected Request',
                        '422': 'Unprocessable Entity',
                        '423': 'Locked',
                        '424': 'Failed Dependency',
                        '425': 'Too Early',
                        '426': 'Upgrade Required',
                        '428': 'Precondition Required',
                        '429': 'Too Many Requests',
                        '431': 'Request Header Fields Too Large',
                        '451': 'Unavailable For Legal Reasons',
                        '500': 'Internal Server Error',
                        '501': 'Not Implemented',
                        '502': 'Bad Gateway',
                        '503': 'Service Unavailable',
                        '504': 'Gateway Timeout',
                        '505': 'HTTP Version Not Supported',
                        '506': 'Variant Also Negotiates',
                        '507': 'Insufficient Storage',
                        '508': 'Loop Detected',
                        '509': 'Bandwidth Limit Exceeded',
                        '510': 'Not Extended',
                        '511': 'Network Authentication Required'
                      },
                      Agent: [Function: Agent] { defaultMaxSockets: Infinity },
                      ClientRequest: [Function: ClientRequest],
                      IncomingMessage: [Function: IncomingMessage],
                      OutgoingMessage: [Function: OutgoingMessage],
                      Server: [Function: Server],
                      ServerResponse: [Function: ServerResponse],
                      createServer: [Function: createServer],
                      validateHeaderName: [Function: __node_internal_],
                      validateHeaderValue: [Function: __node_internal_],
                      get: [Function: get],
                      request: [Function: request],
                      setMaxIdleHTTPParsers: [Function: setMaxIdleHTTPParsers],
                      maxHeaderSize: [Getter],
                      globalAgent: [Getter/Setter]
                    },
                    'https:': {
                      Agent: [Function: Agent],
                      globalAgent: [Circular *3],
                      Server: [Function: Server],
                      createServer: [Function: createServer],
                      get: [Function: get],
                      request: [Function: request]
                    }
                  },
                  pathname: '/api/token',
                  _defaultAgent: [Circular *3],
                  host: 'accounts.spotify.com',
                  noDelay: true,
                  servername: 'accounts.spotify.com',
                  _agentKey: 'accounts.spotify.com:443:::::::::::::::::::::',
                  encoding: null,
                  singleUse: true
                }
              }
            ]
          },
          freeSockets: [Object: null prototype] {},
          keepAliveMsecs: 1000,
          keepAlive: false,
          maxSockets: Infinity,
          maxFreeSockets: 256,
          scheduling: 'lifo',
          maxTotalSockets: Infinity,
          totalSocketCount: 1,
          maxCachedSessions: 100,
          _sessionCache: {
            map: {
              'www.wikidata.org:443:::::::::::::::::::::': <Buffer 30 82 08 7d 02 01 01 02 02 03 04 04 02 13 02 04 20 49 81 10 e3 ea 7d 84 9b e4 63 a1 f3 bf 02 aa db cd 63 84 bf 4f 51 15 cc 96 ff a3 1c ef 0f 60 a7 04 ... 2127 more bytes>
            },
            list: [ 'www.wikidata.org:443:::::::::::::::::::::' ]
          },
          [Symbol(kCapture)]: false
        },
        host: 'www.wikidata.org',
        noDelay: true,
        servername: 'www.wikidata.org',
        _agentKey: 'www.wikidata.org:443:::::::::::::::::::::',
        encoding: null,
        singleUse: true
      }
    },
    _header: 'POST /w/rest.php/oauth2/access_token HTTP/1.1\r\n' +
      'Accept: application/json, text/plain, */*\r\n' +
      'Content-Type: application/json\r\n' +
      'User-Agent: axios/1.6.8\r\n' +
      'Content-Length: 141\r\n' +
      'Accept-Encoding: gzip, compress, deflate, br\r\n' +
      'Host: www.wikidata.org\r\n' +
      'Connection: close\r\n' +
      '\r\n',
    _keepAliveTimeout: 0,
    _onPendingData: [Function: nop],
    agent: <ref *3> Agent {
      _events: [Object: null prototype] {
        free: [Function (anonymous)],
        newListener: [Function: maybeEnableKeylog]
      },
      _eventsCount: 2,
      _maxListeners: undefined,
      defaultPort: 443,
      protocol: 'https:',
      options: [Object: null prototype] { noDelay: true, path: null },
      requests: [Object: null prototype] {},
      sockets: [Object: null prototype] {
        'accounts.spotify.com:443:::::::::::::::::::::': [
          <ref *2> TLSSocket {
            _tlsOptions: {
              allowHalfOpen: undefined,
              pipe: false,
              secureContext: SecureContext { context: SecureContext {} },
              isServer: false,
              requestCert: true,
              rejectUnauthorized: true,
              session: undefined,
              ALPNProtocols: undefined,
              requestOCSP: undefined,
              enableTrace: undefined,
              pskCallback: undefined,
              highWaterMark: undefined,
              onread: undefined,
              signal: undefined
            },
            _secureEstablished: false,
            _securePending: false,
            _newSessionPending: false,
            _controlReleased: true,
            secureConnecting: true,
            _SNICallback: null,
            servername: null,
            alpnProtocol: null,
            authorized: false,
            authorizationError: null,
            encrypted: true,
            _events: [Object: null prototype] {
              close: [
                [Function: onSocketCloseDestroySSL],
                [Function: bound onceWrapper] {
                  listener: [Function (anonymous)]
                },
                [Function: onClose],
                [Function: socketCloseListener],
                [Function: bound onceWrapper] {
                  listener: [Function: onClose]
                }
              ],
              end: [
                [Function: onConnectEnd],
                [Function: onReadableStreamEnd],
                [Function: socketOnEnd]
              ],
              newListener: [Function: keylogNewListener],
              connect: [
                [Function: bound onceWrapper] {
                  listener: [Function (anonymous)]
                },
                [Function: bound onceWrapper] {
                  listener: [Function (anonymous)]
                },
                [Function: bound onceWrapper] {
                  listener: [Function: connect]
                }
              ],
              secure: [Function: onConnectSecure],
              session: [Function (anonymous)],
              free: [Function: onFree],
              timeout: [Function: onTimeout],
              agentRemove: [Function: onRemove],
              error: [Function: socketErrorListener],
              data: [Function: socketOnData],
              drain: [Function: ondrain]
            },
            _eventsCount: 12,
            connecting: true,
            _hadError: false,
            _parent: null,
            _host: 'accounts.spotify.com',
            _closeAfterHandlingError: false,
            _readableState: ReadableState {
              objectMode: false,
              highWaterMark: 16384,
              buffer: BufferList { head: null, tail: null, length: 0 },
              length: 0,
              pipes: [],
              flowing: true,
              ended: false,
              endEmitted: false,
              reading: true,
              constructed: true,
              sync: false,
              needReadable: true,
              emittedReadable: false,
              readableListening: false,
              resumeScheduled: false,
              errorEmitted: false,
              emitClose: false,
              autoDestroy: true,
              destroyed: false,
              errored: null,
              closed: false,
              closeEmitted: false,
              defaultEncoding: 'utf8',
              awaitDrainWriters: null,
              multiAwaitDrain: false,
              readingMore: false,
              dataEmitted: false,
              decoder: null,
              encoding: null,
              [Symbol(kPaused)]: false
            },
            _maxListeners: undefined,
            _writableState: WritableState {
              objectMode: false,
              highWaterMark: 16384,
              finalCalled: false,
              needDrain: false,
              ending: false,
              ended: false,
              finished: false,
              destroyed: false,
              decodeStrings: false,
              defaultEncoding: 'utf8',
              length: 378,
              writing: true,
              corked: 0,
              sync: false,
              bufferProcessing: false,
              onwrite: [Function: bound onwrite],
              writecb: [Function (anonymous)],
              writelen: 378,
              afterWriteTickInfo: null,
              buffered: [],
              bufferedIndex: 0,
              allBuffers: true,
              allNoop: true,
              pendingcb: 1,
              constructed: true,
              prefinished: false,
              errorEmitted: false,
              emitClose: false,
              autoDestroy: true,
              errored: null,
              closed: false,
              closeEmitted: false,
              [Symbol(kOnFinished)]: []
            },
            allowHalfOpen: false,
            _sockname: null,
            _pendingData: [
              {
                chunk: 'POST /api/token HTTP/1.1\r\n' +
                  'Accept: application/json, text/plain, */*\r\n' +
                  'Content-Type: application/x-www-form-urlencoded\r\n' +
                  'User-Agent: axios/1.6.8\r\n' +
                  'Content-Length: 119\r\n' +
                  'Accept-Encoding: gzip, compress, deflate, br\r\n' +
                  'Host: accounts.spotify.com\r\n' +
                  'Connection: close\r\n' +
                  '\r\n',
                encoding: 'latin1',
                callback: [Function: nop]
              },
              {
                chunk: <Buffer 67 72 61 6e 74 5f 74 79 70 65 3d 63 6c 69 65 6e 74 5f 63 72 65 64 65 6e 74 69 61 6c 73 26 63 6c 69 65 6e 74 5f 69 64 3d 65 62 63 63 39 39 31 32 34 30 ... 69 more bytes>,
                encoding: 'buffer',
                callback: [Function (anonymous)]
              },
              allBuffers: false
            ],
            _pendingEncoding: '',
            server: undefined,
            _server: null,
            ssl: TLSWrap {
              _parent: TCP {
                reading: [Getter/Setter],
                onconnection: null,
                [Symbol(owner_symbol)]: [Circular *2]
              },
              _parentWrap: undefined,
              _secureContext: SecureContext { context: SecureContext {} },
              reading: false,
              onkeylog: [Function: onkeylog],
              onhandshakestart: {},
              onhandshakedone: [Function (anonymous)],
              onocspresponse: [Function: onocspresponse],
              onnewsession: [Function: onnewsessionclient],
              onerror: [Function: onerror],
              [Symbol(owner_symbol)]: [Circular *2]
            },
            _requestCert: true,
            _rejectUnauthorized: true,
            parser: <ref *4> HTTPParser {
              '0': null,
              '1': [Function: parserOnHeaders],
              '2': [Function: parserOnHeadersComplete],
              '3': [Function: parserOnBody],
              '4': [Function: parserOnMessageComplete],
              '5': null,
              '6': null,
              _headers: [],
              _url: '',
              socket: [Circular *2],
              incoming: null,
              outgoing: <ref *6> ClientRequest {
                _events: [Object: null prototype] {
                  response: [Function: bound onceWrapper] {
                    listener: [Function (anonymous)]
                  },
                  abort: [Function (anonymous)],
                  aborted: [Function (anonymous)],
                  connect: [Function (anonymous)],
                  error: [Function (anonymous)],
                  socket: [Function (anonymous)],
                  timeout: [Function (anonymous)]
                },
                _eventsCount: 7,
                _maxListeners: undefined,
                outputData: [],
                outputSize: 0,
                writable: true,
                destroyed: false,
                _last: true,
                chunkedEncoding: false,
                shouldKeepAlive: false,
                maxRequestsOnConnectionReached: false,
                _defaultKeepAlive: true,
                useChunkedEncodingByDefault: true,
                sendDate: false,
                _removedConnection: false,
                _removedContLen: false,
                _removedTE: false,
                strictContentLength: false,
                _contentLength: '119',
                _hasBody: true,
                _trailer: '',
                finished: false,
                _headerSent: true,
                _closed: false,
                socket: [Circular *2],
                _header: 'POST /api/token HTTP/1.1\r\n' +
                  'Accept: application/json, text/plain, */*\r\n' +
                  'Content-Type: application/x-www-form-urlencoded\r\n' +
                  'User-Agent: axios/1.6.8\r\n' +
                  'Content-Length: 119\r\n' +
                  'Accept-Encoding: gzip, compress, deflate, br\r\n' +
                  'Host: accounts.spotify.com\r\n' +
                  'Connection: close\r\n' +
                  '\r\n',
                _keepAliveTimeout: 0,
                _onPendingData: [Function: nop],
                agent: [Circular *3],
                socketPath: undefined,
                method: 'POST',
                maxHeaderSize: undefined,
                insecureHTTPParser: undefined,
                joinDuplicateHeaders: undefined,
                path: '/api/token',
                _ended: false,
                res: null,
                aborted: false,
                timeoutCb: null,
                upgradeOrConnect: false,
                parser: [Circular *4],
                maxHeadersCount: null,
                reusedSocket: false,
                host: 'accounts.spotify.com',
                protocol: 'https:',
                _redirectable: Writable {
                  _writableState: WritableState {
                    objectMode: false,
                    highWaterMark: 16384,
                    finalCalled: false,
                    needDrain: false,
                    ending: false,
                    ended: false,
                    finished: false,
                    destroyed: false,
                    decodeStrings: true,
                    defaultEncoding: 'utf8',
                    length: 0,
                    writing: false,
                    corked: 0,
                    sync: true,
                    bufferProcessing: false,
                    onwrite: [Function: bound onwrite],
                    writecb: null,
                    writelen: 0,
                    afterWriteTickInfo: null,
                    buffered: [],
                    bufferedIndex: 0,
                    allBuffers: true,
                    allNoop: true,
                    pendingcb: 0,
                    constructed: true,
                    prefinished: false,
                    errorEmitted: false,
                    emitClose: true,
                    autoDestroy: true,
                    errored: null,
                    closed: false,
                    closeEmitted: false,
                    [Symbol(kOnFinished)]: []
                  },
                  _events: [Object: null prototype] {
                    response: [Function: handleResponse],
                    error: [Function: handleRequestError],
                    socket: [Function: handleRequestSocket]
                  },
                  _eventsCount: 3,
                  _maxListeners: undefined,
                  _options: {
                    maxRedirects: 21,
                    maxBodyLength: Infinity,
                    protocol: 'https:',
                    path: '/api/token',
                    method: 'POST',
                    headers: [Object: null prototype] {
                      Accept: 'application/json, text/plain, */*',
                      'Content-Type': 'application/x-www-form-urlencoded',
                      'User-Agent': 'axios/1.6.8',
                      'Content-Length': '119',
                      'Accept-Encoding': 'gzip, compress, deflate, br'
                    },
                    agents: { http: undefined, https: undefined },
                    auth: undefined,
                    family: undefined,
                    beforeRedirect: [Function: dispatchBeforeRedirect],
                    beforeRedirects: { proxy: [Function: beforeRedirect] },
                    hostname: 'accounts.spotify.com',
                    port: '',
                    agent: undefined,
                    nativeProtocols: <ref *5> {
                      'http:': {
                        _connectionListener: [Function: connectionListener],
                        METHODS: [
                          'ACL',         'BIND',       'CHECKOUT',
                          'CONNECT',     'COPY',       'DELETE',
                          'GET',         'HEAD',       'LINK',
                          'LOCK',        'M-SEARCH',   'MERGE',
                          'MKACTIVITY',  'MKCALENDAR', 'MKCOL',
                          'MOVE',        'NOTIFY',     'OPTIONS',
                          'PATCH',       'POST',       'PROPFIND',
                          'PROPPATCH',   'PURGE',      'PUT',
                          'REBIND',      'REPORT',     'SEARCH',
                          'SOURCE',      'SUBSCRIBE',  'TRACE',
                          'UNBIND',      'UNLINK',     'UNLOCK',
                          'UNSUBSCRIBE'
                        ],
                        STATUS_CODES: {
                          '100': 'Continue',
                          '101': 'Switching Protocols',
                          '102': 'Processing',
                          '103': 'Early Hints',
                          '200': 'OK',
                          '201': 'Created',
                          '202': 'Accepted',
                          '203': 'Non-Authoritative Information',
                          '204': 'No Content',
                          '205': 'Reset Content',
                          '206': 'Partial Content',
                          '207': 'Multi-Status',
                          '208': 'Already Reported',
                          '226': 'IM Used',
                          '300': 'Multiple Choices',
                          '301': 'Moved Permanently',
                          '302': 'Found',
                          '303': 'See Other',
                          '304': 'Not Modified',
                          '305': 'Use Proxy',
                          '307': 'Temporary Redirect',
                          '308': 'Permanent Redirect',
                          '400': 'Bad Request',
                          '401': 'Unauthorized',
                          '402': 'Payment Required',
                          '403': 'Forbidden',
                          '404': 'Not Found',
                          '405': 'Method Not Allowed',
                          '406': 'Not Acceptable',
                          '407': 'Proxy Authentication Required',
                          '408': 'Request Timeout',
                          '409': 'Conflict',
                          '410': 'Gone',
                          '411': 'Length Required',
                          '412': 'Precondition Failed',
                          '413': 'Payload Too Large',
                          '414': 'URI Too Long',
                          '415': 'Unsupported Media Type',
                          '416': 'Range Not Satisfiable',
                          '417': 'Expectation Failed',
                          '418': "I'm a Teapot",
                          '421': 'Misdirected Request',
                          '422': 'Unprocessable Entity',
                          '423': 'Locked',
                          '424': 'Failed Dependency',
                          '425': 'Too Early',
                          '426': 'Upgrade Required',
                          '428': 'Precondition Required',
                          '429': 'Too Many Requests',
                          '431': 'Request Header Fields Too Large',
                          '451': 'Unavailable For Legal Reasons',
                          '500': 'Internal Server Error',
                          '501': 'Not Implemented',
                          '502': 'Bad Gateway',
                          '503': 'Service Unavailable',
                          '504': 'Gateway Timeout',
                          '505': 'HTTP Version Not Supported',
                          '506': 'Variant Also Negotiates',
                          '507': 'Insufficient Storage',
                          '508': 'Loop Detected',
                          '509': 'Bandwidth Limit Exceeded',
                          '510': 'Not Extended',
                          '511': 'Network Authentication Required'
                        },
                        Agent: [Function: Agent] {
                          defaultMaxSockets: Infinity
                        },
                        ClientRequest: [Function: ClientRequest],
                        IncomingMessage: [Function: IncomingMessage],
                        OutgoingMessage: [Function: OutgoingMessage],
                        Server: [Function: Server],
                        ServerResponse: [Function: ServerResponse],
                        createServer: [Function: createServer],
                        validateHeaderName: [Function: __node_internal_],
                        validateHeaderValue: [Function: __node_internal_],
                        get: [Function: get],
                        request: [Function: request],
                        setMaxIdleHTTPParsers: [Function: setMaxIdleHTTPParsers],
                        maxHeaderSize: [Getter],
                        globalAgent: [Getter/Setter]
                      },
                      'https:': {
                        Agent: [Function: Agent],
                        globalAgent: [Circular *3],
                        Server: [Function: Server],
                        createServer: [Function: createServer],
                        get: [Function: get],
                        request: [Function: request]
                      }
                    },
                    pathname: '/api/token'
                  },
                  _ended: false,
                  _ending: true,
                  _redirectCount: 0,
                  _redirects: [],
                  _requestBodyLength: 119,
                  _requestBodyBuffers: [
                    {
                      data: <Buffer 67 72 61 6e 74 5f 74 79 70 65 3d 63 6c 69 65 6e 74 5f 63 72 65 64 65 6e 74 69 61 6c 73 26 63 6c 69 65 6e 74 5f 69 64 3d 65 62 63 63 39 39 31 32 34 30 ... 69 more bytes>,
                      encoding: undefined
                    }
                  ],
                  _onNativeResponse: [Function (anonymous)],
                  _currentRequest: [Circular *6],
                  _currentUrl: 'https://accounts.spotify.com/api/token',
                  [Symbol(kCapture)]: false
                },
                [Symbol(kCapture)]: false,
                [Symbol(kBytesWritten)]: 0,
                [Symbol(kEndCalled)]: false,
                [Symbol(kNeedDrain)]: false,
                [Symbol(corked)]: 0,
                [Symbol(kOutHeaders)]: [Object: null prototype] {
                  accept: [ 'Accept', 'application/json, text/plain, */*' ],
                  'content-type': [
                    'Content-Type',
                    'application/x-www-form-urlencoded'
                  ],
                  'user-agent': [ 'User-Agent', 'axios/1.6.8' ],
                  'content-length': [ 'Content-Length', '119' ],
                  'accept-encoding': [ 'Accept-Encoding', 'gzip, compress, deflate, br' ],
                  host: [ 'Host', 'accounts.spotify.com' ]
                },
                [Symbol(errored)]: null,
                [Symbol(kUniqueHeaders)]: null
              },
              maxHeaderPairs: 2000,
              _consumed: false,
              onIncoming: [Function: parserOnIncomingClient],
              joinDuplicateHeaders: undefined,
              [Symbol(resource_symbol)]: HTTPClientAsyncResource {
                type: 'HTTPINCOMINGMESSAGE',
                req: <ref *6> ClientRequest {
                  _events: [Object: null prototype] {
                    response: [Function: bound onceWrapper] {
                      listener: [Function (anonymous)]
                    },
                    abort: [Function (anonymous)],
                    aborted: [Function (anonymous)],
                    connect: [Function (anonymous)],
                    error: [Function (anonymous)],
                    socket: [Function (anonymous)],
                    timeout: [Function (anonymous)]
                  },
                  _eventsCount: 7,
                  _maxListeners: undefined,
                  outputData: [],
                  outputSize: 0,
                  writable: true,
                  destroyed: false,
                  _last: true,
                  chunkedEncoding: false,
                  shouldKeepAlive: false,
                  maxRequestsOnConnectionReached: false,
                  _defaultKeepAlive: true,
                  useChunkedEncodingByDefault: true,
                  sendDate: false,
                  _removedConnection: false,
                  _removedContLen: false,
                  _removedTE: false,
                  strictContentLength: false,
                  _contentLength: '119',
                  _hasBody: true,
                  _trailer: '',
                  finished: false,
                  _headerSent: true,
                  _closed: false,
                  socket: [Circular *2],
                  _header: 'POST /api/token HTTP/1.1\r\n' +
                    'Accept: application/json, text/plain, */*\r\n' +
                    'Content-Type: application/x-www-form-urlencoded\r\n' +
                    'User-Agent: axios/1.6.8\r\n' +
                    'Content-Length: 119\r\n' +
                    'Accept-Encoding: gzip, compress, deflate, br\r\n' +
                    'Host: accounts.spotify.com\r\n' +
                    'Connection: close\r\n' +
                    '\r\n',
                  _keepAliveTimeout: 0,
                  _onPendingData: [Function: nop],
                  agent: [Circular *3],
                  socketPath: undefined,
                  method: 'POST',
                  maxHeaderSize: undefined,
                  insecureHTTPParser: undefined,
                  joinDuplicateHeaders: undefined,
                  path: '/api/token',
                  _ended: false,
                  res: null,
                  aborted: false,
                  timeoutCb: null,
                  upgradeOrConnect: false,
                  parser: [Circular *4],
                  maxHeadersCount: null,
                  reusedSocket: false,
                  host: 'accounts.spotify.com',
                  protocol: 'https:',
                  _redirectable: Writable {
                    _writableState: WritableState {
                      objectMode: false,
                      highWaterMark: 16384,
                      finalCalled: false,
                      needDrain: false,
                      ending: false,
                      ended: false,
                      finished: false,
                      destroyed: false,
                      decodeStrings: true,
                      defaultEncoding: 'utf8',
                      length: 0,
                      writing: false,
                      corked: 0,
                      sync: true,
                      bufferProcessing: false,
                      onwrite: [Function: bound onwrite],
                      writecb: null,
                      writelen: 0,
                      afterWriteTickInfo: null,
                      buffered: [],
                      bufferedIndex: 0,
                      allBuffers: true,
                      allNoop: true,
                      pendingcb: 0,
                      constructed: true,
                      prefinished: false,
                      errorEmitted: false,
                      emitClose: true,
                      autoDestroy: true,
                      errored: null,
                      closed: false,
                      closeEmitted: false,
                      [Symbol(kOnFinished)]: []
                    },
                    _events: [Object: null prototype] {
                      response: [Function: handleResponse],
                      error: [Function: handleRequestError],
                      socket: [Function: handleRequestSocket]
                    },
                    _eventsCount: 3,
                    _maxListeners: undefined,
                    _options: {
                      maxRedirects: 21,
                      maxBodyLength: Infinity,
                      protocol: 'https:',
                      path: '/api/token',
                      method: 'POST',
                      headers: [Object: null prototype] {
                        Accept: 'application/json, text/plain, */*',
                        'Content-Type': 'application/x-www-form-urlencoded',
                        'User-Agent': 'axios/1.6.8',
                        'Content-Length': '119',
                        'Accept-Encoding': 'gzip, compress, deflate, br'
                      },
                      agents: { http: undefined, https: undefined },
                      auth: undefined,
                      family: undefined,
                      beforeRedirect: [Function: dispatchBeforeRedirect],
                      beforeRedirects: { proxy: [Function: beforeRedirect] },
                      hostname: 'accounts.spotify.com',
                      port: '',
                      agent: undefined,
                      nativeProtocols: <ref *5> {
                        'http:': {
                          _connectionListener: [Function: connectionListener],
                          METHODS: [
                            'ACL',         'BIND',       'CHECKOUT',
                            'CONNECT',     'COPY',       'DELETE',
                            'GET',         'HEAD',       'LINK',
                            'LOCK',        'M-SEARCH',   'MERGE',
                            'MKACTIVITY',  'MKCALENDAR', 'MKCOL',
                            'MOVE',        'NOTIFY',     'OPTIONS',
                            'PATCH',       'POST',       'PROPFIND',
                            'PROPPATCH',   'PURGE',      'PUT',
                            'REBIND',      'REPORT',     'SEARCH',
                            'SOURCE',      'SUBSCRIBE',  'TRACE',
                            'UNBIND',      'UNLINK',     'UNLOCK',
                            'UNSUBSCRIBE'
                          ],
                          STATUS_CODES: {
                            '100': 'Continue',
                            '101': 'Switching Protocols',
                            '102': 'Processing',
                            '103': 'Early Hints',
                            '200': 'OK',
                            '201': 'Created',
                            '202': 'Accepted',
                            '203': 'Non-Authoritative Information',
                            '204': 'No Content',
                            '205': 'Reset Content',
                            '206': 'Partial Content',
                            '207': 'Multi-Status',
                            '208': 'Already Reported',
                            '226': 'IM Used',
                            '300': 'Multiple Choices',
                            '301': 'Moved Permanently',
                            '302': 'Found',
                            '303': 'See Other',
                            '304': 'Not Modified',
                            '305': 'Use Proxy',
                            '307': 'Temporary Redirect',
                            '308': 'Permanent Redirect',
                            '400': 'Bad Request',
                            '401': 'Unauthorized',
                            '402': 'Payment Required',
                            '403': 'Forbidden',
                            '404': 'Not Found',
                            '405': 'Method Not Allowed',
                            '406': 'Not Acceptable',
                            '407': 'Proxy Authentication Required',
                            '408': 'Request Timeout',
                            '409': 'Conflict',
                            '410': 'Gone',
                            '411': 'Length Required',
                            '412': 'Precondition Failed',
                            '413': 'Payload Too Large',
                            '414': 'URI Too Long',
                            '415': 'Unsupported Media Type',
                            '416': 'Range Not Satisfiable',
                            '417': 'Expectation Failed',
                            '418': "I'm a Teapot",
                            '421': 'Misdirected Request',
                            '422': 'Unprocessable Entity',
                            '423': 'Locked',
                            '424': 'Failed Dependency',
                            '425': 'Too Early',
                            '426': 'Upgrade Required',
                            '428': 'Precondition Required',
                            '429': 'Too Many Requests',
                            '431': 'Request Header Fields Too Large',
                            '451': 'Unavailable For Legal Reasons',
                            '500': 'Internal Server Error',
                            '501': 'Not Implemented',
                            '502': 'Bad Gateway',
                            '503': 'Service Unavailable',
                            '504': 'Gateway Timeout',
                            '505': 'HTTP Version Not Supported',
                            '506': 'Variant Also Negotiates',
                            '507': 'Insufficient Storage',
                            '508': 'Loop Detected',
                            '509': 'Bandwidth Limit Exceeded',
                            '510': 'Not Extended',
                            '511': 'Network Authentication Required'
                          },
                          Agent: [Function: Agent] {
                            defaultMaxSockets: Infinity
                          },
                          ClientRequest: [Function: ClientRequest],
                          IncomingMessage: [Function: IncomingMessage],
                          OutgoingMessage: [Function: OutgoingMessage],
                          Server: [Function: Server],
                          ServerResponse: [Function: ServerResponse],
                          createServer: [Function: createServer],
                          validateHeaderName: [Function: __node_internal_],
                          validateHeaderValue: [Function: __node_internal_],
                          get: [Function: get],
                          request: [Function: request],
                          setMaxIdleHTTPParsers: [Function: setMaxIdleHTTPParsers],
                          maxHeaderSize: [Getter],
                          globalAgent: [Getter/Setter]
                        },
                        'https:': {
                          Agent: [Function: Agent],
                          globalAgent: [Circular *3],
                          Server: [Function: Server],
                          createServer: [Function: createServer],
                          get: [Function: get],
                          request: [Function: request]
                        }
                      },
                      pathname: '/api/token'
                    },
                    _ended: false,
                    _ending: true,
                    _redirectCount: 0,
                    _redirects: [],
                    _requestBodyLength: 119,
                    _requestBodyBuffers: [
                      {
                        data: <Buffer 67 72 61 6e 74 5f 74 79 70 65 3d 63 6c 69 65 6e 74 5f 63 72 65 64 65 6e 74 69 61 6c 73 26 63 6c 69 65 6e 74 5f 69 64 3d 65 62 63 63 39 39 31 32 34 30 ... 69 more bytes>,
                        encoding: undefined
                      }
                    ],
                    _onNativeResponse: [Function (anonymous)],
                    _currentRequest: [Circular *6],
                    _currentUrl: 'https://accounts.spotify.com/api/token',
                    [Symbol(kCapture)]: false
                  },
                  [Symbol(kCapture)]: false,
                  [Symbol(kBytesWritten)]: 0,
                  [Symbol(kEndCalled)]: false,
                  [Symbol(kNeedDrain)]: false,
                  [Symbol(corked)]: 0,
                  [Symbol(kOutHeaders)]: [Object: null prototype] {
                    accept: [ 'Accept', 'application/json, text/plain, */*' ],
                    'content-type': [
                      'Content-Type',
                      'application/x-www-form-urlencoded'
                    ],
                    'user-agent': [ 'User-Agent', 'axios/1.6.8' ],
                    'content-length': [ 'Content-Length', '119' ],
                    'accept-encoding': [
                      'Accept-Encoding',
                      'gzip, compress, deflate, br'
                    ],
                    host: [ 'Host', 'accounts.spotify.com' ]
                  },
                  [Symbol(errored)]: null,
                  [Symbol(kUniqueHeaders)]: null
                }
              }
            },
            _httpMessage: <ref *6> ClientRequest {
              _events: [Object: null prototype] {
                response: [Function: bound onceWrapper] {
                  listener: [Function (anonymous)]
                },
                abort: [Function (anonymous)],
                aborted: [Function (anonymous)],
                connect: [Function (anonymous)],
                error: [Function (anonymous)],
                socket: [Function (anonymous)],
                timeout: [Function (anonymous)]
              },
              _eventsCount: 7,
              _maxListeners: undefined,
              outputData: [],
              outputSize: 0,
              writable: true,
              destroyed: false,
              _last: true,
              chunkedEncoding: false,
              shouldKeepAlive: false,
              maxRequestsOnConnectionReached: false,
              _defaultKeepAlive: true,
              useChunkedEncodingByDefault: true,
              sendDate: false,
              _removedConnection: false,
              _removedContLen: false,
              _removedTE: false,
              strictContentLength: false,
              _contentLength: '119',
              _hasBody: true,
              _trailer: '',
              finished: false,
              _headerSent: true,
              _closed: false,
              socket: [Circular *2],
              _header: 'POST /api/token HTTP/1.1\r\n' +
                'Accept: application/json, text/plain, */*\r\n' +
                'Content-Type: application/x-www-form-urlencoded\r\n' +
                'User-Agent: axios/1.6.8\r\n' +
                'Content-Length: 119\r\n' +
                'Accept-Encoding: gzip, compress, deflate, br\r\n' +
                'Host: accounts.spotify.com\r\n' +
                'Connection: close\r\n' +
                '\r\n',
              _keepAliveTimeout: 0,
              _onPendingData: [Function: nop],
              agent: [Circular *3],
              socketPath: undefined,
              method: 'POST',
              maxHeaderSize: undefined,
              insecureHTTPParser: undefined,
              joinDuplicateHeaders: undefined,
              path: '/api/token',
              _ended: false,
              res: null,
              aborted: false,
              timeoutCb: null,
              upgradeOrConnect: false,
              parser: <ref *4> HTTPParser {
                '0': null,
                '1': [Function: parserOnHeaders],
                '2': [Function: parserOnHeadersComplete],
                '3': [Function: parserOnBody],
                '4': [Function: parserOnMessageComplete],
                '5': null,
                '6': null,
                _headers: [],
                _url: '',
                socket: [Circular *2],
                incoming: null,
                outgoing: [Circular *6],
                maxHeaderPairs: 2000,
                _consumed: false,
                onIncoming: [Function: parserOnIncomingClient],
                joinDuplicateHeaders: undefined,
                [Symbol(resource_symbol)]: HTTPClientAsyncResource {
                  type: 'HTTPINCOMINGMESSAGE',
                  req: [Circular *6]
                }
              },
              maxHeadersCount: null,
              reusedSocket: false,
              host: 'accounts.spotify.com',
              protocol: 'https:',
              _redirectable: Writable {
                _writableState: WritableState {
                  objectMode: false,
                  highWaterMark: 16384,
                  finalCalled: false,
                  needDrain: false,
                  ending: false,
                  ended: false,
                  finished: false,
                  destroyed: false,
                  decodeStrings: true,
                  defaultEncoding: 'utf8',
                  length: 0,
                  writing: false,
                  corked: 0,
                  sync: true,
                  bufferProcessing: false,
                  onwrite: [Function: bound onwrite],
                  writecb: null,
                  writelen: 0,
                  afterWriteTickInfo: null,
                  buffered: [],
                  bufferedIndex: 0,
                  allBuffers: true,
                  allNoop: true,
                  pendingcb: 0,
                  constructed: true,
                  prefinished: false,
                  errorEmitted: false,
                  emitClose: true,
                  autoDestroy: true,
                  errored: null,
                  closed: false,
                  closeEmitted: false,
                  [Symbol(kOnFinished)]: []
                },
                _events: [Object: null prototype] {
                  response: [Function: handleResponse],
                  error: [Function: handleRequestError],
                  socket: [Function: handleRequestSocket]
                },
                _eventsCount: 3,
                _maxListeners: undefined,
                _options: {
                  maxRedirects: 21,
                  maxBodyLength: Infinity,
                  protocol: 'https:',
                  path: '/api/token',
                  method: 'POST',
                  headers: [Object: null prototype] {
                    Accept: 'application/json, text/plain, */*',
                    'Content-Type': 'application/x-www-form-urlencoded',
                    'User-Agent': 'axios/1.6.8',
                    'Content-Length': '119',
                    'Accept-Encoding': 'gzip, compress, deflate, br'
                  },
                  agents: { http: undefined, https: undefined },
                  auth: undefined,
                  family: undefined,
                  beforeRedirect: [Function: dispatchBeforeRedirect],
                  beforeRedirects: { proxy: [Function: beforeRedirect] },
                  hostname: 'accounts.spotify.com',
                  port: '',
                  agent: undefined,
                  nativeProtocols: <ref *5> {
                    'http:': {
                      _connectionListener: [Function: connectionListener],
                      METHODS: [
                        'ACL',         'BIND',       'CHECKOUT',
                        'CONNECT',     'COPY',       'DELETE',
                        'GET',         'HEAD',       'LINK',
                        'LOCK',        'M-SEARCH',   'MERGE',
                        'MKACTIVITY',  'MKCALENDAR', 'MKCOL',
                        'MOVE',        'NOTIFY',     'OPTIONS',
                        'PATCH',       'POST',       'PROPFIND',
                        'PROPPATCH',   'PURGE',      'PUT',
                        'REBIND',      'REPORT',     'SEARCH',
                        'SOURCE',      'SUBSCRIBE',  'TRACE',
                        'UNBIND',      'UNLINK',     'UNLOCK',
                        'UNSUBSCRIBE'
                      ],
                      STATUS_CODES: {
                        '100': 'Continue',
                        '101': 'Switching Protocols',
                        '102': 'Processing',
                        '103': 'Early Hints',
                        '200': 'OK',
                        '201': 'Created',
                        '202': 'Accepted',
                        '203': 'Non-Authoritative Information',
                        '204': 'No Content',
                        '205': 'Reset Content',
                        '206': 'Partial Content',
                        '207': 'Multi-Status',
                        '208': 'Already Reported',
                        '226': 'IM Used',
                        '300': 'Multiple Choices',
                        '301': 'Moved Permanently',
                        '302': 'Found',
                        '303': 'See Other',
                        '304': 'Not Modified',
                        '305': 'Use Proxy',
                        '307': 'Temporary Redirect',
                        '308': 'Permanent Redirect',
                        '400': 'Bad Request',
                        '401': 'Unauthorized',
                        '402': 'Payment Required',
                        '403': 'Forbidden',
                        '404': 'Not Found',
                        '405': 'Method Not Allowed',
                        '406': 'Not Acceptable',
                        '407': 'Proxy Authentication Required',
                        '408': 'Request Timeout',
                        '409': 'Conflict',
                        '410': 'Gone',
                        '411': 'Length Required',
                        '412': 'Precondition Failed',
                        '413': 'Payload Too Large',
                        '414': 'URI Too Long',
                        '415': 'Unsupported Media Type',
                        '416': 'Range Not Satisfiable',
                        '417': 'Expectation Failed',
                        '418': "I'm a Teapot",
                        '421': 'Misdirected Request',
                        '422': 'Unprocessable Entity',
                        '423': 'Locked',
                        '424': 'Failed Dependency',
                        '425': 'Too Early',
                        '426': 'Upgrade Required',
                        '428': 'Precondition Required',
                        '429': 'Too Many Requests',
                        '431': 'Request Header Fields Too Large',
                        '451': 'Unavailable For Legal Reasons',
                        '500': 'Internal Server Error',
                        '501': 'Not Implemented',
                        '502': 'Bad Gateway',
                        '503': 'Service Unavailable',
                        '504': 'Gateway Timeout',
                        '505': 'HTTP Version Not Supported',
                        '506': 'Variant Also Negotiates',
                        '507': 'Insufficient Storage',
                        '508': 'Loop Detected',
                        '509': 'Bandwidth Limit Exceeded',
                        '510': 'Not Extended',
                        '511': 'Network Authentication Required'
                      },
                      Agent: [Function: Agent] { defaultMaxSockets: Infinity },
                      ClientRequest: [Function: ClientRequest],
                      IncomingMessage: [Function: IncomingMessage],
                      OutgoingMessage: [Function: OutgoingMessage],
                      Server: [Function: Server],
                      ServerResponse: [Function: ServerResponse],
                      createServer: [Function: createServer],
                      validateHeaderName: [Function: __node_internal_],
                      validateHeaderValue: [Function: __node_internal_],
                      get: [Function: get],
                      request: [Function: request],
                      setMaxIdleHTTPParsers: [Function: setMaxIdleHTTPParsers],
                      maxHeaderSize: [Getter],
                      globalAgent: [Getter/Setter]
                    },
                    'https:': {
                      Agent: [Function: Agent],
                      globalAgent: [Circular *3],
                      Server: [Function: Server],
                      createServer: [Function: createServer],
                      get: [Function: get],
                      request: [Function: request]
                    }
                  },
                  pathname: '/api/token'
                },
                _ended: false,
                _ending: true,
                _redirectCount: 0,
                _redirects: [],
                _requestBodyLength: 119,
                _requestBodyBuffers: [
                  {
                    data: <Buffer 67 72 61 6e 74 5f 74 79 70 65 3d 63 6c 69 65 6e 74 5f 63 72 65 64 65 6e 74 69 61 6c 73 26 63 6c 69 65 6e 74 5f 69 64 3d 65 62 63 63 39 39 31 32 34 30 ... 69 more bytes>,
                    encoding: undefined
                  }
                ],
                _onNativeResponse: [Function (anonymous)],
                _currentRequest: [Circular *6],
                _currentUrl: 'https://accounts.spotify.com/api/token',
                [Symbol(kCapture)]: false
              },
              [Symbol(kCapture)]: false,
              [Symbol(kBytesWritten)]: 0,
              [Symbol(kEndCalled)]: false,
              [Symbol(kNeedDrain)]: false,
              [Symbol(corked)]: 0,
              [Symbol(kOutHeaders)]: [Object: null prototype] {
                accept: [ 'Accept', 'application/json, text/plain, */*' ],
                'content-type': [ 'Content-Type', 'application/x-www-form-urlencoded' ],
                'user-agent': [ 'User-Agent', 'axios/1.6.8' ],
                'content-length': [ 'Content-Length', '119' ],
                'accept-encoding': [ 'Accept-Encoding', 'gzip, compress, deflate, br' ],
                host: [ 'Host', 'accounts.spotify.com' ]
              },
              [Symbol(errored)]: null,
              [Symbol(kUniqueHeaders)]: null
            },
            [Symbol(res)]: TLSWrap {
              _parent: TCP {
                reading: [Getter/Setter],
                onconnection: null,
                [Symbol(owner_symbol)]: [Circular *2]
              },
              _parentWrap: undefined,
              _secureContext: SecureContext { context: SecureContext {} },
              reading: false,
              onkeylog: [Function: onkeylog],
              onhandshakestart: {},
              onhandshakedone: [Function (anonymous)],
              onocspresponse: [Function: onocspresponse],
              onnewsession: [Function: onnewsessionclient],
              onerror: [Function: onerror],
              [Symbol(owner_symbol)]: [Circular *2]
            },
            [Symbol(verified)]: false,
            [Symbol(pendingSession)]: null,
            [Symbol(async_id_symbol)]: 6,
            [Symbol(kHandle)]: TLSWrap {
              _parent: TCP {
                reading: [Getter/Setter],
                onconnection: null,
                [Symbol(owner_symbol)]: [Circular *2]
              },
              _parentWrap: undefined,
              _secureContext: SecureContext { context: SecureContext {} },
              reading: false,
              onkeylog: [Function: onkeylog],
              onhandshakestart: {},
              onhandshakedone: [Function (anonymous)],
              onocspresponse: [Function: onocspresponse],
              onnewsession: [Function: onnewsessionclient],
              onerror: [Function: onerror],
              [Symbol(owner_symbol)]: [Circular *2]
            },
            [Symbol(lastWriteQueueSize)]: 0,
            [Symbol(timeout)]: null,
            [Symbol(kBuffer)]: null,
            [Symbol(kBufferCb)]: null,
            [Symbol(kBufferGen)]: null,
            [Symbol(kCapture)]: false,
            [Symbol(kSetNoDelay)]: false,
            [Symbol(kSetKeepAlive)]: true,
            [Symbol(kSetKeepAliveInitialDelay)]: 60,
            [Symbol(kBytesRead)]: 0,
            [Symbol(kBytesWritten)]: 0,
            [Symbol(connect-options)]: {
              rejectUnauthorized: true,
              ciphers: 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
              checkServerIdentity: [Function: checkServerIdentity],
              minDHSize: 1024,
              maxRedirects: 21,
              maxBodyLength: Infinity,
              protocol: 'https:',
              path: null,
              method: 'POST',
              headers: [Object: null prototype] {
                Accept: 'application/json, text/plain, */*',
                'Content-Type': 'application/x-www-form-urlencoded',
                'User-Agent': 'axios/1.6.8',
                'Content-Length': '119',
                'Accept-Encoding': 'gzip, compress, deflate, br'
              },
              agents: { http: undefined, https: undefined },
              auth: undefined,
              family: undefined,
              beforeRedirect: [Function: dispatchBeforeRedirect],
              beforeRedirects: { proxy: [Function: beforeRedirect] },
              hostname: 'accounts.spotify.com',
              port: 443,
              agent: undefined,
              nativeProtocols: <ref *5> {
                'http:': {
                  _connectionListener: [Function: connectionListener],
                  METHODS: [
                    'ACL',         'BIND',       'CHECKOUT',
                    'CONNECT',     'COPY',       'DELETE',
                    'GET',         'HEAD',       'LINK',
                    'LOCK',        'M-SEARCH',   'MERGE',
                    'MKACTIVITY',  'MKCALENDAR', 'MKCOL',
                    'MOVE',        'NOTIFY',     'OPTIONS',
                    'PATCH',       'POST',       'PROPFIND',
                    'PROPPATCH',   'PURGE',      'PUT',
                    'REBIND',      'REPORT',     'SEARCH',
                    'SOURCE',      'SUBSCRIBE',  'TRACE',
                    'UNBIND',      'UNLINK',     'UNLOCK',
                    'UNSUBSCRIBE'
                  ],
                  STATUS_CODES: {
                    '100': 'Continue',
                    '101': 'Switching Protocols',
                    '102': 'Processing',
                    '103': 'Early Hints',
                    '200': 'OK',
                    '201': 'Created',
                    '202': 'Accepted',
                    '203': 'Non-Authoritative Information',
                    '204': 'No Content',
                    '205': 'Reset Content',
                    '206': 'Partial Content',
                    '207': 'Multi-Status',
                    '208': 'Already Reported',
                    '226': 'IM Used',
                    '300': 'Multiple Choices',
                    '301': 'Moved Permanently',
                    '302': 'Found',
                    '303': 'See Other',
                    '304': 'Not Modified',
                    '305': 'Use Proxy',
                    '307': 'Temporary Redirect',
                    '308': 'Permanent Redirect',
                    '400': 'Bad Request',
                    '401': 'Unauthorized',
                    '402': 'Payment Required',
                    '403': 'Forbidden',
                    '404': 'Not Found',
                    '405': 'Method Not Allowed',
                    '406': 'Not Acceptable',
                    '407': 'Proxy Authentication Required',
                    '408': 'Request Timeout',
                    '409': 'Conflict',
                    '410': 'Gone',
                    '411': 'Length Required',
                    '412': 'Precondition Failed',
                    '413': 'Payload Too Large',
                    '414': 'URI Too Long',
                    '415': 'Unsupported Media Type',
                    '416': 'Range Not Satisfiable',
                    '417': 'Expectation Failed',
                    '418': "I'm a Teapot",
                    '421': 'Misdirected Request',
                    '422': 'Unprocessable Entity',
                    '423': 'Locked',
                    '424': 'Failed Dependency',
                    '425': 'Too Early',
                    '426': 'Upgrade Required',
                    '428': 'Precondition Required',
                    '429': 'Too Many Requests',
                    '431': 'Request Header Fields Too Large',
                    '451': 'Unavailable For Legal Reasons',
                    '500': 'Internal Server Error',
                    '501': 'Not Implemented',
                    '502': 'Bad Gateway',
                    '503': 'Service Unavailable',
                    '504': 'Gateway Timeout',
                    '505': 'HTTP Version Not Supported',
                    '506': 'Variant Also Negotiates',
                    '507': 'Insufficient Storage',
                    '508': 'Loop Detected',
                    '509': 'Bandwidth Limit Exceeded',
                    '510': 'Not Extended',
                    '511': 'Network Authentication Required'
                  },
                  Agent: [Function: Agent] { defaultMaxSockets: Infinity },
                  ClientRequest: [Function: ClientRequest],
                  IncomingMessage: [Function: IncomingMessage],
                  OutgoingMessage: [Function: OutgoingMessage],
                  Server: [Function: Server],
                  ServerResponse: [Function: ServerResponse],
                  createServer: [Function: createServer],
                  validateHeaderName: [Function: __node_internal_],
                  validateHeaderValue: [Function: __node_internal_],
                  get: [Function: get],
                  request: [Function: request],
                  setMaxIdleHTTPParsers: [Function: setMaxIdleHTTPParsers],
                  maxHeaderSize: [Getter],
                  globalAgent: [Getter/Setter]
                },
                'https:': {
                  Agent: [Function: Agent],
                  globalAgent: [Circular *3],
                  Server: [Function: Server],
                  createServer: [Function: createServer],
                  get: [Function: get],
                  request: [Function: request]
                }
              },
              pathname: '/api/token',
              _defaultAgent: [Circular *3],
              host: 'accounts.spotify.com',
              noDelay: true,
              servername: 'accounts.spotify.com',
              _agentKey: 'accounts.spotify.com:443:::::::::::::::::::::',
              encoding: null,
              singleUse: true
            }
          }
        ]
      },
      freeSockets: [Object: null prototype] {},
      keepAliveMsecs: 1000,
      keepAlive: false,
      maxSockets: Infinity,
      maxFreeSockets: 256,
      scheduling: 'lifo',
      maxTotalSockets: Infinity,
      totalSocketCount: 1,
      maxCachedSessions: 100,
      _sessionCache: {
        map: {
          'www.wikidata.org:443:::::::::::::::::::::': <Buffer 30 82 08 7d 02 01 01 02 02 03 04 04 02 13 02 04 20 49 81 10 e3 ea 7d 84 9b e4 63 a1 f3 bf 02 aa db cd 63 84 bf 4f 51 15 cc 96 ff a3 1c ef 0f 60 a7 04 ... 2127 more bytes>
        },
        list: [ 'www.wikidata.org:443:::::::::::::::::::::' ]
      },
      [Symbol(kCapture)]: false
    },
    socketPath: undefined,
    method: 'POST',
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    joinDuplicateHeaders: undefined,
    path: '/w/rest.php/oauth2/access_token',
    _ended: true,
    res: IncomingMessage {
      _readableState: ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: [],
        flowing: false,
        ended: true,
        endEmitted: true,
        reading: false,
        constructed: true,
        sync: true,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        errorEmitted: false,
        emitClose: true,
        autoDestroy: true,
        destroyed: true,
        errored: null,
        closed: true,
        closeEmitted: true,
        defaultEncoding: 'utf8',
        awaitDrainWriters: null,
        multiAwaitDrain: false,
        readingMore: true,
        dataEmitted: true,
        decoder: null,
        encoding: null,
        [Symbol(kPaused)]: true
      },
      _events: [Object: null prototype] {
        end: [
          [Function: responseOnEnd],
          [Function: onend],
          [Function: onend]
        ],
        close: [
          [Function (anonymous)],
          [Function: onclose],
          [Function: onclose]
        ],
        finish: [ [Function: onfinish], [Function: onfinish] ],
        error: [
          [Function: onerror],
          [Function: onError],
          [Function: onerror]
        ]
      },
      _eventsCount: 4,
      _maxListeners: undefined,
      socket: TLSSocket {
        _tlsOptions: {
          allowHalfOpen: undefined,
          pipe: false,
          secureContext: SecureContext { context: SecureContext {} },
          isServer: false,
          requestCert: true,
          rejectUnauthorized: true,
          session: undefined,
          ALPNProtocols: undefined,
          requestOCSP: undefined,
          enableTrace: undefined,
          pskCallback: undefined,
          highWaterMark: undefined,
          onread: undefined,
          signal: undefined
        },
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        secureConnecting: false,
        _SNICallback: null,
        servername: 'www.wikidata.org',
        alpnProtocol: false,
        authorized: true,
        authorizationError: null,
        encrypted: true,
        _events: [Object: null prototype] {
          close: [
            [Function: onSocketCloseDestroySSL],
            [Function: onClose],
            [Function: socketCloseListener]
          ],
          end: [Function: onReadableStreamEnd],
          newListener: [Function: keylogNewListener],
          secure: [Function: onConnectSecure],
          session: [Function (anonymous)],
          free: [Function: onFree],
          timeout: [Function: onTimeout],
          agentRemove: [Function: onRemove],
          error: [Function: socketErrorListener]
        },
        _eventsCount: 9,
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: 'www.wikidata.org',
        _closeAfterHandlingError: false,
        _readableState: ReadableState {
          objectMode: false,
          highWaterMark: 16384,
          buffer: BufferList { head: null, tail: null, length: 0 },
          length: 0,
          pipes: [],
          flowing: true,
          ended: true,
          endEmitted: true,
          reading: false,
          constructed: true,
          sync: false,
          needReadable: false,
          emittedReadable: false,
          readableListening: false,
          resumeScheduled: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: true,
          destroyed: true,
          errored: null,
          closed: true,
          closeEmitted: true,
          defaultEncoding: 'utf8',
          awaitDrainWriters: null,
          multiAwaitDrain: false,
          readingMore: false,
          dataEmitted: true,
          decoder: null,
          encoding: null,
          [Symbol(kPaused)]: false
        },
        _maxListeners: undefined,
        _writableState: WritableState {
          objectMode: false,
          highWaterMark: 16384,
          finalCalled: true,
          needDrain: false,
          ending: true,
          ended: true,
          finished: true,
          destroyed: true,
          decodeStrings: false,
          defaultEncoding: 'utf8',
          length: 0,
          writing: false,
          corked: 0,
          sync: false,
          bufferProcessing: false,
          onwrite: [Function: bound onwrite],
          writecb: null,
          writelen: 0,
          afterWriteTickInfo: null,
          buffered: [],
          bufferedIndex: 0,
          allBuffers: true,
          allNoop: true,
          pendingcb: 0,
          constructed: true,
          prefinished: true,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: true,
          errored: null,
          closed: true,
          closeEmitted: true,
          [Symbol(kOnFinished)]: []
        },
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: undefined,
        _server: null,
        ssl: null,
        _requestCert: true,
        _rejectUnauthorized: true,
        parser: null,
        _httpMessage: [Circular *1],
        write: [Function: writeAfterFIN],
        [Symbol(res)]: null,
        [Symbol(verified)]: true,
        [Symbol(pendingSession)]: null,
        [Symbol(async_id_symbol)]: 35,
        [Symbol(kHandle)]: null,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(kCapture)]: false,
        [Symbol(kSetNoDelay)]: false,
        [Symbol(kSetKeepAlive)]: true,
        [Symbol(kSetKeepAliveInitialDelay)]: 60,
        [Symbol(kBytesRead)]: 1442,
        [Symbol(kBytesWritten)]: 400,
        [Symbol(connect-options)]: {
          rejectUnauthorized: true,
          ciphers: 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
          checkServerIdentity: [Function: checkServerIdentity],
          minDHSize: 1024,
          maxRedirects: 21,
          maxBodyLength: Infinity,
          protocol: 'https:',
          path: null,
          method: 'POST',
          headers: [Object: null prototype] {
            Accept: 'application/json, text/plain, */*',
            'Content-Type': 'application/json',
            'User-Agent': 'axios/1.6.8',
            'Content-Length': '141',
            'Accept-Encoding': 'gzip, compress, deflate, br'
          },
          agents: { http: undefined, https: undefined },
          auth: undefined,
          family: undefined,
          beforeRedirect: [Function: dispatchBeforeRedirect],
          beforeRedirects: { proxy: [Function: beforeRedirect] },
          hostname: 'www.wikidata.org',
          port: 443,
          agent: undefined,
          nativeProtocols: <ref *5> {
            'http:': {
              _connectionListener: [Function: connectionListener],
              METHODS: [
                'ACL',         'BIND',       'CHECKOUT',
                'CONNECT',     'COPY',       'DELETE',
                'GET',         'HEAD',       'LINK',
                'LOCK',        'M-SEARCH',   'MERGE',
                'MKACTIVITY',  'MKCALENDAR', 'MKCOL',
                'MOVE',        'NOTIFY',     'OPTIONS',
                'PATCH',       'POST',       'PROPFIND',
                'PROPPATCH',   'PURGE',      'PUT',
                'REBIND',      'REPORT',     'SEARCH',
                'SOURCE',      'SUBSCRIBE',  'TRACE',
                'UNBIND',      'UNLINK',     'UNLOCK',
                'UNSUBSCRIBE'
              ],
              STATUS_CODES: {
                '100': 'Continue',
                '101': 'Switching Protocols',
                '102': 'Processing',
                '103': 'Early Hints',
                '200': 'OK',
                '201': 'Created',
                '202': 'Accepted',
                '203': 'Non-Authoritative Information',
                '204': 'No Content',
                '205': 'Reset Content',
                '206': 'Partial Content',
                '207': 'Multi-Status',
                '208': 'Already Reported',
                '226': 'IM Used',
                '300': 'Multiple Choices',
                '301': 'Moved Permanently',
                '302': 'Found',
                '303': 'See Other',
                '304': 'Not Modified',
                '305': 'Use Proxy',
                '307': 'Temporary Redirect',
                '308': 'Permanent Redirect',
                '400': 'Bad Request',
                '401': 'Unauthorized',
                '402': 'Payment Required',
                '403': 'Forbidden',
                '404': 'Not Found',
                '405': 'Method Not Allowed',
                '406': 'Not Acceptable',
                '407': 'Proxy Authentication Required',
                '408': 'Request Timeout',
                '409': 'Conflict',
                '410': 'Gone',
                '411': 'Length Required',
                '412': 'Precondition Failed',
                '413': 'Payload Too Large',
                '414': 'URI Too Long',
                '415': 'Unsupported Media Type',
                '416': 'Range Not Satisfiable',
                '417': 'Expectation Failed',
                '418': "I'm a Teapot",
                '421': 'Misdirected Request',
                '422': 'Unprocessable Entity',
                '423': 'Locked',
                '424': 'Failed Dependency',
                '425': 'Too Early',
                '426': 'Upgrade Required',
                '428': 'Precondition Required',
                '429': 'Too Many Requests',
                '431': 'Request Header Fields Too Large',
                '451': 'Unavailable For Legal Reasons',
                '500': 'Internal Server Error',
                '501': 'Not Implemented',
                '502': 'Bad Gateway',
                '503': 'Service Unavailable',
                '504': 'Gateway Timeout',
                '505': 'HTTP Version Not Supported',
                '506': 'Variant Also Negotiates',
                '507': 'Insufficient Storage',
                '508': 'Loop Detected',
                '509': 'Bandwidth Limit Exceeded',
                '510': 'Not Extended',
                '511': 'Network Authentication Required'
              },
              Agent: [Function: Agent] { defaultMaxSockets: Infinity },
              ClientRequest: [Function: ClientRequest],
              IncomingMessage: [Function: IncomingMessage],
              OutgoingMessage: [Function: OutgoingMessage],
              Server: [Function: Server],
              ServerResponse: [Function: ServerResponse],
              createServer: [Function: createServer],
              validateHeaderName: [Function: __node_internal_],
              validateHeaderValue: [Function: __node_internal_],
              get: [Function: get],
              request: [Function: request],
              setMaxIdleHTTPParsers: [Function: setMaxIdleHTTPParsers],
              maxHeaderSize: [Getter],
              globalAgent: [Getter/Setter]
            },
            'https:': {
              Agent: [Function: Agent],
              globalAgent: <ref *3> Agent {
                _events: [Object: null prototype] {
                  free: [Function (anonymous)],
                  newListener: [Function: maybeEnableKeylog]
                },
                _eventsCount: 2,
                _maxListeners: undefined,
                defaultPort: 443,
                protocol: 'https:',
                options: [Object: null prototype] { noDelay: true, path: null },
                requests: [Object: null prototype] {},
                sockets: [Object: null prototype] {
                  'accounts.spotify.com:443:::::::::::::::::::::': [
                    <ref *2> TLSSocket {
                      _tlsOptions: {
                        allowHalfOpen: undefined,
                        pipe: false,
                        secureContext: SecureContext { context: SecureContext {} },
                        isServer: false,
                        requestCert: true,
                        rejectUnauthorized: true,
                        session: undefined,
                        ALPNProtocols: undefined,
                        requestOCSP: undefined,
                        enableTrace: undefined,
                        pskCallback: undefined,
                        highWaterMark: undefined,
                        onread: undefined,
                        signal: undefined
                      },
                      _secureEstablished: false,
                      _securePending: false,
                      _newSessionPending: false,
                      _controlReleased: true,
                      secureConnecting: true,
                      _SNICallback: null,
                      servername: null,
                      alpnProtocol: null,
                      authorized: false,
                      authorizationError: null,
                      encrypted: true,
                      _events: [Object: null prototype] {
                        close: [
                          [Function: onSocketCloseDestroySSL],
                          [Function: bound onceWrapper] {
                            listener: [Function (anonymous)]
                          },
                          [Function: onClose],
                          [Function: socketCloseListener],
                          [Function: bound onceWrapper] {
                            listener: [Function: onClose]
                          }
                        ],
                        end: [
                          [Function: onConnectEnd],
                          [Function: onReadableStreamEnd],
                          [Function: socketOnEnd]
                        ],
                        newListener: [Function: keylogNewListener],
                        connect: [
                          [Function: bound onceWrapper] {
                            listener: [Function (anonymous)]
                          },
                          [Function: bound onceWrapper] {
                            listener: [Function (anonymous)]
                          },
                          [Function: bound onceWrapper] {
                            listener: [Function: connect]
                          }
                        ],
                        secure: [Function: onConnectSecure],
                        session: [Function (anonymous)],
                        free: [Function: onFree],
                        timeout: [Function: onTimeout],
                        agentRemove: [Function: onRemove],
                        error: [Function: socketErrorListener],
                        data: [Function: socketOnData],
                        drain: [Function: ondrain]
                      },
                      _eventsCount: 12,
                      connecting: true,
                      _hadError: false,
                      _parent: null,
                      _host: 'accounts.spotify.com',
                      _closeAfterHandlingError: false,
                      _readableState: ReadableState {
                        objectMode: false,
                        highWaterMark: 16384,
                        buffer: BufferList { head: null, tail: null, length: 0 },
                        length: 0,
                        pipes: [],
                        flowing: true,
                        ended: false,
                        endEmitted: false,
                        reading: true,
                        constructed: true,
                        sync: false,
                        needReadable: true,
                        emittedReadable: false,
                        readableListening: false,
                        resumeScheduled: false,
                        errorEmitted: false,
                        emitClose: false,
                        autoDestroy: true,
                        destroyed: false,
                        errored: null,
                        closed: false,
                        closeEmitted: false,
                        defaultEncoding: 'utf8',
                        awaitDrainWriters: null,
                        multiAwaitDrain: false,
                        readingMore: false,
                        dataEmitted: false,
                        decoder: null,
                        encoding: null,
                        [Symbol(kPaused)]: false
                      },
                      _maxListeners: undefined,
                      _writableState: WritableState {
                        objectMode: false,
                        highWaterMark: 16384,
                        finalCalled: false,
                        needDrain: false,
                        ending: false,
                        ended: false,
                        finished: false,
                        destroyed: false,
                        decodeStrings: false,
                        defaultEncoding: 'utf8',
                        length: 378,
                        writing: true,
                        corked: 0,
                        sync: false,
                        bufferProcessing: false,
                        onwrite: [Function: bound onwrite],
                        writecb: [Function (anonymous)],
                        writelen: 378,
                        afterWriteTickInfo: null,
                        buffered: [],
                        bufferedIndex: 0,
                        allBuffers: true,
                        allNoop: true,
                        pendingcb: 1,
                        constructed: true,
                        prefinished: false,
                        errorEmitted: false,
                        emitClose: false,
                        autoDestroy: true,
                        errored: null,
                        closed: false,
                        closeEmitted: false,
                        [Symbol(kOnFinished)]: []
                      },
                      allowHalfOpen: false,
                      _sockname: null,
                      _pendingData: [
                        {
                          chunk: 'POST /api/token HTTP/1.1\r\n' +
                            'Accept: application/json, text/plain, */*\r\n' +
                            'Content-Type: application/x-www-form-urlencoded\r\n' +
                            'User-Agent: axios/1.6.8\r\n' +
                            'Content-Length: 119\r\n' +
                            'Accept-Encoding: gzip, compress, deflate, br\r\n' +
                            'Host: accounts.spotify.com\r\n' +
                            'Connection: close\r\n' +
                            '\r\n',
                          encoding: 'latin1',
                          callback: [Function: nop]
                        },
                        {
                          chunk: <Buffer 67 72 61 6e 74 5f 74 79 70 65 3d 63 6c 69 65 6e 74 5f 63 72 65 64 65 6e 74 69 61 6c 73 26 63 6c 69 65 6e 74 5f 69 64 3d 65 62 63 63 39 39 31 32 34 30 ... 69 more bytes>,
                          encoding: 'buffer',
                          callback: [Function (anonymous)]
                        },
                        allBuffers: false
                      ],
                      _pendingEncoding: '',
                      server: undefined,
                      _server: null,
                      ssl: TLSWrap {
                        _parent: TCP {
                          reading: [Getter/Setter],
                          onconnection: null,
                          [Symbol(owner_symbol)]: [Circular *2]
                        },
                        _parentWrap: undefined,
                        _secureContext: SecureContext { context: SecureContext {} },
                        reading: false,
                        onkeylog: [Function: onkeylog],
                        onhandshakestart: {},
                        onhandshakedone: [Function (anonymous)],
                        onocspresponse: [Function: onocspresponse],
                        onnewsession: [Function: onnewsessionclient],
                        onerror: [Function: onerror],
                        [Symbol(owner_symbol)]: [Circular *2]
                      },
                      _requestCert: true,
                      _rejectUnauthorized: true,
                      parser: <ref *4> HTTPParser {
                        '0': null,
                        '1': [Function: parserOnHeaders],
                        '2': [Function: parserOnHeadersComplete],
                        '3': [Function: parserOnBody],
                        '4': [Function: parserOnMessageComplete],
                        '5': null,
                        '6': null,
                        _headers: [],
                        _url: '',
                        socket: [Circular *2],
                        incoming: null,
                        outgoing: <ref *6> ClientRequest {
                          _events: [Object: null prototype] {
                            response: [Function: bound onceWrapper] {
                              listener: [Function (anonymous)]
                            },
                            abort: [Function (anonymous)],
                            aborted: [Function (anonymous)],
                            connect: [Function (anonymous)],
                            error: [Function (anonymous)],
                            socket: [Function (anonymous)],
                            timeout: [Function (anonymous)]
                          },
                          _eventsCount: 7,
                          _maxListeners: undefined,
                          outputData: [],
                          outputSize: 0,
                          writable: true,
                          destroyed: false,
                          _last: true,
                          chunkedEncoding: false,
                          shouldKeepAlive: false,
                          maxRequestsOnConnectionReached: false,
                          _defaultKeepAlive: true,
                          useChunkedEncodingByDefault: true,
                          sendDate: false,
                          _removedConnection: false,
                          _removedContLen: false,
                          _removedTE: false,
                          strictContentLength: false,
                          _contentLength: '119',
                          _hasBody: true,
                          _trailer: '',
                          finished: false,
                          _headerSent: true,
                          _closed: false,
                          socket: [Circular *2],
                          _header: 'POST /api/token HTTP/1.1\r\n' +
                            'Accept: application/json, text/plain, */*\r\n' +
                            'Content-Type: application/x-www-form-urlencoded\r\n' +
                            'User-Agent: axios/1.6.8\r\n' +
                            'Content-Length: 119\r\n' +
                            'Accept-Encoding: gzip, compress, deflate, br\r\n' +
                            'Host: accounts.spotify.com\r\n' +
                            'Connection: close\r\n' +
                            '\r\n',
                          _keepAliveTimeout: 0,
                          _onPendingData: [Function: nop],
                          agent: [Circular *3],
                          socketPath: undefined,
                          method: 'POST',
                          maxHeaderSize: undefined,
                          insecureHTTPParser: undefined,
                          joinDuplicateHeaders: undefined,
                          path: '/api/token',
                          _ended: false,
                          res: null,
                          aborted: false,
                          timeoutCb: null,
                          upgradeOrConnect: false,
                          parser: [Circular *4],
                          maxHeadersCount: null,
                          reusedSocket: false,
                          host: 'accounts.spotify.com',
                          protocol: 'https:',
                          _redirectable: Writable {
                            _writableState: WritableState {
                              objectMode: false,
                              highWaterMark: 16384,
                              finalCalled: false,
                              needDrain: false,
                              ending: false,
                              ended: false,
                              finished: false,
                              destroyed: false,
                              decodeStrings: true,
                              defaultEncoding: 'utf8',
                              length: 0,
                              writing: false,
                              corked: 0,
                              sync: true,
                              bufferProcessing: false,
                              onwrite: [Function: bound onwrite],
                              writecb: null,
                              writelen: 0,
                              afterWriteTickInfo: null,
                              buffered: [],
                              bufferedIndex: 0,
                              allBuffers: true,
                              allNoop: true,
                              pendingcb: 0,
                              constructed: true,
                              prefinished: false,
                              errorEmitted: false,
                              emitClose: true,
                              autoDestroy: true,
                              errored: null,
                              closed: false,
                              closeEmitted: false,
                              [Symbol(kOnFinished)]: []
                            },
                            _events: [Object: null prototype] {
                              response: [Function: handleResponse],
                              error: [Function: handleRequestError],
                              socket: [Function: handleRequestSocket]
                            },
                            _eventsCount: 3,
                            _maxListeners: undefined,
                            _options: {
                              maxRedirects: 21,
                              maxBodyLength: Infinity,
                              protocol: 'https:',
                              path: '/api/token',
                              method: 'POST',
                              headers: [Object: null prototype] {
                                Accept: 'application/json, text/plain, */*',
                                'Content-Type': 'application/x-www-form-urlencoded',
                                'User-Agent': 'axios/1.6.8',
                                'Content-Length': '119',
                                'Accept-Encoding': 'gzip, compress, deflate, br'
                              },
                              agents: { http: undefined, https: undefined },
                              auth: undefined,
                              family: undefined,
                              beforeRedirect: [Function: dispatchBeforeRedirect],
                              beforeRedirects: { proxy: [Function: beforeRedirect] },
                              hostname: 'accounts.spotify.com',
                              port: '',
                              agent: undefined,
                              nativeProtocols: [Circular *5],
                              pathname: '/api/token'
                            },
                            _ended: false,
                            _ending: true,
                            _redirectCount: 0,
                            _redirects: [],
                            _requestBodyLength: 119,
                            _requestBodyBuffers: [
                              {
                                data: <Buffer 67 72 61 6e 74 5f 74 79 70 65 3d 63 6c 69 65 6e 74 5f 63 72 65 64 65 6e 74 69 61 6c 73 26 63 6c 69 65 6e 74 5f 69 64 3d 65 62 63 63 39 39 31 32 34 30 ... 69 more bytes>,
                                encoding: undefined
                              }
                            ],
                            _onNativeResponse: [Function (anonymous)],
                            _currentRequest: [Circular *6],
                            _currentUrl: 'https://accounts.spotify.com/api/token',
                            [Symbol(kCapture)]: false
                          },
                          [Symbol(kCapture)]: false,
                          [Symbol(kBytesWritten)]: 0,
                          [Symbol(kEndCalled)]: false,
                          [Symbol(kNeedDrain)]: false,
                          [Symbol(corked)]: 0,
                          [Symbol(kOutHeaders)]: [Object: null prototype] {
                            accept: [
                              'Accept',
                              'application/json, text/plain, */*'
                            ],
                            'content-type': [
                              'Content-Type',
                              'application/x-www-form-urlencoded'
                            ],
                            'user-agent': [ 'User-Agent', 'axios/1.6.8' ],
                            'content-length': [ 'Content-Length', '119' ],
                            'accept-encoding': [
                              'Accept-Encoding',
                              'gzip, compress, deflate, br'
                            ],
                            host: [ 'Host', 'accounts.spotify.com' ]
                          },
                          [Symbol(errored)]: null,
                          [Symbol(kUniqueHeaders)]: null
                        },
                        maxHeaderPairs: 2000,
                        _consumed: false,
                        onIncoming: [Function: parserOnIncomingClient],
                        joinDuplicateHeaders: undefined,
                        [Symbol(resource_symbol)]: HTTPClientAsyncResource {
                          type: 'HTTPINCOMINGMESSAGE',
                          req: <ref *6> ClientRequest {
                            _events: [Object: null prototype] {
                              response: [Function: bound onceWrapper] {
                                listener: [Function (anonymous)]
                              },
                              abort: [Function (anonymous)],
                              aborted: [Function (anonymous)],
                              connect: [Function (anonymous)],
                              error: [Function (anonymous)],
                              socket: [Function (anonymous)],
                              timeout: [Function (anonymous)]
                            },
                            _eventsCount: 7,
                            _maxListeners: undefined,
                            outputData: [],
                            outputSize: 0,
                            writable: true,
                            destroyed: false,
                            _last: true,
                            chunkedEncoding: false,
                            shouldKeepAlive: false,
                            maxRequestsOnConnectionReached: false,
                            _defaultKeepAlive: true,
                            useChunkedEncodingByDefault: true,
                            sendDate: false,
                            _removedConnection: false,
                            _removedContLen: false,
                            _removedTE: false,
                            strictContentLength: false,
                            _contentLength: '119',
                            _hasBody: true,
                            _trailer: '',
                            finished: false,
                            _headerSent: true,
                            _closed: false,
                            socket: [Circular *2],
                            _header: 'POST /api/token HTTP/1.1\r\n' +
                              'Accept: application/json, text/plain, */*\r\n' +
                              'Content-Type: application/x-www-form-urlencoded\r\n' +
                              'User-Agent: axios/1.6.8\r\n' +
                              'Content-Length: 119\r\n' +
                              'Accept-Encoding: gzip, compress, deflate, br\r\n' +
                              'Host: accounts.spotify.com\r\n' +
                              'Connection: close\r\n' +
                              '\r\n',
                            _keepAliveTimeout: 0,
                            _onPendingData: [Function: nop],
                            agent: [Circular *3],
                            socketPath: undefined,
                            method: 'POST',
                            maxHeaderSize: undefined,
                            insecureHTTPParser: undefined,
                            joinDuplicateHeaders: undefined,
                            path: '/api/token',
                            _ended: false,
                            res: null,
                            aborted: false,
                            timeoutCb: null,
                            upgradeOrConnect: false,
                            parser: [Circular *4],
                            maxHeadersCount: null,
                            reusedSocket: false,
                            host: 'accounts.spotify.com',
                            protocol: 'https:',
                            _redirectable: Writable {
                              _writableState: WritableState {
                                objectMode: false,
                                highWaterMark: 16384,
                                finalCalled: false,
                                needDrain: false,
                                ending: false,
                                ended: false,
                                finished: false,
                                destroyed: false,
                                decodeStrings: true,
                                defaultEncoding: 'utf8',
                                length: 0,
                                writing: false,
                                corked: 0,
                                sync: true,
                                bufferProcessing: false,
                                onwrite: [Function: bound onwrite],
                                writecb: null,
                                writelen: 0,
                                afterWriteTickInfo: null,
                                buffered: [],
                                bufferedIndex: 0,
                                allBuffers: true,
                                allNoop: true,
                                pendingcb: 0,
                                constructed: true,
                                prefinished: false,
                                errorEmitted: false,
                                emitClose: true,
                                autoDestroy: true,
                                errored: null,
                                closed: false,
                                closeEmitted: false,
                                [Symbol(kOnFinished)]: []
                              },
                              _events: [Object: null prototype] {
                                response: [Function: handleResponse],
                                error: [Function: handleRequestError],
                                socket: [Function: handleRequestSocket]
                              },
                              _eventsCount: 3,
                              _maxListeners: undefined,
                              _options: {
                                maxRedirects: 21,
                                maxBodyLength: Infinity,
                                protocol: 'https:',
                                path: '/api/token',
                                method: 'POST',
                                headers: [Object: null prototype] {
                                  Accept: 'application/json, text/plain, */*',
                                  'Content-Type': 'application/x-www-form-urlencoded',
                                  'User-Agent': 'axios/1.6.8',
                                  'Content-Length': '119',
                                  'Accept-Encoding': 'gzip, compress, deflate, br'
                                },
                                agents: { http: undefined, https: undefined },
                                auth: undefined,
                                family: undefined,
                                beforeRedirect: [Function: dispatchBeforeRedirect],
                                beforeRedirects: { proxy: [Function: beforeRedirect] },
                                hostname: 'accounts.spotify.com',
                                port: '',
                                agent: undefined,
                                nativeProtocols: [Circular *5],
                                pathname: '/api/token'
                              },
                              _ended: false,
                              _ending: true,
                              _redirectCount: 0,
                              _redirects: [],
                              _requestBodyLength: 119,
                              _requestBodyBuffers: [
                                {
                                  data: <Buffer 67 72 61 6e 74 5f 74 79 70 65 3d 63 6c 69 65 6e 74 5f 63 72 65 64 65 6e 74 69 61 6c 73 26 63 6c 69 65 6e 74 5f 69 64 3d 65 62 63 63 39 39 31 32 34 30 ... 69 more bytes>,
                                  encoding: undefined
                                }
                              ],
                              _onNativeResponse: [Function (anonymous)],
                              _currentRequest: [Circular *6],
                              _currentUrl: 'https://accounts.spotify.com/api/token',
                              [Symbol(kCapture)]: false
                            },
                            [Symbol(kCapture)]: false,
                            [Symbol(kBytesWritten)]: 0,
                            [Symbol(kEndCalled)]: false,
                            [Symbol(kNeedDrain)]: false,
                            [Symbol(corked)]: 0,
                            [Symbol(kOutHeaders)]: [Object: null prototype] {
                              accept: [
                                'Accept',
                                'application/json, text/plain, */*'
                              ],
                              'content-type': [
                                'Content-Type',
                                'application/x-www-form-urlencoded'
                              ],
                              'user-agent': [ 'User-Agent', 'axios/1.6.8' ],
                              'content-length': [ 'Content-Length', '119' ],
                              'accept-encoding': [
                                'Accept-Encoding',
                                'gzip, compress, deflate, br'
                              ],
                              host: [ 'Host', 'accounts.spotify.com' ]
                            },
                            [Symbol(errored)]: null,
                            [Symbol(kUniqueHeaders)]: null
                          }
                        }
                      },
                      _httpMessage: <ref *6> ClientRequest {
                        _events: [Object: null prototype] {
                          response: [Function: bound onceWrapper] {
                            listener: [Function (anonymous)]
                          },
                          abort: [Function (anonymous)],
                          aborted: [Function (anonymous)],
                          connect: [Function (anonymous)],
                          error: [Function (anonymous)],
                          socket: [Function (anonymous)],
                          timeout: [Function (anonymous)]
                        },
                        _eventsCount: 7,
                        _maxListeners: undefined,
                        outputData: [],
                        outputSize: 0,
                        writable: true,
                        destroyed: false,
                        _last: true,
                        chunkedEncoding: false,
                        shouldKeepAlive: false,
                        maxRequestsOnConnectionReached: false,
                        _defaultKeepAlive: true,
                        useChunkedEncodingByDefault: true,
                        sendDate: false,
                        _removedConnection: false,
                        _removedContLen: false,
                        _removedTE: false,
                        strictContentLength: false,
                        _contentLength: '119',
                        _hasBody: true,
                        _trailer: '',
                        finished: false,
                        _headerSent: true,
                        _closed: false,
                        socket: [Circular *2],
                        _header: 'POST /api/token HTTP/1.1\r\n' +
                          'Accept: application/json, text/plain, */*\r\n' +
                          'Content-Type: application/x-www-form-urlencoded\r\n' +
                          'User-Agent: axios/1.6.8\r\n' +
                          'Content-Length: 119\r\n' +
                          'Accept-Encoding: gzip, compress, deflate, br\r\n' +
                          'Host: accounts.spotify.com\r\n' +
                          'Connection: close\r\n' +
                          '\r\n',
                        _keepAliveTimeout: 0,
                        _onPendingData: [Function: nop],
                        agent: [Circular *3],
                        socketPath: undefined,
                        method: 'POST',
                        maxHeaderSize: undefined,
                        insecureHTTPParser: undefined,
                        joinDuplicateHeaders: undefined,
                        path: '/api/token',
                        _ended: false,
                        res: null,
                        aborted: false,
                        timeoutCb: null,
                        upgradeOrConnect: false,
                        parser: <ref *4> HTTPParser {
                          '0': null,
                          '1': [Function: parserOnHeaders],
                          '2': [Function: parserOnHeadersComplete],
                          '3': [Function: parserOnBody],
                          '4': [Function: parserOnMessageComplete],
                          '5': null,
                          '6': null,
                          _headers: [],
                          _url: '',
                          socket: [Circular *2],
                          incoming: null,
                          outgoing: [Circular *6],
                          maxHeaderPairs: 2000,
                          _consumed: false,
                          onIncoming: [Function: parserOnIncomingClient],
                          joinDuplicateHeaders: undefined,
                          [Symbol(resource_symbol)]: HTTPClientAsyncResource {
                            type: 'HTTPINCOMINGMESSAGE',
                            req: [Circular *6]
                          }
                        },
                        maxHeadersCount: null,
                        reusedSocket: false,
                        host: 'accounts.spotify.com',
                        protocol: 'https:',
                        _redirectable: Writable {
                          _writableState: WritableState {
                            objectMode: false,
                            highWaterMark: 16384,
                            finalCalled: false,
                            needDrain: false,
                            ending: false,
                            ended: false,
                            finished: false,
                            destroyed: false,
                            decodeStrings: true,
                            defaultEncoding: 'utf8',
                            length: 0,
                            writing: false,
                            corked: 0,
                            sync: true,
                            bufferProcessing: false,
                            onwrite: [Function: bound onwrite],
                            writecb: null,
                            writelen: 0,
                            afterWriteTickInfo: null,
                            buffered: [],
                            bufferedIndex: 0,
                            allBuffers: true,
                            allNoop: true,
                            pendingcb: 0,
                            constructed: true,
                            prefinished: false,
                            errorEmitted: false,
                            emitClose: true,
                            autoDestroy: true,
                            errored: null,
                            closed: false,
                            closeEmitted: false,
                            [Symbol(kOnFinished)]: []
                          },
                          _events: [Object: null prototype] {
                            response: [Function: handleResponse],
                            error: [Function: handleRequestError],
                            socket: [Function: handleRequestSocket]
                          },
                          _eventsCount: 3,
                          _maxListeners: undefined,
                          _options: {
                            maxRedirects: 21,
                            maxBodyLength: Infinity,
                            protocol: 'https:',
                            path: '/api/token',
                            method: 'POST',
                            headers: [Object: null prototype] {
                              Accept: 'application/json, text/plain, */*',
                              'Content-Type': 'application/x-www-form-urlencoded',
                              'User-Agent': 'axios/1.6.8',
                              'Content-Length': '119',
                              'Accept-Encoding': 'gzip, compress, deflate, br'
                            },
                            agents: { http: undefined, https: undefined },
                            auth: undefined,
                            family: undefined,
                            beforeRedirect: [Function: dispatchBeforeRedirect],
                            beforeRedirects: { proxy: [Function: beforeRedirect] },
                            hostname: 'accounts.spotify.com',
                            port: '',
                            agent: undefined,
                            nativeProtocols: [Circular *5],
                            pathname: '/api/token'
                          },
                          _ended: false,
                          _ending: true,
                          _redirectCount: 0,
                          _redirects: [],
                          _requestBodyLength: 119,
                          _requestBodyBuffers: [
                            {
                              data: <Buffer 67 72 61 6e 74 5f 74 79 70 65 3d 63 6c 69 65 6e 74 5f 63 72 65 64 65 6e 74 69 61 6c 73 26 63 6c 69 65 6e 74 5f 69 64 3d 65 62 63 63 39 39 31 32 34 30 ... 69 more bytes>,
                              encoding: undefined
                            }
                          ],
                          _onNativeResponse: [Function (anonymous)],
                          _currentRequest: [Circular *6],
                          _currentUrl: 'https://accounts.spotify.com/api/token',
                          [Symbol(kCapture)]: false
                        },
                        [Symbol(kCapture)]: false,
                        [Symbol(kBytesWritten)]: 0,
                        [Symbol(kEndCalled)]: false,
                        [Symbol(kNeedDrain)]: false,
                        [Symbol(corked)]: 0,
                        [Symbol(kOutHeaders)]: [Object: null prototype] {
                          accept: [
                            'Accept',
                            'application/json, text/plain, */*'
                          ],
                          'content-type': [
                            'Content-Type',
                            'application/x-www-form-urlencoded'
                          ],
                          'user-agent': [ 'User-Agent', 'axios/1.6.8' ],
                          'content-length': [ 'Content-Length', '119' ],
                          'accept-encoding': [
                            'Accept-Encoding',
                            'gzip, compress, deflate, br'
                          ],
                          host: [ 'Host', 'accounts.spotify.com' ]
                        },
                        [Symbol(errored)]: null,
                        [Symbol(kUniqueHeaders)]: null
                      },
                      [Symbol(res)]: TLSWrap {
                        _parent: TCP {
                          reading: [Getter/Setter],
                          onconnection: null,
                          [Symbol(owner_symbol)]: [Circular *2]
                        },
                        _parentWrap: undefined,
                        _secureContext: SecureContext { context: SecureContext {} },
                        reading: false,
                        onkeylog: [Function: onkeylog],
                        onhandshakestart: {},
                        onhandshakedone: [Function (anonymous)],
                        onocspresponse: [Function: onocspresponse],
                        onnewsession: [Function: onnewsessionclient],
                        onerror: [Function: onerror],
                        [Symbol(owner_symbol)]: [Circular *2]
                      },
                      [Symbol(verified)]: false,
                      [Symbol(pendingSession)]: null,
                      [Symbol(async_id_symbol)]: 6,
                      [Symbol(kHandle)]: TLSWrap {
                        _parent: TCP {
                          reading: [Getter/Setter],
                          onconnection: null,
                          [Symbol(owner_symbol)]: [Circular *2]
                        },
                        _parentWrap: undefined,
                        _secureContext: SecureContext { context: SecureContext {} },
                        reading: false,
                        onkeylog: [Function: onkeylog],
                        onhandshakestart: {},
                        onhandshakedone: [Function (anonymous)],
                        onocspresponse: [Function: onocspresponse],
                        onnewsession: [Function: onnewsessionclient],
                        onerror: [Function: onerror],
                        [Symbol(owner_symbol)]: [Circular *2]
                      },
                      [Symbol(lastWriteQueueSize)]: 0,
                      [Symbol(timeout)]: null,
                      [Symbol(kBuffer)]: null,
                      [Symbol(kBufferCb)]: null,
                      [Symbol(kBufferGen)]: null,
                      [Symbol(kCapture)]: false,
                      [Symbol(kSetNoDelay)]: false,
                      [Symbol(kSetKeepAlive)]: true,
                      [Symbol(kSetKeepAliveInitialDelay)]: 60,
                      [Symbol(kBytesRead)]: 0,
                      [Symbol(kBytesWritten)]: 0,
                      [Symbol(connect-options)]: {
                        rejectUnauthorized: true,
                        ciphers: 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
                        checkServerIdentity: [Function: checkServerIdentity],
                        minDHSize: 1024,
                        maxRedirects: 21,
                        maxBodyLength: Infinity,
                        protocol: 'https:',
                        path: null,
                        method: 'POST',
                        headers: [Object: null prototype] {
                          Accept: 'application/json, text/plain, */*',
                          'Content-Type': 'application/x-www-form-urlencoded',
                          'User-Agent': 'axios/1.6.8',
                          'Content-Length': '119',
                          'Accept-Encoding': 'gzip, compress, deflate, br'
                        },
                        agents: { http: undefined, https: undefined },
                        auth: undefined,
                        family: undefined,
                        beforeRedirect: [Function: dispatchBeforeRedirect],
                        beforeRedirects: { proxy: [Function: beforeRedirect] },
                        hostname: 'accounts.spotify.com',
                        port: 443,
                        agent: undefined,
                        nativeProtocols: [Circular *5],
                        pathname: '/api/token',
                        _defaultAgent: [Circular *3],
                        host: 'accounts.spotify.com',
                        noDelay: true,
                        servername: 'accounts.spotify.com',
                        _agentKey: 'accounts.spotify.com:443:::::::::::::::::::::',
                        encoding: null,
                        singleUse: true
                      }
                    }
                  ]
                },
                freeSockets: [Object: null prototype] {},
                keepAliveMsecs: 1000,
                keepAlive: false,
                maxSockets: Infinity,
                maxFreeSockets: 256,
                scheduling: 'lifo',
                maxTotalSockets: Infinity,
                totalSocketCount: 1,
                maxCachedSessions: 100,
                _sessionCache: {
                  map: {
                    'www.wikidata.org:443:::::::::::::::::::::': <Buffer 30 82 08 7d 02 01 01 02 02 03 04 04 02 13 02 04 20 49 81 10 e3 ea 7d 84 9b e4 63 a1 f3 bf 02 aa db cd 63 84 bf 4f 51 15 cc 96 ff a3 1c ef 0f 60 a7 04 ... 2127 more bytes>
                  },
                  list: [ 'www.wikidata.org:443:::::::::::::::::::::' ]
                },
                [Symbol(kCapture)]: false
              },
              Server: [Function: Server],
              createServer: [Function: createServer],
              get: [Function: get],
              request: [Function: request]
            }
          },
          pathname: '/w/rest.php/oauth2/access_token',
          _defaultAgent: <ref *3> Agent {
            _events: [Object: null prototype] {
              free: [Function (anonymous)],
              newListener: [Function: maybeEnableKeylog]
            },
            _eventsCount: 2,
            _maxListeners: undefined,
            defaultPort: 443,
            protocol: 'https:',
            options: [Object: null prototype] { noDelay: true, path: null },
            requests: [Object: null prototype] {},
            sockets: [Object: null prototype] {
              'accounts.spotify.com:443:::::::::::::::::::::': [
                <ref *2> TLSSocket {
                  _tlsOptions: {
                    allowHalfOpen: undefined,
                    pipe: false,
                    secureContext: SecureContext { context: SecureContext {} },
                    isServer: false,
                    requestCert: true,
                    rejectUnauthorized: true,
                    session: undefined,
                    ALPNProtocols: undefined,
                    requestOCSP: undefined,
                    enableTrace: undefined,
                    pskCallback: undefined,
                    highWaterMark: undefined,
                    onread: undefined,
                    signal: undefined
                  },
                  _secureEstablished: false,
                  _securePending: false,
                  _newSessionPending: false,
                  _controlReleased: true,
                  secureConnecting: true,
                  _SNICallback: null,
                  servername: null,
                  alpnProtocol: null,
                  authorized: false,
                  authorizationError: null,
                  encrypted: true,
                  _events: [Object: null prototype] {
                    close: [
                      [Function: onSocketCloseDestroySSL],
                      [Function: bound onceWrapper] {
                        listener: [Function (anonymous)]
                      },
                      [Function: onClose],
                      [Function: socketCloseListener],
                      [Function: bound onceWrapper] {
                        listener: [Function: onClose]
                      }
                    ],
                    end: [
                      [Function: onConnectEnd],
                      [Function: onReadableStreamEnd],
                      [Function: socketOnEnd]
                    ],
                    newListener: [Function: keylogNewListener],
                    connect: [
                      [Function: bound onceWrapper] {
                        listener: [Function (anonymous)]
                      },
                      [Function: bound onceWrapper] {
                        listener: [Function (anonymous)]
                      },
                      [Function: bound onceWrapper] {
                        listener: [Function: connect]
                      }
                    ],
                    secure: [Function: onConnectSecure],
                    session: [Function (anonymous)],
                    free: [Function: onFree],
                    timeout: [Function: onTimeout],
                    agentRemove: [Function: onRemove],
                    error: [Function: socketErrorListener],
                    data: [Function: socketOnData],
                    drain: [Function: ondrain]
                  },
                  _eventsCount: 12,
                  connecting: true,
                  _hadError: false,
                  _parent: null,
                  _host: 'accounts.spotify.com',
                  _closeAfterHandlingError: false,
                  _readableState: ReadableState {
                    objectMode: false,
                    highWaterMark: 16384,
                    buffer: BufferList { head: null, tail: null, length: 0 },
                    length: 0,
                    pipes: [],
                    flowing: true,
                    ended: false,
                    endEmitted: false,
                    reading: true,
                    constructed: true,
                    sync: false,
                    needReadable: true,
                    emittedReadable: false,
                    readableListening: false,
                    resumeScheduled: false,
                    errorEmitted: false,
                    emitClose: false,
                    autoDestroy: true,
                    destroyed: false,
                    errored: null,
                    closed: false,
                    closeEmitted: false,
                    defaultEncoding: 'utf8',
                    awaitDrainWriters: null,
                    multiAwaitDrain: false,
                    readingMore: false,
                    dataEmitted: false,
                    decoder: null,
                    encoding: null,
                    [Symbol(kPaused)]: false
                  },
                  _maxListeners: undefined,
                  _writableState: WritableState {
                    objectMode: false,
                    highWaterMark: 16384,
                    finalCalled: false,
                    needDrain: false,
                    ending: false,
                    ended: false,
                    finished: false,
                    destroyed: false,
                    decodeStrings: false,
                    defaultEncoding: 'utf8',
                    length: 378,
                    writing: true,
                    corked: 0,
                    sync: false,
                    bufferProcessing: false,
                    onwrite: [Function: bound onwrite],
                    writecb: [Function (anonymous)],
                    writelen: 378,
                    afterWriteTickInfo: null,
                    buffered: [],
                    bufferedIndex: 0,
                    allBuffers: true,
                    allNoop: true,
                    pendingcb: 1,
                    constructed: true,
                    prefinished: false,
                    errorEmitted: false,
                    emitClose: false,
                    autoDestroy: true,
                    errored: null,
                    closed: false,
                    closeEmitted: false,
                    [Symbol(kOnFinished)]: []
                  },
                  allowHalfOpen: false,
                  _sockname: null,
                  _pendingData: [
                    {
                      chunk: 'POST /api/token HTTP/1.1\r\n' +
                        'Accept: application/json, text/plain, */*\r\n' +
                        'Content-Type: application/x-www-form-urlencoded\r\n' +
                        'User-Agent: axios/1.6.8\r\n' +
                        'Content-Length: 119\r\n' +
                        'Accept-Encoding: gzip, compress, deflate, br\r\n' +
                        'Host: accounts.spotify.com\r\n' +
                        'Connection: close\r\n' +
                        '\r\n',
                      encoding: 'latin1',
                      callback: [Function: nop]
                    },
                    {
                      chunk: <Buffer 67 72 61 6e 74 5f 74 79 70 65 3d 63 6c 69 65 6e 74 5f 63 72 65 64 65 6e 74 69 61 6c 73 26 63 6c 69 65 6e 74 5f 69 64 3d 65 62 63 63 39 39 31 32 34 30 ... 69 more bytes>,
                      encoding: 'buffer',
                      callback: [Function (anonymous)]
                    },
                    allBuffers: false
                  ],
                  _pendingEncoding: '',
                  server: undefined,
                  _server: null,
                  ssl: TLSWrap {
                    _parent: TCP {
                      reading: [Getter/Setter],
                      onconnection: null,
                      [Symbol(owner_symbol)]: [Circular *2]
                    },
                    _parentWrap: undefined,
                    _secureContext: SecureContext { context: SecureContext {} },
                    reading: false,
                    onkeylog: [Function: onkeylog],
                    onhandshakestart: {},
                    onhandshakedone: [Function (anonymous)],
                    onocspresponse: [Function: onocspresponse],
                    onnewsession: [Function: onnewsessionclient],
                    onerror: [Function: onerror],
                    [Symbol(owner_symbol)]: [Circular *2]
                  },
                  _requestCert: true,
                  _rejectUnauthorized: true,
                  parser: <ref *4> HTTPParser {
                    '0': null,
                    '1': [Function: parserOnHeaders],
                    '2': [Function: parserOnHeadersComplete],
                    '3': [Function: parserOnBody],
                    '4': [Function: parserOnMessageComplete],
                    '5': null,
                    '6': null,
                    _headers: [],
                    _url: '',
                    socket: [Circular *2],
                    incoming: null,
                    outgoing: <ref *6> ClientRequest {
                      _events: [Object: null prototype] {
                        response: [Function: bound onceWrapper] {
                          listener: [Function (anonymous)]
                        },
                        abort: [Function (anonymous)],
                        aborted: [Function (anonymous)],
                        connect: [Function (anonymous)],
                        error: [Function (anonymous)],
                        socket: [Function (anonymous)],
                        timeout: [Function (anonymous)]
                      },
                      _eventsCount: 7,
                      _maxListeners: undefined,
                      outputData: [],
                      outputSize: 0,
                      writable: true,
                      destroyed: false,
                      _last: true,
                      chunkedEncoding: false,
                      shouldKeepAlive: false,
                      maxRequestsOnConnectionReached: false,
                      _defaultKeepAlive: true,
                      useChunkedEncodingByDefault: true,
                      sendDate: false,
                      _removedConnection: false,
                      _removedContLen: false,
                      _removedTE: false,
                      strictContentLength: false,
                      _contentLength: '119',
                      _hasBody: true,
                      _trailer: '',
                      finished: false,
                      _headerSent: true,
                      _closed: false,
                      socket: [Circular *2],
                      _header: 'POST /api/token HTTP/1.1\r\n' +
                        'Accept: application/json, text/plain, */*\r\n' +
                        'Content-Type: application/x-www-form-urlencoded\r\n' +
                        'User-Agent: axios/1.6.8\r\n' +
                        'Content-Length: 119\r\n' +
                        'Accept-Encoding: gzip, compress, deflate, br\r\n' +
                        'Host: accounts.spotify.com\r\n' +
                        'Connection: close\r\n' +
                        '\r\n',
                      _keepAliveTimeout: 0,
                      _onPendingData: [Function: nop],
                      agent: [Circular *3],
                      socketPath: undefined,
                      method: 'POST',
                      maxHeaderSize: undefined,
                      insecureHTTPParser: undefined,
                      joinDuplicateHeaders: undefined,
                      path: '/api/token',
                      _ended: false,
                      res: null,
                      aborted: false,
                      timeoutCb: null,
                      upgradeOrConnect: false,
                      parser: [Circular *4],
                      maxHeadersCount: null,
                      reusedSocket: false,
                      host: 'accounts.spotify.com',
                      protocol: 'https:',
                      _redirectable: Writable {
                        _writableState: WritableState {
                          objectMode: false,
                          highWaterMark: 16384,
                          finalCalled: false,
                          needDrain: false,
                          ending: false,
                          ended: false,
                          finished: false,
                          destroyed: false,
                          decodeStrings: true,
                          defaultEncoding: 'utf8',
                          length: 0,
                          writing: false,
                          corked: 0,
                          sync: true,
                          bufferProcessing: false,
                          onwrite: [Function: bound onwrite],
                          writecb: null,
                          writelen: 0,
                          afterWriteTickInfo: null,
                          buffered: [],
                          bufferedIndex: 0,
                          allBuffers: true,
                          allNoop: true,
                          pendingcb: 0,
                          constructed: true,
                          prefinished: false,
                          errorEmitted: false,
                          emitClose: true,
                          autoDestroy: true,
                          errored: null,
                          closed: false,
                          closeEmitted: false,
                          [Symbol(kOnFinished)]: []
                        },
                        _events: [Object: null prototype] {
                          response: [Function: handleResponse],
                          error: [Function: handleRequestError],
                          socket: [Function: handleRequestSocket]
                        },
                        _eventsCount: 3,
                        _maxListeners: undefined,
                        _options: {
                          maxRedirects: 21,
                          maxBodyLength: Infinity,
                          protocol: 'https:',
                          path: '/api/token',
                          method: 'POST',
                          headers: [Object: null prototype] {
                            Accept: 'application/json, text/plain, */*',
                            'Content-Type': 'application/x-www-form-urlencoded',
                            'User-Agent': 'axios/1.6.8',
                            'Content-Length': '119',
                            'Accept-Encoding': 'gzip, compress, deflate, br'
                          },
                          agents: { http: undefined, https: undefined },
                          auth: undefined,
                          family: undefined,
                          beforeRedirect: [Function: dispatchBeforeRedirect],
                          beforeRedirects: { proxy: [Function: beforeRedirect] },
                          hostname: 'accounts.spotify.com',
                          port: '',
                          agent: undefined,
                          nativeProtocols: <ref *5> {
                            'http:': {
                              _connectionListener: [Function: connectionListener],
                              METHODS: [
                                'ACL',         'BIND',       'CHECKOUT',
                                'CONNECT',     'COPY',       'DELETE',
                                'GET',         'HEAD',       'LINK',
                                'LOCK',        'M-SEARCH',   'MERGE',
                                'MKACTIVITY',  'MKCALENDAR', 'MKCOL',
                                'MOVE',        'NOTIFY',     'OPTIONS',
                                'PATCH',       'POST',       'PROPFIND',
                                'PROPPATCH',   'PURGE',      'PUT',
                                'REBIND',      'REPORT',     'SEARCH',
                                'SOURCE',      'SUBSCRIBE',  'TRACE',
                                'UNBIND',      'UNLINK',     'UNLOCK',
                                'UNSUBSCRIBE'
                              ],
                              STATUS_CODES: {
                                '100': 'Continue',
                                '101': 'Switching Protocols',
                                '102': 'Processing',
                                '103': 'Early Hints',
                                '200': 'OK',
                                '201': 'Created',
                                '202': 'Accepted',
                                '203': 'Non-Authoritative Information',
                                '204': 'No Content',
                                '205': 'Reset Content',
                                '206': 'Partial Content',
                                '207': 'Multi-Status',
                                '208': 'Already Reported',
                                '226': 'IM Used',
                                '300': 'Multiple Choices',
                                '301': 'Moved Permanently',
                                '302': 'Found',
                                '303': 'See Other',
                                '304': 'Not Modified',
                                '305': 'Use Proxy',
                                '307': 'Temporary Redirect',
                                '308': 'Permanent Redirect',
                                '400': 'Bad Request',
                                '401': 'Unauthorized',
                                '402': 'Payment Required',
                                '403': 'Forbidden',
                                '404': 'Not Found',
                                '405': 'Method Not Allowed',
                                '406': 'Not Acceptable',
                                '407': 'Proxy Authentication Required',
                                '408': 'Request Timeout',
                                '409': 'Conflict',
                                '410': 'Gone',
                                '411': 'Length Required',
                                '412': 'Precondition Failed',
                                '413': 'Payload Too Large',
                                '414': 'URI Too Long',
                                '415': 'Unsupported Media Type',
                                '416': 'Range Not Satisfiable',
                                '417': 'Expectation Failed',
                                '418': "I'm a Teapot",
                                '421': 'Misdirected Request',
                                '422': 'Unprocessable Entity',
                                '423': 'Locked',
                                '424': 'Failed Dependency',
                                '425': 'Too Early',
                                '426': 'Upgrade Required',
                                '428': 'Precondition Required',
                                '429': 'Too Many Requests',
                                '431': 'Request Header Fields Too Large',
                                '451': 'Unavailable For Legal Reasons',
                                '500': 'Internal Server Error',
                                '501': 'Not Implemented',
                                '502': 'Bad Gateway',
                                '503': 'Service Unavailable',
                                '504': 'Gateway Timeout',
                                '505': 'HTTP Version Not Supported',
                                '506': 'Variant Also Negotiates',
                                '507': 'Insufficient Storage',
                                '508': 'Loop Detected',
                                '509': 'Bandwidth Limit Exceeded',
                                '510': 'Not Extended',
                                '511': 'Network Authentication Required'
                              },
                              Agent: [Function: Agent] {
                                defaultMaxSockets: Infinity
                              },
                              ClientRequest: [Function: ClientRequest],
                              IncomingMessage: [Function: IncomingMessage],
                              OutgoingMessage: [Function: OutgoingMessage],
                              Server: [Function: Server],
                              ServerResponse: [Function: ServerResponse],
                              createServer: [Function: createServer],
                              validateHeaderName: [Function: __node_internal_],
                              validateHeaderValue: [Function: __node_internal_],
                              get: [Function: get],
                              request: [Function: request],
                              setMaxIdleHTTPParsers: [Function: setMaxIdleHTTPParsers],
                              maxHeaderSize: [Getter],
                              globalAgent: [Getter/Setter]
                            },
                            'https:': {
                              Agent: [Function: Agent],
                              globalAgent: [Circular *3],
                              Server: [Function: Server],
                              createServer: [Function: createServer],
                              get: [Function: get],
                              request: [Function: request]
                            }
                          },
                          pathname: '/api/token'
                        },
                        _ended: false,
                        _ending: true,
                        _redirectCount: 0,
                        _redirects: [],
                        _requestBodyLength: 119,
                        _requestBodyBuffers: [
                          {
                            data: <Buffer 67 72 61 6e 74 5f 74 79 70 65 3d 63 6c 69 65 6e 74 5f 63 72 65 64 65 6e 74 69 61 6c 73 26 63 6c 69 65 6e 74 5f 69 64 3d 65 62 63 63 39 39 31 32 34 30 ... 69 more bytes>,
                            encoding: undefined
                          }
                        ],
                        _onNativeResponse: [Function (anonymous)],
                        _currentRequest: [Circular *6],
                        _currentUrl: 'https://accounts.spotify.com/api/token',
                        [Symbol(kCapture)]: false
                      },
                      [Symbol(kCapture)]: false,
                      [Symbol(kBytesWritten)]: 0,
                      [Symbol(kEndCalled)]: false,
                      [Symbol(kNeedDrain)]: false,
                      [Symbol(corked)]: 0,
                      [Symbol(kOutHeaders)]: [Object: null prototype] {
                        accept: [
                          'Accept',
                          'application/json, text/plain, */*'
                        ],
                        'content-type': [
                          'Content-Type',
                          'application/x-www-form-urlencoded'
                        ],
                        'user-agent': [ 'User-Agent', 'axios/1.6.8' ],
                        'content-length': [ 'Content-Length', '119' ],
                        'accept-encoding': [
                          'Accept-Encoding',
                          'gzip, compress, deflate, br'
                        ],
                        host: [ 'Host', 'accounts.spotify.com' ]
                      },
                      [Symbol(errored)]: null,
                      [Symbol(kUniqueHeaders)]: null
                    },
                    maxHeaderPairs: 2000,
                    _consumed: false,
                    onIncoming: [Function: parserOnIncomingClient],
                    joinDuplicateHeaders: undefined,
                    [Symbol(resource_symbol)]: HTTPClientAsyncResource {
                      type: 'HTTPINCOMINGMESSAGE',
                      req: <ref *6> ClientRequest {
                        _events: [Object: null prototype] {
                          response: [Function: bound onceWrapper] {
                            listener: [Function (anonymous)]
                          },
                          abort: [Function (anonymous)],
                          aborted: [Function (anonymous)],
                          connect: [Function (anonymous)],
                          error: [Function (anonymous)],
                          socket: [Function (anonymous)],
                          timeout: [Function (anonymous)]
                        },
                        _eventsCount: 7,
                        _maxListeners: undefined,
                        outputData: [],
                        outputSize: 0,
                        writable: true,
                        destroyed: false,
                        _last: true,
                        chunkedEncoding: false,
                        shouldKeepAlive: false,
                        maxRequestsOnConnectionReached: false,
                        _defaultKeepAlive: true,
                        useChunkedEncodingByDefault: true,
                        sendDate: false,
                        _removedConnection: false,
                        _removedContLen: false,
                        _removedTE: false,
                        strictContentLength: false,
                        _contentLength: '119',
                        _hasBody: true,
                        _trailer: '',
                        finished: false,
                        _headerSent: true,
                        _closed: false,
                        socket: [Circular *2],
                        _header: 'POST /api/token HTTP/1.1\r\n' +
                          'Accept: application/json, text/plain, */*\r\n' +
                          'Content-Type: application/x-www-form-urlencoded\r\n' +
                          'User-Agent: axios/1.6.8\r\n' +
                          'Content-Length: 119\r\n' +
                          'Accept-Encoding: gzip, compress, deflate, br\r\n' +
                          'Host: accounts.spotify.com\r\n' +
                          'Connection: close\r\n' +
                          '\r\n',
                        _keepAliveTimeout: 0,
                        _onPendingData: [Function: nop],
                        agent: [Circular *3],
                        socketPath: undefined,
                        method: 'POST',
                        maxHeaderSize: undefined,
                        insecureHTTPParser: undefined,
                        joinDuplicateHeaders: undefined,
                        path: '/api/token',
                        _ended: false,
                        res: null,
                        aborted: false,
                        timeoutCb: null,
                        upgradeOrConnect: false,
                        parser: [Circular *4],
                        maxHeadersCount: null,
                        reusedSocket: false,
                        host: 'accounts.spotify.com',
                        protocol: 'https:',
                        _redirectable: Writable {
                          _writableState: WritableState {
                            objectMode: false,
                            highWaterMark: 16384,
                            finalCalled: false,
                            needDrain: false,
                            ending: false,
                            ended: false,
                            finished: false,
                            destroyed: false,
                            decodeStrings: true,
                            defaultEncoding: 'utf8',
                            length: 0,
                            writing: false,
                            corked: 0,
                            sync: true,
                            bufferProcessing: false,
                            onwrite: [Function: bound onwrite],
                            writecb: null,
                            writelen: 0,
                            afterWriteTickInfo: null,
                            buffered: [],
                            bufferedIndex: 0,
                            allBuffers: true,
                            allNoop: true,
                            pendingcb: 0,
                            constructed: true,
                            prefinished: false,
                            errorEmitted: false,
                            emitClose: true,
                            autoDestroy: true,
                            errored: null,
                            closed: false,
                            closeEmitted: false,
                            [Symbol(kOnFinished)]: []
                          },
                          _events: [Object: null prototype] {
                            response: [Function: handleResponse],
                            error: [Function: handleRequestError],
                            socket: [Function: handleRequestSocket]
                          },
                          _eventsCount: 3,
                          _maxListeners: undefined,
                          _options: {
                            maxRedirects: 21,
                            maxBodyLength: Infinity,
                            protocol: 'https:',
                            path: '/api/token',
                            method: 'POST',
                            headers: [Object: null prototype] {
                              Accept: 'application/json, text/plain, */*',
                              'Content-Type': 'application/x-www-form-urlencoded',
                              'User-Agent': 'axios/1.6.8',
                              'Content-Length': '119',
                              'Accept-Encoding': 'gzip, compress, deflate, br'
                            },
                            agents: { http: undefined, https: undefined },
                            auth: undefined,
                            family: undefined,
                            beforeRedirect: [Function: dispatchBeforeRedirect],
                            beforeRedirects: { proxy: [Function: beforeRedirect] },
                            hostname: 'accounts.spotify.com',
                            port: '',
                            agent: undefined,
                            nativeProtocols: <ref *5> {
                              'http:': {
                                _connectionListener: [Function: connectionListener],
                                METHODS: [
                                  'ACL',         'BIND',       'CHECKOUT',
                                  'CONNECT',     'COPY',       'DELETE',
                                  'GET',         'HEAD',       'LINK',
                                  'LOCK',        'M-SEARCH',   'MERGE',
                                  'MKACTIVITY',  'MKCALENDAR', 'MKCOL',
                                  'MOVE',        'NOTIFY',     'OPTIONS',
                                  'PATCH',       'POST',       'PROPFIND',
                                  'PROPPATCH',   'PURGE',      'PUT',
                                  'REBIND',      'REPORT',     'SEARCH',
                                  'SOURCE',      'SUBSCRIBE',  'TRACE',
                                  'UNBIND',      'UNLINK',     'UNLOCK',
                                  'UNSUBSCRIBE'
                                ],
                                STATUS_CODES: {
                                  '100': 'Continue',
                                  '101': 'Switching Protocols',
                                  '102': 'Processing',
                                  '103': 'Early Hints',
                                  '200': 'OK',
                                  '201': 'Created',
                                  '202': 'Accepted',
                                  '203': 'Non-Authoritative Information',
                                  '204': 'No Content',
                                  '205': 'Reset Content',
                                  '206': 'Partial Content',
                                  '207': 'Multi-Status',
                                  '208': 'Already Reported',
                                  '226': 'IM Used',
                                  '300': 'Multiple Choices',
                                  '301': 'Moved Permanently',
                                  '302': 'Found',
                                  '303': 'See Other',
                                  '304': 'Not Modified',
                                  '305': 'Use Proxy',
                                  '307': 'Temporary Redirect',
                                  '308': 'Permanent Redirect',
                                  '400': 'Bad Request',
                                  '401': 'Unauthorized',
                                  '402': 'Payment Required',
                                  '403': 'Forbidden',
                                  '404': 'Not Found',
                                  '405': 'Method Not Allowed',
                                  '406': 'Not Acceptable',
                                  '407': 'Proxy Authentication Required',
                                  '408': 'Request Timeout',
                                  '409': 'Conflict',
                                  '410': 'Gone',
                                  '411': 'Length Required',
                                  '412': 'Precondition Failed',
                                  '413': 'Payload Too Large',
                                  '414': 'URI Too Long',
                                  '415': 'Unsupported Media Type',
                                  '416': 'Range Not Satisfiable',
                                  '417': 'Expectation Failed',
                                  '418': "I'm a Teapot",
                                  '421': 'Misdirected Request',
                                  '422': 'Unprocessable Entity',
                                  '423': 'Locked',
                                  '424': 'Failed Dependency',
                                  '425': 'Too Early',
                                  '426': 'Upgrade Required',
                                  '428': 'Precondition Required',
                                  '429': 'Too Many Requests',
                                  '431': 'Request Header Fields Too Large',
                                  '451': 'Unavailable For Legal Reasons',
                                  '500': 'Internal Server Error',
                                  '501': 'Not Implemented',
                                  '502': 'Bad Gateway',
                                  '503': 'Service Unavailable',
                                  '504': 'Gateway Timeout',
                                  '505': 'HTTP Version Not Supported',
                                  '506': 'Variant Also Negotiates',
                                  '507': 'Insufficient Storage',
                                  '508': 'Loop Detected',
                                  '509': 'Bandwidth Limit Exceeded',
                                  '510': 'Not Extended',
                                  '511': 'Network Authentication Required'
                                },
                                Agent: [Function: Agent] {
                                  defaultMaxSockets: Infinity
                                },
                                ClientRequest: [Function: ClientRequest],
                                IncomingMessage: [Function: IncomingMessage],
                                OutgoingMessage: [Function: OutgoingMessage],
                                Server: [Function: Server],
                                ServerResponse: [Function: ServerResponse],
                                createServer: [Function: createServer],
                                validateHeaderName: [Function: __node_internal_],
                                validateHeaderValue: [Function: __node_internal_],
                                get: [Function: get],
                                request: [Function: request],
                                setMaxIdleHTTPParsers: [Function: setMaxIdleHTTPParsers],
                                maxHeaderSize: [Getter],
                                globalAgent: [Getter/Setter]
                              },
                              'https:': {
                                Agent: [Function: Agent],
                                globalAgent: [Circular *3],
                                Server: [Function: Server],
                                createServer: [Function: createServer],
                                get: [Function: get],
                                request: [Function: request]
                              }
                            },
                            pathname: '/api/token'
                          },
                          _ended: false,
                          _ending: true,
                          _redirectCount: 0,
                          _redirects: [],
                          _requestBodyLength: 119,
                          _requestBodyBuffers: [
                            {
                              data: <Buffer 67 72 61 6e 74 5f 74 79 70 65 3d 63 6c 69 65 6e 74 5f 63 72 65 64 65 6e 74 69 61 6c 73 26 63 6c 69 65 6e 74 5f 69 64 3d 65 62 63 63 39 39 31 32 34 30 ... 69 more bytes>,
                              encoding: undefined
                            }
                          ],
                          _onNativeResponse: [Function (anonymous)],
                          _currentRequest: [Circular *6],
                          _currentUrl: 'https://accounts.spotify.com/api/token',
                          [Symbol(kCapture)]: false
                        },
                        [Symbol(kCapture)]: false,
                        [Symbol(kBytesWritten)]: 0,
                        [Symbol(kEndCalled)]: false,
                        [Symbol(kNeedDrain)]: false,
                        [Symbol(corked)]: 0,
                        [Symbol(kOutHeaders)]: [Object: null prototype] {
                          accept: [
                            'Accept',
                            'application/json, text/plain, */*'
                          ],
                          'content-type': [
                            'Content-Type',
                            'application/x-www-form-urlencoded'
                          ],
                          'user-agent': [ 'User-Agent', 'axios/1.6.8' ],
                          'content-length': [ 'Content-Length', '119' ],
                          'accept-encoding': [
                            'Accept-Encoding',
                            'gzip, compress, deflate, br'
                          ],
                          host: [ 'Host', 'accounts.spotify.com' ]
                        },
                        [Symbol(errored)]: null,
                        [Symbol(kUniqueHeaders)]: null
                      }
                    }
                  },
                  _httpMessage: <ref *6> ClientRequest {
                    _events: [Object: null prototype] {
                      response: [Function: bound onceWrapper] {
                        listener: [Function (anonymous)]
                      },
                      abort: [Function (anonymous)],
                      aborted: [Function (anonymous)],
                      connect: [Function (anonymous)],
                      error: [Function (anonymous)],
                      socket: [Function (anonymous)],
                      timeout: [Function (anonymous)]
                    },
                    _eventsCount: 7,
                    _maxListeners: undefined,
                    outputData: [],
                    outputSize: 0,
                    writable: true,
                    destroyed: false,
                    _last: true,
                    chunkedEncoding: false,
                    shouldKeepAlive: false,
                    maxRequestsOnConnectionReached: false,
                    _defaultKeepAlive: true,
                    useChunkedEncodingByDefault: true,
                    sendDate: false,
                    _removedConnection: false,
                    _removedContLen: false,
                    _removedTE: false,
                    strictContentLength: false,
                    _contentLength: '119',
                    _hasBody: true,
                    _trailer: '',
                    finished: false,
                    _headerSent: true,
                    _closed: false,
                    socket: [Circular *2],
                    _header: 'POST /api/token HTTP/1.1\r\n' +
                      'Accept: application/json, text/plain, */*\r\n' +
                      'Content-Type: application/x-www-form-urlencoded\r\n' +
                      'User-Agent: axios/1.6.8\r\n' +
                      'Content-Length: 119\r\n' +
                      'Accept-Encoding: gzip, compress, deflate, br\r\n' +
                      'Host: accounts.spotify.com\r\n' +
                      'Connection: close\r\n' +
                      '\r\n',
                    _keepAliveTimeout: 0,
                    _onPendingData: [Function: nop],
                    agent: [Circular *3],
                    socketPath: undefined,
                    method: 'POST',
                    maxHeaderSize: undefined,
                    insecureHTTPParser: undefined,
                    joinDuplicateHeaders: undefined,
                    path: '/api/token',
                    _ended: false,
                    res: null,
                    aborted: false,
                    timeoutCb: null,
                    upgradeOrConnect: false,
                    parser: <ref *4> HTTPParser {
                      '0': null,
                      '1': [Function: parserOnHeaders],
                      '2': [Function: parserOnHeadersComplete],
                      '3': [Function: parserOnBody],
                      '4': [Function: parserOnMessageComplete],
                      '5': null,
                      '6': null,
                      _headers: [],
                      _url: '',
                      socket: [Circular *2],
                      incoming: null,
                      outgoing: [Circular *6],
                      maxHeaderPairs: 2000,
                      _consumed: false,
                      onIncoming: [Function: parserOnIncomingClient],
                      joinDuplicateHeaders: undefined,
                      [Symbol(resource_symbol)]: HTTPClientAsyncResource {
                        type: 'HTTPINCOMINGMESSAGE',
                        req: [Circular *6]
                      }
                    },
                    maxHeadersCount: null,
                    reusedSocket: false,
                    host: 'accounts.spotify.com',
                    protocol: 'https:',
                    _redirectable: Writable {
                      _writableState: WritableState {
                        objectMode: false,
                        highWaterMark: 16384,
                        finalCalled: false,
                        needDrain: false,
                        ending: false,
                        ended: false,
                        finished: false,
                        destroyed: false,
                        decodeStrings: true,
                        defaultEncoding: 'utf8',
                        length: 0,
                        writing: false,
                        corked: 0,
                        sync: true,
                        bufferProcessing: false,
                        onwrite: [Function: bound onwrite],
                        writecb: null,
                        writelen: 0,
                        afterWriteTickInfo: null,
                        buffered: [],
                        bufferedIndex: 0,
                        allBuffers: true,
                        allNoop: true,
                        pendingcb: 0,
                        constructed: true,
                        prefinished: false,
                        errorEmitted: false,
                        emitClose: true,
                        autoDestroy: true,
                        errored: null,
                        closed: false,
                        closeEmitted: false,
                        [Symbol(kOnFinished)]: []
                      },
                      _events: [Object: null prototype] {
                        response: [Function: handleResponse],
                        error: [Function: handleRequestError],
                        socket: [Function: handleRequestSocket]
                      },
                      _eventsCount: 3,
                      _maxListeners: undefined,
                      _options: {
                        maxRedirects: 21,
                        maxBodyLength: Infinity,
                        protocol: 'https:',
                        path: '/api/token',
                        method: 'POST',
                        headers: [Object: null prototype] {
                          Accept: 'application/json, text/plain, */*',
                          'Content-Type': 'application/x-www-form-urlencoded',
                          'User-Agent': 'axios/1.6.8',
                          'Content-Length': '119',
                          'Accept-Encoding': 'gzip, compress, deflate, br'
                        },
                        agents: { http: undefined, https: undefined },
                        auth: undefined,
                        family: undefined,
                        beforeRedirect: [Function: dispatchBeforeRedirect],
                        beforeRedirects: { proxy: [Function: beforeRedirect] },
                        hostname: 'accounts.spotify.com',
                        port: '',
                        agent: undefined,
                        nativeProtocols: <ref *5> {
                          'http:': {
                            _connectionListener: [Function: connectionListener],
                            METHODS: [
                              'ACL',         'BIND',       'CHECKOUT',
                              'CONNECT',     'COPY',       'DELETE',
                              'GET',         'HEAD',       'LINK',
                              'LOCK',        'M-SEARCH',   'MERGE',
                              'MKACTIVITY',  'MKCALENDAR', 'MKCOL',
                              'MOVE',        'NOTIFY',     'OPTIONS',
                              'PATCH',       'POST',       'PROPFIND',
                              'PROPPATCH',   'PURGE',      'PUT',
                              'REBIND',      'REPORT',     'SEARCH',
                              'SOURCE',      'SUBSCRIBE',  'TRACE',
                              'UNBIND',      'UNLINK',     'UNLOCK',
                              'UNSUBSCRIBE'
                            ],
                            STATUS_CODES: {
                              '100': 'Continue',
                              '101': 'Switching Protocols',
                              '102': 'Processing',
                              '103': 'Early Hints',
                              '200': 'OK',
                              '201': 'Created',
                              '202': 'Accepted',
                              '203': 'Non-Authoritative Information',
                              '204': 'No Content',
                              '205': 'Reset Content',
                              '206': 'Partial Content',
                              '207': 'Multi-Status',
                              '208': 'Already Reported',
                              '226': 'IM Used',
                              '300': 'Multiple Choices',
                              '301': 'Moved Permanently',
                              '302': 'Found',
                              '303': 'See Other',
                              '304': 'Not Modified',
                              '305': 'Use Proxy',
                              '307': 'Temporary Redirect',
                              '308': 'Permanent Redirect',
                              '400': 'Bad Request',
                              '401': 'Unauthorized',
                              '402': 'Payment Required',
                              '403': 'Forbidden',
                              '404': 'Not Found',
                              '405': 'Method Not Allowed',
                              '406': 'Not Acceptable',
                              '407': 'Proxy Authentication Required',
                              '408': 'Request Timeout',
                              '409': 'Conflict',
                              '410': 'Gone',
                              '411': 'Length Required',
                              '412': 'Precondition Failed',
                              '413': 'Payload Too Large',
                              '414': 'URI Too Long',
                              '415': 'Unsupported Media Type',
                              '416': 'Range Not Satisfiable',
                              '417': 'Expectation Failed',
                              '418': "I'm a Teapot",
                              '421': 'Misdirected Request',
                              '422': 'Unprocessable Entity',
                              '423': 'Locked',
                              '424': 'Failed Dependency',
                              '425': 'Too Early',
                              '426': 'Upgrade Required',
                              '428': 'Precondition Required',
                              '429': 'Too Many Requests',
                              '431': 'Request Header Fields Too Large',
                              '451': 'Unavailable For Legal Reasons',
                              '500': 'Internal Server Error',
                              '501': 'Not Implemented',
                              '502': 'Bad Gateway',
                              '503': 'Service Unavailable',
                              '504': 'Gateway Timeout',
                              '505': 'HTTP Version Not Supported',
                              '506': 'Variant Also Negotiates',
                              '507': 'Insufficient Storage',
                              '508': 'Loop Detected',
                              '509': 'Bandwidth Limit Exceeded',
                              '510': 'Not Extended',
                              '511': 'Network Authentication Required'
                            },
                            Agent: [Function: Agent] {
                              defaultMaxSockets: Infinity
                            },
                            ClientRequest: [Function: ClientRequest],
                            IncomingMessage: [Function: IncomingMessage],
                            OutgoingMessage: [Function: OutgoingMessage],
                            Server: [Function: Server],
                            ServerResponse: [Function: ServerResponse],
                            createServer: [Function: createServer],
                            validateHeaderName: [Function: __node_internal_],
                            validateHeaderValue: [Function: __node_internal_],
                            get: [Function: get],
                            request: [Function: request],
                            setMaxIdleHTTPParsers: [Function: setMaxIdleHTTPParsers],
                            maxHeaderSize: [Getter],
                            globalAgent: [Getter/Setter]
                          },
                          'https:': {
                            Agent: [Function: Agent],
                            globalAgent: [Circular *3],
                            Server: [Function: Server],
                            createServer: [Function: createServer],
                            get: [Function: get],
                            request: [Function: request]
                          }
                        },
                        pathname: '/api/token'
                      },
                      _ended: false,
                      _ending: true,
                      _redirectCount: 0,
                      _redirects: [],
                      _requestBodyLength: 119,
                      _requestBodyBuffers: [
                        {
                          data: <Buffer 67 72 61 6e 74 5f 74 79 70 65 3d 63 6c 69 65 6e 74 5f 63 72 65 64 65 6e 74 69 61 6c 73 26 63 6c 69 65 6e 74 5f 69 64 3d 65 62 63 63 39 39 31 32 34 30 ... 69 more bytes>,
                          encoding: undefined
                        }
                      ],
                      _onNativeResponse: [Function (anonymous)],
                      _currentRequest: [Circular *6],
                      _currentUrl: 'https://accounts.spotify.com/api/token',
                      [Symbol(kCapture)]: false
                    },
                    [Symbol(kCapture)]: false,
                    [Symbol(kBytesWritten)]: 0,
                    [Symbol(kEndCalled)]: false,
                    [Symbol(kNeedDrain)]: false,
                    [Symbol(corked)]: 0,
                    [Symbol(kOutHeaders)]: [Object: null prototype] {
                      accept: [ 'Accept', 'application/json, text/plain, */*' ],
                      'content-type': [
                        'Content-Type',
                        'application/x-www-form-urlencoded'
                      ],
                      'user-agent': [ 'User-Agent', 'axios/1.6.8' ],
                      'content-length': [ 'Content-Length', '119' ],
                      'accept-encoding': [
                        'Accept-Encoding',
                        'gzip, compress, deflate, br'
                      ],
                      host: [ 'Host', 'accounts.spotify.com' ]
                    },
                    [Symbol(errored)]: null,
                    [Symbol(kUniqueHeaders)]: null
                  },
                  [Symbol(res)]: TLSWrap {
                    _parent: TCP {
                      reading: [Getter/Setter],
                      onconnection: null,
                      [Symbol(owner_symbol)]: [Circular *2]
                    },
                    _parentWrap: undefined,
                    _secureContext: SecureContext { context: SecureContext {} },
                    reading: false,
                    onkeylog: [Function: onkeylog],
                    onhandshakestart: {},
                    onhandshakedone: [Function (anonymous)],
                    onocspresponse: [Function: onocspresponse],
                    onnewsession: [Function: onnewsessionclient],
                    onerror: [Function: onerror],
                    [Symbol(owner_symbol)]: [Circular *2]
                  },
                  [Symbol(verified)]: false,
                  [Symbol(pendingSession)]: null,
                  [Symbol(async_id_symbol)]: 6,
                  [Symbol(kHandle)]: TLSWrap {
                    _parent: TCP {
                      reading: [Getter/Setter],
                      onconnection: null,
                      [Symbol(owner_symbol)]: [Circular *2]
                    },
                    _parentWrap: undefined,
                    _secureContext: SecureContext { context: SecureContext {} },
                    reading: false,
                    onkeylog: [Function: onkeylog],
                    onhandshakestart: {},
                    onhandshakedone: [Function (anonymous)],
                    onocspresponse: [Function: onocspresponse],
                    onnewsession: [Function: onnewsessionclient],
                    onerror: [Function: onerror],
                    [Symbol(owner_symbol)]: [Circular *2]
                  },
                  [Symbol(lastWriteQueueSize)]: 0,
                  [Symbol(timeout)]: null,
                  [Symbol(kBuffer)]: null,
                  [Symbol(kBufferCb)]: null,
                  [Symbol(kBufferGen)]: null,
                  [Symbol(kCapture)]: false,
                  [Symbol(kSetNoDelay)]: false,
                  [Symbol(kSetKeepAlive)]: true,
                  [Symbol(kSetKeepAliveInitialDelay)]: 60,
                  [Symbol(kBytesRead)]: 0,
                  [Symbol(kBytesWritten)]: 0,
                  [Symbol(connect-options)]: {
                    rejectUnauthorized: true,
                    ciphers: 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
                    checkServerIdentity: [Function: checkServerIdentity],
                    minDHSize: 1024,
                    maxRedirects: 21,
                    maxBodyLength: Infinity,
                    protocol: 'https:',
                    path: null,
                    method: 'POST',
                    headers: [Object: null prototype] {
                      Accept: 'application/json, text/plain, */*',
                      'Content-Type': 'application/x-www-form-urlencoded',
                      'User-Agent': 'axios/1.6.8',
                      'Content-Length': '119',
                      'Accept-Encoding': 'gzip, compress, deflate, br'
                    },
                    agents: { http: undefined, https: undefined },
                    auth: undefined,
                    family: undefined,
                    beforeRedirect: [Function: dispatchBeforeRedirect],
                    beforeRedirects: { proxy: [Function: beforeRedirect] },
                    hostname: 'accounts.spotify.com',
                    port: 443,
                    agent: undefined,
                    nativeProtocols: <ref *5> {
                      'http:': {
                        _connectionListener: [Function: connectionListener],
                        METHODS: [
                          'ACL',         'BIND',       'CHECKOUT',
                          'CONNECT',     'COPY',       'DELETE',
                          'GET',         'HEAD',       'LINK',
                          'LOCK',        'M-SEARCH',   'MERGE',
                          'MKACTIVITY',  'MKCALENDAR', 'MKCOL',
                          'MOVE',        'NOTIFY',     'OPTIONS',
                          'PATCH',       'POST',       'PROPFIND',
                          'PROPPATCH',   'PURGE',      'PUT',
                          'REBIND',      'REPORT',     'SEARCH',
                          'SOURCE',      'SUBSCRIBE',  'TRACE',
                          'UNBIND',      'UNLINK',     'UNLOCK',
                          'UNSUBSCRIBE'
                        ],
                        STATUS_CODES: {
                          '100': 'Continue',
                          '101': 'Switching Protocols',
                          '102': 'Processing',
                          '103': 'Early Hints',
                          '200': 'OK',
                          '201': 'Created',
                          '202': 'Accepted',
                          '203': 'Non-Authoritative Information',
                          '204': 'No Content',
                          '205': 'Reset Content',
                          '206': 'Partial Content',
                          '207': 'Multi-Status',
                          '208': 'Already Reported',
                          '226': 'IM Used',
                          '300': 'Multiple Choices',
                          '301': 'Moved Permanently',
                          '302': 'Found',
                          '303': 'See Other',
                          '304': 'Not Modified',
                          '305': 'Use Proxy',
                          '307': 'Temporary Redirect',
                          '308': 'Permanent Redirect',
                          '400': 'Bad Request',
                          '401': 'Unauthorized',
                          '402': 'Payment Required',
                          '403': 'Forbidden',
                          '404': 'Not Found',
                          '405': 'Method Not Allowed',
                          '406': 'Not Acceptable',
                          '407': 'Proxy Authentication Required',
                          '408': 'Request Timeout',
                          '409': 'Conflict',
                          '410': 'Gone',
                          '411': 'Length Required',
                          '412': 'Precondition Failed',
                          '413': 'Payload Too Large',
                          '414': 'URI Too Long',
                          '415': 'Unsupported Media Type',
                          '416': 'Range Not Satisfiable',
                          '417': 'Expectation Failed',
                          '418': "I'm a Teapot",
                          '421': 'Misdirected Request',
                          '422': 'Unprocessable Entity',
                          '423': 'Locked',
                          '424': 'Failed Dependency',
                          '425': 'Too Early',
                          '426': 'Upgrade Required',
                          '428': 'Precondition Required',
                          '429': 'Too Many Requests',
                          '431': 'Request Header Fields Too Large',
                          '451': 'Unavailable For Legal Reasons',
                          '500': 'Internal Server Error',
                          '501': 'Not Implemented',
                          '502': 'Bad Gateway',
                          '503': 'Service Unavailable',
                          '504': 'Gateway Timeout',
                          '505': 'HTTP Version Not Supported',
                          '506': 'Variant Also Negotiates',
                          '507': 'Insufficient Storage',
                          '508': 'Loop Detected',
                          '509': 'Bandwidth Limit Exceeded',
                          '510': 'Not Extended',
                          '511': 'Network Authentication Required'
                        },
                        Agent: [Function: Agent] {
                          defaultMaxSockets: Infinity
                        },
                        ClientRequest: [Function: ClientRequest],
                        IncomingMessage: [Function: IncomingMessage],
                        OutgoingMessage: [Function: OutgoingMessage],
                        Server: [Function: Server],
                        ServerResponse: [Function: ServerResponse],
                        createServer: [Function: createServer],
                        validateHeaderName: [Function: __node_internal_],
                        validateHeaderValue: [Function: __node_internal_],
                        get: [Function: get],
                        request: [Function: request],
                        setMaxIdleHTTPParsers: [Function: setMaxIdleHTTPParsers],
                        maxHeaderSize: [Getter],
                        globalAgent: [Getter/Setter]
                      },
                      'https:': {
                        Agent: [Function: Agent],
                        globalAgent: [Circular *3],
                        Server: [Function: Server],
                        createServer: [Function: createServer],
                        get: [Function: get],
                        request: [Function: request]
                      }
                    },
                    pathname: '/api/token',
                    _defaultAgent: [Circular *3],
                    host: 'accounts.spotify.com',
                    noDelay: true,
                    servername: 'accounts.spotify.com',
                    _agentKey: 'accounts.spotify.com:443:::::::::::::::::::::',
                    encoding: null,
                    singleUse: true
                  }
                }
              ]
            },
            freeSockets: [Object: null prototype] {},
            keepAliveMsecs: 1000,
            keepAlive: false,
            maxSockets: Infinity,
            maxFreeSockets: 256,
            scheduling: 'lifo',
            maxTotalSockets: Infinity,
            totalSocketCount: 1,
            maxCachedSessions: 100,
            _sessionCache: {
              map: {
                'www.wikidata.org:443:::::::::::::::::::::': <Buffer 30 82 08 7d 02 01 01 02 02 03 04 04 02 13 02 04 20 49 81 10 e3 ea 7d 84 9b e4 63 a1 f3 bf 02 aa db cd 63 84 bf 4f 51 15 cc 96 ff a3 1c ef 0f 60 a7 04 ... 2127 more bytes>
              },
              list: [ 'www.wikidata.org:443:::::::::::::::::::::' ]
            },
            [Symbol(kCapture)]: false
          },
          host: 'www.wikidata.org',
          noDelay: true,
          servername: 'www.wikidata.org',
          _agentKey: 'www.wikidata.org:443:::::::::::::::::::::',
          encoding: null,
          singleUse: true
        }
      },
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      rawHeaders: [
        'date',
        'Wed, 01 May 2024 17:15:27 GMT',
        'server',
        'mw-api-ext.eqiad.main-6568d96485-7z7s5',
        'x-content-type-options',
        'nosniff',
        'cache-control',
        'private,no-cache,s-maxage=0',
        'access-control-allow-origin',
        '*',
        'vary',
        'Accept-Encoding',
        'content-type',
        'application/json',
        'content-encoding',
        'gzip',
        'age',
        '0',
        'x-cache',
        'cp1104 miss, cp1104 pass',
        'x-cache-status',
        'pass',
        'server-timing',
        'cache;desc="pass", host;desc="cp1104"',
        'strict-transport-security',
        'max-age=106384710; includeSubDomains; preload',
        'report-to',
        '{ "group": "wm_nel", "max_age": 604800, "endpoints": [{ "url": "https://intake-logging.wikimedia.org/v1/events?stream=w3c.reportingapi.network_error&schema_uri=/w3c/reportingapi/network_error/1.0.0" }] }',
        'nel',
        '{ "report_to": "wm_nel", "max_age": 604800, "failure_fraction": 0.05, "success_fraction": 0.0}',
        'set-cookie',
        'WMF-Last-Access=01-May-2024;Path=/;HttpOnly;secure;Expires=Sun, 02 Jun 2024 12:00:00 GMT',
        'set-cookie',
        'WMF-Last-Access-Global=01-May-2024;Path=/;Domain=.wikidata.org;HttpOnly;secure;Expires=Sun, 02 Jun 2024 12:00:00 GMT',
        'x-client-ip',
        '186.219.185.78',
        'set-cookie',
        'GeoIP=BR:PR:Curitiba:-25.50:-49.29:v4; Path=/; secure; Domain=.wikidata.org',
        'set-cookie',
        'NetworkProbeLimit=0.001;Path=/;Secure;Max-Age=3600',
        'content-length',
        '177',
        'connection',
        'close'
      ],
      rawTrailers: [],
      joinDuplicateHeaders: undefined,
      aborted: false,
      upgrade: false,
      url: '',
      method: null,
      statusCode: 400,
      statusMessage: 'Bad Request',
      client: TLSSocket {
        _tlsOptions: {
          allowHalfOpen: undefined,
          pipe: false,
          secureContext: SecureContext { context: SecureContext {} },
          isServer: false,
          requestCert: true,
          rejectUnauthorized: true,
          session: undefined,
          ALPNProtocols: undefined,
          requestOCSP: undefined,
          enableTrace: undefined,
          pskCallback: undefined,
          highWaterMark: undefined,
          onread: undefined,
          signal: undefined
        },
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        secureConnecting: false,
        _SNICallback: null,
        servername: 'www.wikidata.org',
        alpnProtocol: false,
        authorized: true,
        authorizationError: null,
        encrypted: true,
        _events: [Object: null prototype] {
          close: [
            [Function: onSocketCloseDestroySSL],
            [Function: onClose],
            [Function: socketCloseListener]
          ],
          end: [Function: onReadableStreamEnd],
          newListener: [Function: keylogNewListener],
          secure: [Function: onConnectSecure],
          session: [Function (anonymous)],
          free: [Function: onFree],
          timeout: [Function: onTimeout],
          agentRemove: [Function: onRemove],
          error: [Function: socketErrorListener]
        },
        _eventsCount: 9,
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: 'www.wikidata.org',
        _closeAfterHandlingError: false,
        _readableState: ReadableState {
          objectMode: false,
          highWaterMark: 16384,
          buffer: BufferList { head: null, tail: null, length: 0 },
          length: 0,
          pipes: [],
          flowing: true,
          ended: true,
          endEmitted: true,
          reading: false,
          constructed: true,
          sync: false,
          needReadable: false,
          emittedReadable: false,
          readableListening: false,
          resumeScheduled: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: true,
          destroyed: true,
          errored: null,
          closed: true,
          closeEmitted: true,
          defaultEncoding: 'utf8',
          awaitDrainWriters: null,
          multiAwaitDrain: false,
          readingMore: false,
          dataEmitted: true,
          decoder: null,
          encoding: null,
          [Symbol(kPaused)]: false
        },
        _maxListeners: undefined,
        _writableState: WritableState {
          objectMode: false,
          highWaterMark: 16384,
          finalCalled: true,
          needDrain: false,
          ending: true,
          ended: true,
          finished: true,
          destroyed: true,
          decodeStrings: false,
          defaultEncoding: 'utf8',
          length: 0,
          writing: false,
          corked: 0,
          sync: false,
          bufferProcessing: false,
          onwrite: [Function: bound onwrite],
          writecb: null,
          writelen: 0,
          afterWriteTickInfo: null,
          buffered: [],
          bufferedIndex: 0,
          allBuffers: true,
          allNoop: true,
          pendingcb: 0,
          constructed: true,
          prefinished: true,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: true,
          errored: null,
          closed: true,
          closeEmitted: true,
          [Symbol(kOnFinished)]: []
        },
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: undefined,
        _server: null,
        ssl: null,
        _requestCert: true,
        _rejectUnauthorized: true,
        parser: null,
        _httpMessage: [Circular *1],
        write: [Function: writeAfterFIN],
        [Symbol(res)]: null,
        [Symbol(verified)]: true,
        [Symbol(pendingSession)]: null,
        [Symbol(async_id_symbol)]: 35,
        [Symbol(kHandle)]: null,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(kCapture)]: false,
        [Symbol(kSetNoDelay)]: false,
        [Symbol(kSetKeepAlive)]: true,
        [Symbol(kSetKeepAliveInitialDelay)]: 60,
        [Symbol(kBytesRead)]: 1442,
        [Symbol(kBytesWritten)]: 400,
        [Symbol(connect-options)]: {
          rejectUnauthorized: true,
          ciphers: 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
          checkServerIdentity: [Function: checkServerIdentity],
          minDHSize: 1024,
          maxRedirects: 21,
          maxBodyLength: Infinity,
          protocol: 'https:',
          path: null,
          method: 'POST',
          headers: [Object: null prototype] {
            Accept: 'application/json, text/plain, */*',
            'Content-Type': 'application/json',
            'User-Agent': 'axios/1.6.8',
            'Content-Length': '141',
            'Accept-Encoding': 'gzip, compress, deflate, br'
          },
          agents: { http: undefined, https: undefined },
          auth: undefined,
          family: undefined,
          beforeRedirect: [Function: dispatchBeforeRedirect],
          beforeRedirects: { proxy: [Function: beforeRedirect] },
          hostname: 'www.wikidata.org',
          port: 443,
          agent: undefined,
          nativeProtocols: <ref *5> {
            'http:': {
              _connectionListener: [Function: connectionListener],
              METHODS: [
                'ACL',         'BIND',       'CHECKOUT',
                'CONNECT',     'COPY',       'DELETE',
                'GET',         'HEAD',       'LINK',
                'LOCK',        'M-SEARCH',   'MERGE',
                'MKACTIVITY',  'MKCALENDAR', 'MKCOL',
                'MOVE',        'NOTIFY',     'OPTIONS',
                'PATCH',       'POST',       'PROPFIND',
                'PROPPATCH',   'PURGE',      'PUT',
                'REBIND',      'REPORT',     'SEARCH',
                'SOURCE',      'SUBSCRIBE',  'TRACE',
                'UNBIND',      'UNLINK',     'UNLOCK',
                'UNSUBSCRIBE'
              ],
              STATUS_CODES: {
                '100': 'Continue',
                '101': 'Switching Protocols',
                '102': 'Processing',
                '103': 'Early Hints',
                '200': 'OK',
                '201': 'Created',
                '202': 'Accepted',
                '203': 'Non-Authoritative Information',
                '204': 'No Content',
                '205': 'Reset Content',
                '206': 'Partial Content',
                '207': 'Multi-Status',
                '208': 'Already Reported',
                '226': 'IM Used',
                '300': 'Multiple Choices',
                '301': 'Moved Permanently',
                '302': 'Found',
                '303': 'See Other',
                '304': 'Not Modified',
                '305': 'Use Proxy',
                '307': 'Temporary Redirect',
                '308': 'Permanent Redirect',
                '400': 'Bad Request',
                '401': 'Unauthorized',
                '402': 'Payment Required',
                '403': 'Forbidden',
                '404': 'Not Found',
                '405': 'Method Not Allowed',
                '406': 'Not Acceptable',
                '407': 'Proxy Authentication Required',
                '408': 'Request Timeout',
                '409': 'Conflict',
                '410': 'Gone',
                '411': 'Length Required',
                '412': 'Precondition Failed',
                '413': 'Payload Too Large',
                '414': 'URI Too Long',
                '415': 'Unsupported Media Type',
                '416': 'Range Not Satisfiable',
                '417': 'Expectation Failed',
                '418': "I'm a Teapot",
                '421': 'Misdirected Request',
                '422': 'Unprocessable Entity',
                '423': 'Locked',
                '424': 'Failed Dependency',
                '425': 'Too Early',
                '426': 'Upgrade Required',
                '428': 'Precondition Required',
                '429': 'Too Many Requests',
                '431': 'Request Header Fields Too Large',
                '451': 'Unavailable For Legal Reasons',
                '500': 'Internal Server Error',
                '501': 'Not Implemented',
                '502': 'Bad Gateway',
                '503': 'Service Unavailable',
                '504': 'Gateway Timeout',
                '505': 'HTTP Version Not Supported',
                '506': 'Variant Also Negotiates',
                '507': 'Insufficient Storage',
                '508': 'Loop Detected',
                '509': 'Bandwidth Limit Exceeded',
                '510': 'Not Extended',
                '511': 'Network Authentication Required'
              },
              Agent: [Function: Agent] { defaultMaxSockets: Infinity },
              ClientRequest: [Function: ClientRequest],
              IncomingMessage: [Function: IncomingMessage],
              OutgoingMessage: [Function: OutgoingMessage],
              Server: [Function: Server],
              ServerResponse: [Function: ServerResponse],
              createServer: [Function: createServer],
              validateHeaderName: [Function: __node_internal_],
              validateHeaderValue: [Function: __node_internal_],
              get: [Function: get],
              request: [Function: request],
              setMaxIdleHTTPParsers: [Function: setMaxIdleHTTPParsers],
              maxHeaderSize: [Getter],
              globalAgent: [Getter/Setter]
            },
            'https:': {
              Agent: [Function: Agent],
              globalAgent: <ref *3> Agent {
                _events: [Object: null prototype] {
                  free: [Function (anonymous)],
                  newListener: [Function: maybeEnableKeylog]
                },
                _eventsCount: 2,
                _maxListeners: undefined,
                defaultPort: 443,
                protocol: 'https:',
                options: [Object: null prototype] { noDelay: true, path: null },
                requests: [Object: null prototype] {},
                sockets: [Object: null prototype] {
                  'accounts.spotify.com:443:::::::::::::::::::::': [
                    <ref *2> TLSSocket {
                      _tlsOptions: {
                        allowHalfOpen: undefined,
                        pipe: false,
                        secureContext: SecureContext { context: SecureContext {} },
                        isServer: false,
                        requestCert: true,
                        rejectUnauthorized: true,
                        session: undefined,
                        ALPNProtocols: undefined,
                        requestOCSP: undefined,
                        enableTrace: undefined,
                        pskCallback: undefined,
                        highWaterMark: undefined,
                        onread: undefined,
                        signal: undefined
                      },
                      _secureEstablished: false,
                      _securePending: false,
                      _newSessionPending: false,
                      _controlReleased: true,
                      secureConnecting: true,
                      _SNICallback: null,
                      servername: null,
                      alpnProtocol: null,
                      authorized: false,
                      authorizationError: null,
                      encrypted: true,
                      _events: [Object: null prototype] {
                        close: [
                          [Function: onSocketCloseDestroySSL],
                          [Function: bound onceWrapper] {
                            listener: [Function (anonymous)]
                          },
                          [Function: onClose],
                          [Function: socketCloseListener],
                          [Function: bound onceWrapper] {
                            listener: [Function: onClose]
                          }
                        ],
                        end: [
                          [Function: onConnectEnd],
                          [Function: onReadableStreamEnd],
                          [Function: socketOnEnd]
                        ],
                        newListener: [Function: keylogNewListener],
                        connect: [
                          [Function: bound onceWrapper] {
                            listener: [Function (anonymous)]
                          },
                          [Function: bound onceWrapper] {
                            listener: [Function (anonymous)]
                          },
                          [Function: bound onceWrapper] {
                            listener: [Function: connect]
                          }
                        ],
                        secure: [Function: onConnectSecure],
                        session: [Function (anonymous)],
                        free: [Function: onFree],
                        timeout: [Function: onTimeout],
                        agentRemove: [Function: onRemove],
                        error: [Function: socketErrorListener],
                        data: [Function: socketOnData],
                        drain: [Function: ondrain]
                      },
                      _eventsCount: 12,
                      connecting: true,
                      _hadError: false,
                      _parent: null,
                      _host: 'accounts.spotify.com',
                      _closeAfterHandlingError: false,
                      _readableState: ReadableState {
                        objectMode: false,
                        highWaterMark: 16384,
                        buffer: BufferList { head: null, tail: null, length: 0 },
                        length: 0,
                        pipes: [],
                        flowing: true,
                        ended: false,
                        endEmitted: false,
                        reading: true,
                        constructed: true,
                        sync: false,
                        needReadable: true,
                        emittedReadable: false,
                        readableListening: false,
                        resumeScheduled: false,
                        errorEmitted: false,
                        emitClose: false,
                        autoDestroy: true,
                        destroyed: false,
                        errored: null,
                        closed: false,
                        closeEmitted: false,
                        defaultEncoding: 'utf8',
                        awaitDrainWriters: null,
                        multiAwaitDrain: false,
                        readingMore: false,
                        dataEmitted: false,
                        decoder: null,
                        encoding: null,
                        [Symbol(kPaused)]: false
                      },
                      _maxListeners: undefined,
                      _writableState: WritableState {
                        objectMode: false,
                        highWaterMark: 16384,
                        finalCalled: false,
                        needDrain: false,
                        ending: false,
                        ended: false,
                        finished: false,
                        destroyed: false,
                        decodeStrings: false,
                        defaultEncoding: 'utf8',
                        length: 378,
                        writing: true,
                        corked: 0,
                        sync: false,
                        bufferProcessing: false,
                        onwrite: [Function: bound onwrite],
                        writecb: [Function (anonymous)],
                        writelen: 378,
                        afterWriteTickInfo: null,
                        buffered: [],
                        bufferedIndex: 0,
                        allBuffers: true,
                        allNoop: true,
                        pendingcb: 1,
                        constructed: true,
                        prefinished: false,
                        errorEmitted: false,
                        emitClose: false,
                        autoDestroy: true,
                        errored: null,
                        closed: false,
                        closeEmitted: false,
                        [Symbol(kOnFinished)]: []
                      },
                      allowHalfOpen: false,
                      _sockname: null,
                      _pendingData: [
                        {
                          chunk: 'POST /api/token HTTP/1.1\r\n' +
                            'Accept: application/json, text/plain, */*\r\n' +
                            'Content-Type: application/x-www-form-urlencoded\r\n' +
                            'User-Agent: axios/1.6.8\r\n' +
                            'Content-Length: 119\r\n' +
                            'Accept-Encoding: gzip, compress, deflate, br\r\n' +
                            'Host: accounts.spotify.com\r\n' +
                            'Connection: close\r\n' +
                            '\r\n',
                          encoding: 'latin1',
                          callback: [Function: nop]
                        },
                        {
                          chunk: <Buffer 67 72 61 6e 74 5f 74 79 70 65 3d 63 6c 69 65 6e 74 5f 63 72 65 64 65 6e 74 69 61 6c 73 26 63 6c 69 65 6e 74 5f 69 64 3d 65 62 63 63 39 39 31 32 34 30 ... 69 more bytes>,
                          encoding: 'buffer',
                          callback: [Function (anonymous)]
                        },
                        allBuffers: false
                      ],
                      _pendingEncoding: '',
                      server: undefined,
                      _server: null,
                      ssl: TLSWrap {
                        _parent: TCP {
                          reading: [Getter/Setter],
                          onconnection: null,
                          [Symbol(owner_symbol)]: [Circular *2]
                        },
                        _parentWrap: undefined,
                        _secureContext: SecureContext { context: SecureContext {} },
                        reading: false,
                        onkeylog: [Function: onkeylog],
                        onhandshakestart: {},
                        onhandshakedone: [Function (anonymous)],
                        onocspresponse: [Function: onocspresponse],
                        onnewsession: [Function: onnewsessionclient],
                        onerror: [Function: onerror],
                        [Symbol(owner_symbol)]: [Circular *2]
                      },
                      _requestCert: true,
                      _rejectUnauthorized: true,
                      parser: <ref *4> HTTPParser {
                        '0': null,
                        '1': [Function: parserOnHeaders],
                        '2': [Function: parserOnHeadersComplete],
                        '3': [Function: parserOnBody],
                        '4': [Function: parserOnMessageComplete],
                        '5': null,
                        '6': null,
                        _headers: [],
                        _url: '',
                        socket: [Circular *2],
                        incoming: null,
                        outgoing: <ref *6> ClientRequest {
                          _events: [Object: null prototype] {
                            response: [Function: bound onceWrapper] {
                              listener: [Function (anonymous)]
                            },
                            abort: [Function (anonymous)],
                            aborted: [Function (anonymous)],
                            connect: [Function (anonymous)],
                            error: [Function (anonymous)],
                            socket: [Function (anonymous)],
                            timeout: [Function (anonymous)]
                          },
                          _eventsCount: 7,
                          _maxListeners: undefined,
                          outputData: [],
                          outputSize: 0,
                          writable: true,
                          destroyed: false,
                          _last: true,
                          chunkedEncoding: false,
                          shouldKeepAlive: false,
                          maxRequestsOnConnectionReached: false,
                          _defaultKeepAlive: true,
                          useChunkedEncodingByDefault: true,
                          sendDate: false,
                          _removedConnection: false,
                          _removedContLen: false,
                          _removedTE: false,
                          strictContentLength: false,
                          _contentLength: '119',
                          _hasBody: true,
                          _trailer: '',
                          finished: false,
                          _headerSent: true,
                          _closed: false,
                          socket: [Circular *2],
                          _header: 'POST /api/token HTTP/1.1\r\n' +
                            'Accept: application/json, text/plain, */*\r\n' +
                            'Content-Type: application/x-www-form-urlencoded\r\n' +
                            'User-Agent: axios/1.6.8\r\n' +
                            'Content-Length: 119\r\n' +
                            'Accept-Encoding: gzip, compress, deflate, br\r\n' +
                            'Host: accounts.spotify.com\r\n' +
                            'Connection: close\r\n' +
                            '\r\n',
                          _keepAliveTimeout: 0,
                          _onPendingData: [Function: nop],
                          agent: [Circular *3],
                          socketPath: undefined,
                          method: 'POST',
                          maxHeaderSize: undefined,
                          insecureHTTPParser: undefined,
                          joinDuplicateHeaders: undefined,
                          path: '/api/token',
                          _ended: false,
                          res: null,
                          aborted: false,
                          timeoutCb: null,
                          upgradeOrConnect: false,
                          parser: [Circular *4],
                          maxHeadersCount: null,
                          reusedSocket: false,
                          host: 'accounts.spotify.com',
                          protocol: 'https:',
                          _redirectable: Writable {
                            _writableState: WritableState {
                              objectMode: false,
                              highWaterMark: 16384,
                              finalCalled: false,
                              needDrain: false,
                              ending: false,
                              ended: false,
                              finished: false,
                              destroyed: false,
                              decodeStrings: true,
                              defaultEncoding: 'utf8',
                              length: 0,
                              writing: false,
                              corked: 0,
                              sync: true,
                              bufferProcessing: false,
                              onwrite: [Function: bound onwrite],
                              writecb: null,
                              writelen: 0,
                              afterWriteTickInfo: null,
                              buffered: [],
                              bufferedIndex: 0,
                              allBuffers: true,
                              allNoop: true,
                              pendingcb: 0,
                              constructed: true,
                              prefinished: false,
                              errorEmitted: false,
                              emitClose: true,
                              autoDestroy: true,
                              errored: null,
                              closed: false,
                              closeEmitted: false,
                              [Symbol(kOnFinished)]: []
                            },
                            _events: [Object: null prototype] {
                              response: [Function: handleResponse],
                              error: [Function: handleRequestError],
                              socket: [Function: handleRequestSocket]
                            },
                            _eventsCount: 3,
                            _maxListeners: undefined,
                            _options: {
                              maxRedirects: 21,
                              maxBodyLength: Infinity,
                              protocol: 'https:',
                              path: '/api/token',
                              method: 'POST',
                              headers: [Object: null prototype] {
                                Accept: 'application/json, text/plain, */*',
                                'Content-Type': 'application/x-www-form-urlencoded',
                                'User-Agent': 'axios/1.6.8',
                                'Content-Length': '119',
                                'Accept-Encoding': 'gzip, compress, deflate, br'
                              },
                              agents: { http: undefined, https: undefined },
                              auth: undefined,
                              family: undefined,
                              beforeRedirect: [Function: dispatchBeforeRedirect],
                              beforeRedirects: { proxy: [Function: beforeRedirect] },
                              hostname: 'accounts.spotify.com',
                              port: '',
                              agent: undefined,
                              nativeProtocols: [Circular *5],
                              pathname: '/api/token'
                            },
                            _ended: false,
                            _ending: true,
                            _redirectCount: 0,
                            _redirects: [],
                            _requestBodyLength: 119,
                            _requestBodyBuffers: [
                              {
                                data: <Buffer 67 72 61 6e 74 5f 74 79 70 65 3d 63 6c 69 65 6e 74 5f 63 72 65 64 65 6e 74 69 61 6c 73 26 63 6c 69 65 6e 74 5f 69 64 3d 65 62 63 63 39 39 31 32 34 30 ... 69 more bytes>,
                                encoding: undefined
                              }
                            ],
                            _onNativeResponse: [Function (anonymous)],
                            _currentRequest: [Circular *6],
                            _currentUrl: 'https://accounts.spotify.com/api/token',
                            [Symbol(kCapture)]: false
                          },
                          [Symbol(kCapture)]: false,
                          [Symbol(kBytesWritten)]: 0,
                          [Symbol(kEndCalled)]: false,
                          [Symbol(kNeedDrain)]: false,
                          [Symbol(corked)]: 0,
                          [Symbol(kOutHeaders)]: [Object: null prototype] {
                            accept: [
                              'Accept',
                              'application/json, text/plain, */*'
                            ],
                            'content-type': [
                              'Content-Type',
                              'application/x-www-form-urlencoded'
                            ],
                            'user-agent': [ 'User-Agent', 'axios/1.6.8' ],
                            'content-length': [ 'Content-Length', '119' ],
                            'accept-encoding': [
                              'Accept-Encoding',
                              'gzip, compress, deflate, br'
                            ],
                            host: [ 'Host', 'accounts.spotify.com' ]
                          },
                          [Symbol(errored)]: null,
                          [Symbol(kUniqueHeaders)]: null
                        },
                        maxHeaderPairs: 2000,
                        _consumed: false,
                        onIncoming: [Function: parserOnIncomingClient],
                        joinDuplicateHeaders: undefined,
                        [Symbol(resource_symbol)]: HTTPClientAsyncResource {
                          type: 'HTTPINCOMINGMESSAGE',
                          req: <ref *6> ClientRequest {
                            _events: [Object: null prototype] {
                              response: [Function: bound onceWrapper] {
                                listener: [Function (anonymous)]
                              },
                              abort: [Function (anonymous)],
                              aborted: [Function (anonymous)],
                              connect: [Function (anonymous)],
                              error: [Function (anonymous)],
                              socket: [Function (anonymous)],
                              timeout: [Function (anonymous)]
                            },
                            _eventsCount: 7,
                            _maxListeners: undefined,
                            outputData: [],
                            outputSize: 0,
                            writable: true,
                            destroyed: false,
                            _last: true,
                            chunkedEncoding: false,
                            shouldKeepAlive: false,
                            maxRequestsOnConnectionReached: false,
                            _defaultKeepAlive: true,
                            useChunkedEncodingByDefault: true,
                            sendDate: false,
                            _removedConnection: false,
                            _removedContLen: false,
                            _removedTE: false,
                            strictContentLength: false,
                            _contentLength: '119',
                            _hasBody: true,
                            _trailer: '',
                            finished: false,
                            _headerSent: true,
                            _closed: false,
                            socket: [Circular *2],
                            _header: 'POST /api/token HTTP/1.1\r\n' +
                              'Accept: application/json, text/plain, */*\r\n' +
                              'Content-Type: application/x-www-form-urlencoded\r\n' +
                              'User-Agent: axios/1.6.8\r\n' +
                              'Content-Length: 119\r\n' +
                              'Accept-Encoding: gzip, compress, deflate, br\r\n' +
                              'Host: accounts.spotify.com\r\n' +
                              'Connection: close\r\n' +
                              '\r\n',
                            _keepAliveTimeout: 0,
                            _onPendingData: [Function: nop],
                            agent: [Circular *3],
                            socketPath: undefined,
                            method: 'POST',
                            maxHeaderSize: undefined,
                            insecureHTTPParser: undefined,
                            joinDuplicateHeaders: undefined,
                            path: '/api/token',
                            _ended: false,
                            res: null,
                            aborted: false,
                            timeoutCb: null,
                            upgradeOrConnect: false,
                            parser: [Circular *4],
                            maxHeadersCount: null,
                            reusedSocket: false,
                            host: 'accounts.spotify.com',
                            protocol: 'https:',
                            _redirectable: Writable {
                              _writableState: WritableState {
                                objectMode: false,
                                highWaterMark: 16384,
                                finalCalled: false,
                                needDrain: false,
                                ending: false,
                                ended: false,
                                finished: false,
                                destroyed: false,
                                decodeStrings: true,
                                defaultEncoding: 'utf8',
                                length: 0,
                                writing: false,
                                corked: 0,
                                sync: true,
                                bufferProcessing: false,
                                onwrite: [Function: bound onwrite],
                                writecb: null,
                                writelen: 0,
                                afterWriteTickInfo: null,
                                buffered: [],
                                bufferedIndex: 0,
                                allBuffers: true,
                                allNoop: true,
                                pendingcb: 0,
                                constructed: true,
                                prefinished: false,
                                errorEmitted: false,
                                emitClose: true,
                                autoDestroy: true,
                                errored: null,
                                closed: false,
                                closeEmitted: false,
                                [Symbol(kOnFinished)]: []
                              },
                              _events: [Object: null prototype] {
                                response: [Function: handleResponse],
                                error: [Function: handleRequestError],
                                socket: [Function: handleRequestSocket]
                              },
                              _eventsCount: 3,
                              _maxListeners: undefined,
                              _options: {
                                maxRedirects: 21,
                                maxBodyLength: Infinity,
                                protocol: 'https:',
                                path: '/api/token',
                                method: 'POST',
                                headers: [Object: null prototype] {
                                  Accept: 'application/json, text/plain, */*',
                                  'Content-Type': 'application/x-www-form-urlencoded',
                                  'User-Agent': 'axios/1.6.8',
                                  'Content-Length': '119',
                                  'Accept-Encoding': 'gzip, compress, deflate, br'
                                },
                                agents: { http: undefined, https: undefined },
                                auth: undefined,
                                family: undefined,
                                beforeRedirect: [Function: dispatchBeforeRedirect],
                                beforeRedirects: { proxy: [Function: beforeRedirect] },
                                hostname: 'accounts.spotify.com',
                                port: '',
                                agent: undefined,
                                nativeProtocols: [Circular *5],
                                pathname: '/api/token'
                              },
                              _ended: false,
                              _ending: true,
                              _redirectCount: 0,
                              _redirects: [],
                              _requestBodyLength: 119,
                              _requestBodyBuffers: [
                                {
                                  data: <Buffer 67 72 61 6e 74 5f 74 79 70 65 3d 63 6c 69 65 6e 74 5f 63 72 65 64 65 6e 74 69 61 6c 73 26 63 6c 69 65 6e 74 5f 69 64 3d 65 62 63 63 39 39 31 32 34 30 ... 69 more bytes>,
                                  encoding: undefined
                                }
                              ],
                              _onNativeResponse: [Function (anonymous)],
                              _currentRequest: [Circular *6],
                              _currentUrl: 'https://accounts.spotify.com/api/token',
                              [Symbol(kCapture)]: false
                            },
                            [Symbol(kCapture)]: false,
                            [Symbol(kBytesWritten)]: 0,
                            [Symbol(kEndCalled)]: false,
                            [Symbol(kNeedDrain)]: false,
                            [Symbol(corked)]: 0,
                            [Symbol(kOutHeaders)]: [Object: null prototype] {
                              accept: [
                                'Accept',
                                'application/json, text/plain, */*'
                              ],
                              'content-type': [
                                'Content-Type',
                                'application/x-www-form-urlencoded'
                              ],
                              'user-agent': [ 'User-Agent', 'axios/1.6.8' ],
                              'content-length': [ 'Content-Length', '119' ],
                              'accept-encoding': [
                                'Accept-Encoding',
                                'gzip, compress, deflate, br'
                              ],
                              host: [ 'Host', 'accounts.spotify.com' ]
                            },
                            [Symbol(errored)]: null,
                            [Symbol(kUniqueHeaders)]: null
                          }
                        }
                      },
                      _httpMessage: <ref *6> ClientRequest {
                        _events: [Object: null prototype] {
                          response: [Function: bound onceWrapper] {
                            listener: [Function (anonymous)]
                          },
                          abort: [Function (anonymous)],
                          aborted: [Function (anonymous)],
                          connect: [Function (anonymous)],
                          error: [Function (anonymous)],
                          socket: [Function (anonymous)],
                          timeout: [Function (anonymous)]
                        },
                        _eventsCount: 7,
                        _maxListeners: undefined,
                        outputData: [],
                        outputSize: 0,
                        writable: true,
                        destroyed: false,
                        _last: true,
                        chunkedEncoding: false,
                        shouldKeepAlive: false,
                        maxRequestsOnConnectionReached: false,
                        _defaultKeepAlive: true,
                        useChunkedEncodingByDefault: true,
                        sendDate: false,
                        _removedConnection: false,
                        _removedContLen: false,
                        _removedTE: false,
                        strictContentLength: false,
                        _contentLength: '119',
                        _hasBody: true,
                        _trailer: '',
                        finished: false,
                        _headerSent: true,
                        _closed: false,
                        socket: [Circular *2],
                        _header: 'POST /api/token HTTP/1.1\r\n' +
                          'Accept: application/json, text/plain, */*\r\n' +
                          'Content-Type: application/x-www-form-urlencoded\r\n' +
                          'User-Agent: axios/1.6.8\r\n' +
                          'Content-Length: 119\r\n' +
                          'Accept-Encoding: gzip, compress, deflate, br\r\n' +
                          'Host: accounts.spotify.com\r\n' +
                          'Connection: close\r\n' +
                          '\r\n',
                        _keepAliveTimeout: 0,
                        _onPendingData: [Function: nop],
                        agent: [Circular *3],
                        socketPath: undefined,
                        method: 'POST',
                        maxHeaderSize: undefined,
                        insecureHTTPParser: undefined,
                        joinDuplicateHeaders: undefined,
                        path: '/api/token',
                        _ended: false,
                        res: null,
                        aborted: false,
                        timeoutCb: null,
                        upgradeOrConnect: false,
                        parser: <ref *4> HTTPParser {
                          '0': null,
                          '1': [Function: parserOnHeaders],
                          '2': [Function: parserOnHeadersComplete],
                          '3': [Function: parserOnBody],
                          '4': [Function: parserOnMessageComplete],
                          '5': null,
                          '6': null,
                          _headers: [],
                          _url: '',
                          socket: [Circular *2],
                          incoming: null,
                          outgoing: [Circular *6],
                          maxHeaderPairs: 2000,
                          _consumed: false,
                          onIncoming: [Function: parserOnIncomingClient],
                          joinDuplicateHeaders: undefined,
                          [Symbol(resource_symbol)]: HTTPClientAsyncResource {
                            type: 'HTTPINCOMINGMESSAGE',
                            req: [Circular *6]
                          }
                        },
                        maxHeadersCount: null,
                        reusedSocket: false,
                        host: 'accounts.spotify.com',
                        protocol: 'https:',
                        _redirectable: Writable {
                          _writableState: WritableState {
                            objectMode: false,
                            highWaterMark: 16384,
                            finalCalled: false,
                            needDrain: false,
                            ending: false,
                            ended: false,
                            finished: false,
                            destroyed: false,
                            decodeStrings: true,
                            defaultEncoding: 'utf8',
                            length: 0,
                            writing: false,
                            corked: 0,
                            sync: true,
                            bufferProcessing: false,
                            onwrite: [Function: bound onwrite],
                            writecb: null,
                            writelen: 0,
                            afterWriteTickInfo: null,
                            buffered: [],
                            bufferedIndex: 0,
                            allBuffers: true,
                            allNoop: true,
                            pendingcb: 0,
                            constructed: true,
                            prefinished: false,
                            errorEmitted: false,
                            emitClose: true,
                            autoDestroy: true,
                            errored: null,
                            closed: false,
                            closeEmitted: false,
                            [Symbol(kOnFinished)]: []
                          },
                          _events: [Object: null prototype] {
                            response: [Function: handleResponse],
                            error: [Function: handleRequestError],
                            socket: [Function: handleRequestSocket]
                          },
                          _eventsCount: 3,
                          _maxListeners: undefined,
                          _options: {
                            maxRedirects: 21,
                            maxBodyLength: Infinity,
                            protocol: 'https:',
                            path: '/api/token',
                            method: 'POST',
                            headers: [Object: null prototype] {
                              Accept: 'application/json, text/plain, */*',
                              'Content-Type': 'application/x-www-form-urlencoded',
                              'User-Agent': 'axios/1.6.8',
                              'Content-Length': '119',
                              'Accept-Encoding': 'gzip, compress, deflate, br'
                            },
                            agents: { http: undefined, https: undefined },
                            auth: undefined,
                            family: undefined,
                            beforeRedirect: [Function: dispatchBeforeRedirect],
                            beforeRedirects: { proxy: [Function: beforeRedirect] },
                            hostname: 'accounts.spotify.com',
                            port: '',
                            agent: undefined,
                            nativeProtocols: [Circular *5],
                            pathname: '/api/token'
                          },
                          _ended: false,
                          _ending: true,
                          _redirectCount: 0,
                          _redirects: [],
                          _requestBodyLength: 119,
                          _requestBodyBuffers: [
                            {
                              data: <Buffer 67 72 61 6e 74 5f 74 79 70 65 3d 63 6c 69 65 6e 74 5f 63 72 65 64 65 6e 74 69 61 6c 73 26 63 6c 69 65 6e 74 5f 69 64 3d 65 62 63 63 39 39 31 32 34 30 ... 69 more bytes>,
                              encoding: undefined
                            }
                          ],
                          _onNativeResponse: [Function (anonymous)],
                          _currentRequest: [Circular *6],
                          _currentUrl: 'https://accounts.spotify.com/api/token',
                          [Symbol(kCapture)]: false
                        },
                        [Symbol(kCapture)]: false,
                        [Symbol(kBytesWritten)]: 0,
                        [Symbol(kEndCalled)]: false,
                        [Symbol(kNeedDrain)]: false,
                        [Symbol(corked)]: 0,
                        [Symbol(kOutHeaders)]: [Object: null prototype] {
                          accept: [
                            'Accept',
                            'application/json, text/plain, */*'
                          ],
                          'content-type': [
                            'Content-Type',
                            'application/x-www-form-urlencoded'
                          ],
                          'user-agent': [ 'User-Agent', 'axios/1.6.8' ],
                          'content-length': [ 'Content-Length', '119' ],
                          'accept-encoding': [
                            'Accept-Encoding',
                            'gzip, compress, deflate, br'
                          ],
                          host: [ 'Host', 'accounts.spotify.com' ]
                        },
                        [Symbol(errored)]: null,
                        [Symbol(kUniqueHeaders)]: null
                      },
                      [Symbol(res)]: TLSWrap {
                        _parent: TCP {
                          reading: [Getter/Setter],
                          onconnection: null,
                          [Symbol(owner_symbol)]: [Circular *2]
                        },
                        _parentWrap: undefined,
                        _secureContext: SecureContext { context: SecureContext {} },
                        reading: false,
                        onkeylog: [Function: onkeylog],
                        onhandshakestart: {},
                        onhandshakedone: [Function (anonymous)],
                        onocspresponse: [Function: onocspresponse],
                        onnewsession: [Function: onnewsessionclient],
                        onerror: [Function: onerror],
                        [Symbol(owner_symbol)]: [Circular *2]
                      },
                      [Symbol(verified)]: false,
                      [Symbol(pendingSession)]: null,
                      [Symbol(async_id_symbol)]: 6,
                      [Symbol(kHandle)]: TLSWrap {
                        _parent: TCP {
                          reading: [Getter/Setter],
                          onconnection: null,
                          [Symbol(owner_symbol)]: [Circular *2]
                        },
                        _parentWrap: undefined,
                        _secureContext: SecureContext { context: SecureContext {} },
                        reading: false,
                        onkeylog: [Function: onkeylog],
                        onhandshakestart: {},
                        onhandshakedone: [Function (anonymous)],
                        onocspresponse: [Function: onocspresponse],
                        onnewsession: [Function: onnewsessionclient],
                        onerror: [Function: onerror],
                        [Symbol(owner_symbol)]: [Circular *2]
                      },
                      [Symbol(lastWriteQueueSize)]: 0,
                      [Symbol(timeout)]: null,
                      [Symbol(kBuffer)]: null,
                      [Symbol(kBufferCb)]: null,
                      [Symbol(kBufferGen)]: null,
                      [Symbol(kCapture)]: false,
                      [Symbol(kSetNoDelay)]: false,
                      [Symbol(kSetKeepAlive)]: true,
                      [Symbol(kSetKeepAliveInitialDelay)]: 60,
                      [Symbol(kBytesRead)]: 0,
                      [Symbol(kBytesWritten)]: 0,
                      [Symbol(connect-options)]: {
                        rejectUnauthorized: true,
                        ciphers: 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
                        checkServerIdentity: [Function: checkServerIdentity],
                        minDHSize: 1024,
                        maxRedirects: 21,
                        maxBodyLength: Infinity,
                        protocol: 'https:',
                        path: null,
                        method: 'POST',
                        headers: [Object: null prototype] {
                          Accept: 'application/json, text/plain, */*',
                          'Content-Type': 'application/x-www-form-urlencoded',
                          'User-Agent': 'axios/1.6.8',
                          'Content-Length': '119',
                          'Accept-Encoding': 'gzip, compress, deflate, br'
                        },
                        agents: { http: undefined, https: undefined },
                        auth: undefined,
                        family: undefined,
                        beforeRedirect: [Function: dispatchBeforeRedirect],
                        beforeRedirects: { proxy: [Function: beforeRedirect] },
                        hostname: 'accounts.spotify.com',
                        port: 443,
                        agent: undefined,
                        nativeProtocols: [Circular *5],
                        pathname: '/api/token',
                        _defaultAgent: [Circular *3],
                        host: 'accounts.spotify.com',
                        noDelay: true,
                        servername: 'accounts.spotify.com',
                        _agentKey: 'accounts.spotify.com:443:::::::::::::::::::::',
                        encoding: null,
                        singleUse: true
                      }
                    }
                  ]
                },
                freeSockets: [Object: null prototype] {},
                keepAliveMsecs: 1000,
                keepAlive: false,
                maxSockets: Infinity,
                maxFreeSockets: 256,
                scheduling: 'lifo',
                maxTotalSockets: Infinity,
                totalSocketCount: 1,
                maxCachedSessions: 100,
                _sessionCache: {
                  map: {
                    'www.wikidata.org:443:::::::::::::::::::::': <Buffer 30 82 08 7d 02 01 01 02 02 03 04 04 02 13 02 04 20 49 81 10 e3 ea 7d 84 9b e4 63 a1 f3 bf 02 aa db cd 63 84 bf 4f 51 15 cc 96 ff a3 1c ef 0f 60 a7 04 ... 2127 more bytes>
                  },
                  list: [ 'www.wikidata.org:443:::::::::::::::::::::' ]
                },
                [Symbol(kCapture)]: false
              },
              Server: [Function: Server],
              createServer: [Function: createServer],
              get: [Function: get],
              request: [Function: request]
            }
          },
          pathname: '/w/rest.php/oauth2/access_token',
          _defaultAgent: <ref *3> Agent {
            _events: [Object: null prototype] {
              free: [Function (anonymous)],
              newListener: [Function: maybeEnableKeylog]
            },
            _eventsCount: 2,
            _maxListeners: undefined,
            defaultPort: 443,
            protocol: 'https:',
            options: [Object: null prototype] { noDelay: true, path: null },
            requests: [Object: null prototype] {},
            sockets: [Object: null prototype] {
              'accounts.spotify.com:443:::::::::::::::::::::': [
                <ref *2> TLSSocket {
                  _tlsOptions: {
                    allowHalfOpen: undefined,
                    pipe: false,
                    secureContext: SecureContext { context: SecureContext {} },
                    isServer: false,
                    requestCert: true,
                    rejectUnauthorized: true,
                    session: undefined,
                    ALPNProtocols: undefined,
                    requestOCSP: undefined,
                    enableTrace: undefined,
                    pskCallback: undefined,
                    highWaterMark: undefined,
                    onread: undefined,
                    signal: undefined
                  },
                  _secureEstablished: false,
                  _securePending: false,
                  _newSessionPending: false,
                  _controlReleased: true,
                  secureConnecting: true,
                  _SNICallback: null,
                  servername: null,
                  alpnProtocol: null,
                  authorized: false,
                  authorizationError: null,
                  encrypted: true,
                  _events: [Object: null prototype] {
                    close: [
                      [Function: onSocketCloseDestroySSL],
                      [Function: bound onceWrapper] {
                        listener: [Function (anonymous)]
                      },
                      [Function: onClose],
                      [Function: socketCloseListener],
                      [Function: bound onceWrapper] {
                        listener: [Function: onClose]
                      }
                    ],
                    end: [
                      [Function: onConnectEnd],
                      [Function: onReadableStreamEnd],
                      [Function: socketOnEnd]
                    ],
                    newListener: [Function: keylogNewListener],
                    connect: [
                      [Function: bound onceWrapper] {
                        listener: [Function (anonymous)]
                      },
                      [Function: bound onceWrapper] {
                        listener: [Function (anonymous)]
                      },
                      [Function: bound onceWrapper] {
                        listener: [Function: connect]
                      }
                    ],
                    secure: [Function: onConnectSecure],
                    session: [Function (anonymous)],
                    free: [Function: onFree],
                    timeout: [Function: onTimeout],
                    agentRemove: [Function: onRemove],
                    error: [Function: socketErrorListener],
                    data: [Function: socketOnData],
                    drain: [Function: ondrain]
                  },
                  _eventsCount: 12,
                  connecting: true,
                  _hadError: false,
                  _parent: null,
                  _host: 'accounts.spotify.com',
                  _closeAfterHandlingError: false,
                  _readableState: ReadableState {
                    objectMode: false,
                    highWaterMark: 16384,
                    buffer: BufferList { head: null, tail: null, length: 0 },
                    length: 0,
                    pipes: [],
                    flowing: true,
                    ended: false,
                    endEmitted: false,
                    reading: true,
                    constructed: true,
                    sync: false,
                    needReadable: true,
                    emittedReadable: false,
                    readableListening: false,
                    resumeScheduled: false,
                    errorEmitted: false,
                    emitClose: false,
                    autoDestroy: true,
                    destroyed: false,
                    errored: null,
                    closed: false,
                    closeEmitted: false,
                    defaultEncoding: 'utf8',
                    awaitDrainWriters: null,
                    multiAwaitDrain: false,
                    readingMore: false,
                    dataEmitted: false,
                    decoder: null,
                    encoding: null,
                    [Symbol(kPaused)]: false
                  },
                  _maxListeners: undefined,
                  _writableState: WritableState {
                    objectMode: false,
                    highWaterMark: 16384,
                    finalCalled: false,
                    needDrain: false,
                    ending: false,
                    ended: false,
                    finished: false,
                    destroyed: false,
                    decodeStrings: false,
                    defaultEncoding: 'utf8',
                    length: 378,
                    writing: true,
                    corked: 0,
                    sync: false,
                    bufferProcessing: false,
                    onwrite: [Function: bound onwrite],
                    writecb: [Function (anonymous)],
                    writelen: 378,
                    afterWriteTickInfo: null,
                    buffered: [],
                    bufferedIndex: 0,
                    allBuffers: true,
                    allNoop: true,
                    pendingcb: 1,
                    constructed: true,
                    prefinished: false,
                    errorEmitted: false,
                    emitClose: false,
                    autoDestroy: true,
                    errored: null,
                    closed: false,
                    closeEmitted: false,
                    [Symbol(kOnFinished)]: []
                  },
                  allowHalfOpen: false,
                  _sockname: null,
                  _pendingData: [
                    {
                      chunk: 'POST /api/token HTTP/1.1\r\n' +
                        'Accept: application/json, text/plain, */*\r\n' +
                        'Content-Type: application/x-www-form-urlencoded\r\n' +
                        'User-Agent: axios/1.6.8\r\n' +
                        'Content-Length: 119\r\n' +
                        'Accept-Encoding: gzip, compress, deflate, br\r\n' +
                        'Host: accounts.spotify.com\r\n' +
                        'Connection: close\r\n' +
                        '\r\n',
                      encoding: 'latin1',
                      callback: [Function: nop]
                    },
                    {
                      chunk: <Buffer 67 72 61 6e 74 5f 74 79 70 65 3d 63 6c 69 65 6e 74 5f 63 72 65 64 65 6e 74 69 61 6c 73 26 63 6c 69 65 6e 74 5f 69 64 3d 65 62 63 63 39 39 31 32 34 30 ... 69 more bytes>,
                      encoding: 'buffer',
                      callback: [Function (anonymous)]
                    },
                    allBuffers: false
                  ],
                  _pendingEncoding: '',
                  server: undefined,
                  _server: null,
                  ssl: TLSWrap {
                    _parent: TCP {
                      reading: [Getter/Setter],
                      onconnection: null,
                      [Symbol(owner_symbol)]: [Circular *2]
                    },
                    _parentWrap: undefined,
                    _secureContext: SecureContext { context: SecureContext {} },
                    reading: false,
                    onkeylog: [Function: onkeylog],
                    onhandshakestart: {},
                    onhandshakedone: [Function (anonymous)],
                    onocspresponse: [Function: onocspresponse],
                    onnewsession: [Function: onnewsessionclient],
                    onerror: [Function: onerror],
                    [Symbol(owner_symbol)]: [Circular *2]
                  },
                  _requestCert: true,
                  _rejectUnauthorized: true,
                  parser: <ref *4> HTTPParser {
                    '0': null,
                    '1': [Function: parserOnHeaders],
                    '2': [Function: parserOnHeadersComplete],
                    '3': [Function: parserOnBody],
                    '4': [Function: parserOnMessageComplete],
                    '5': null,
                    '6': null,
                    _headers: [],
                    _url: '',
                    socket: [Circular *2],
                    incoming: null,
                    outgoing: <ref *6> ClientRequest {
                      _events: [Object: null prototype] {
                        response: [Function: bound onceWrapper] {
                          listener: [Function (anonymous)]
                        },
                        abort: [Function (anonymous)],
                        aborted: [Function (anonymous)],
                        connect: [Function (anonymous)],
                        error: [Function (anonymous)],
                        socket: [Function (anonymous)],
                        timeout: [Function (anonymous)]
                      },
                      _eventsCount: 7,
                      _maxListeners: undefined,
                      outputData: [],
                      outputSize: 0,
                      writable: true,
                      destroyed: false,
                      _last: true,
                      chunkedEncoding: false,
                      shouldKeepAlive: false,
                      maxRequestsOnConnectionReached: false,
                      _defaultKeepAlive: true,
                      useChunkedEncodingByDefault: true,
                      sendDate: false,
                      _removedConnection: false,
                      _removedContLen: false,
                      _removedTE: false,
                      strictContentLength: false,
                      _contentLength: '119',
                      _hasBody: true,
                      _trailer: '',
                      finished: false,
                      _headerSent: true,
                      _closed: false,
                      socket: [Circular *2],
                      _header: 'POST /api/token HTTP/1.1\r\n' +
                        'Accept: application/json, text/plain, */*\r\n' +
                        'Content-Type: application/x-www-form-urlencoded\r\n' +
                        'User-Agent: axios/1.6.8\r\n' +
                        'Content-Length: 119\r\n' +
                        'Accept-Encoding: gzip, compress, deflate, br\r\n' +
                        'Host: accounts.spotify.com\r\n' +
                        'Connection: close\r\n' +
                        '\r\n',
                      _keepAliveTimeout: 0,
                      _onPendingData: [Function: nop],
                      agent: [Circular *3],
                      socketPath: undefined,
                      method: 'POST',
                      maxHeaderSize: undefined,
                      insecureHTTPParser: undefined,
                      joinDuplicateHeaders: undefined,
                      path: '/api/token',
                      _ended: false,
                      res: null,
                      aborted: false,
                      timeoutCb: null,
                      upgradeOrConnect: false,
                      parser: [Circular *4],
                      maxHeadersCount: null,
                      reusedSocket: false,
                      host: 'accounts.spotify.com',
                      protocol: 'https:',
                      _redirectable: Writable {
                        _writableState: WritableState {
                          objectMode: false,
                          highWaterMark: 16384,
                          finalCalled: false,
                          needDrain: false,
                          ending: false,
                          ended: false,
                          finished: false,
                          destroyed: false,
                          decodeStrings: true,
                          defaultEncoding: 'utf8',
                          length: 0,
                          writing: false,
                          corked: 0,
                          sync: true,
                          bufferProcessing: false,
                          onwrite: [Function: bound onwrite],
                          writecb: null,
                          writelen: 0,
                          afterWriteTickInfo: null,
                          buffered: [],
                          bufferedIndex: 0,
                          allBuffers: true,
                          allNoop: true,
                          pendingcb: 0,
                          constructed: true,
                          prefinished: false,
                          errorEmitted: false,
                          emitClose: true,
                          autoDestroy: true,
                          errored: null,
                          closed: false,
                          closeEmitted: false,
                          [Symbol(kOnFinished)]: []
                        },
                        _events: [Object: null prototype] {
                          response: [Function: handleResponse],
                          error: [Function: handleRequestError],
                          socket: [Function: handleRequestSocket]
                        },
                        _eventsCount: 3,
                        _maxListeners: undefined,
                        _options: {
                          maxRedirects: 21,
                          maxBodyLength: Infinity,
                          protocol: 'https:',
                          path: '/api/token',
                          method: 'POST',
                          headers: [Object: null prototype] {
                            Accept: 'application/json, text/plain, */*',
                            'Content-Type': 'application/x-www-form-urlencoded',
                            'User-Agent': 'axios/1.6.8',
                            'Content-Length': '119',
                            'Accept-Encoding': 'gzip, compress, deflate, br'
                          },
                          agents: { http: undefined, https: undefined },
                          auth: undefined,
                          family: undefined,
                          beforeRedirect: [Function: dispatchBeforeRedirect],
                          beforeRedirects: { proxy: [Function: beforeRedirect] },
                          hostname: 'accounts.spotify.com',
                          port: '',
                          agent: undefined,
                          nativeProtocols: <ref *5> {
                            'http:': {
                              _connectionListener: [Function: connectionListener],
                              METHODS: [
                                'ACL',         'BIND',       'CHECKOUT',
                                'CONNECT',     'COPY',       'DELETE',
                                'GET',         'HEAD',       'LINK',
                                'LOCK',        'M-SEARCH',   'MERGE',
                                'MKACTIVITY',  'MKCALENDAR', 'MKCOL',
                                'MOVE',        'NOTIFY',     'OPTIONS',
                                'PATCH',       'POST',       'PROPFIND',
                                'PROPPATCH',   'PURGE',      'PUT',
                                'REBIND',      'REPORT',     'SEARCH',
                                'SOURCE',      'SUBSCRIBE',  'TRACE',
                                'UNBIND',      'UNLINK',     'UNLOCK',
                                'UNSUBSCRIBE'
                              ],
                              STATUS_CODES: {
                                '100': 'Continue',
                                '101': 'Switching Protocols',
                                '102': 'Processing',
                                '103': 'Early Hints',
                                '200': 'OK',
                                '201': 'Created',
                                '202': 'Accepted',
                                '203': 'Non-Authoritative Information',
                                '204': 'No Content',
                                '205': 'Reset Content',
                                '206': 'Partial Content',
                                '207': 'Multi-Status',
                                '208': 'Already Reported',
                                '226': 'IM Used',
                                '300': 'Multiple Choices',
                                '301': 'Moved Permanently',
                                '302': 'Found',
                                '303': 'See Other',
                                '304': 'Not Modified',
                                '305': 'Use Proxy',
                                '307': 'Temporary Redirect',
                                '308': 'Permanent Redirect',
                                '400': 'Bad Request',
                                '401': 'Unauthorized',
                                '402': 'Payment Required',
                                '403': 'Forbidden',
                                '404': 'Not Found',
                                '405': 'Method Not Allowed',
                                '406': 'Not Acceptable',
                                '407': 'Proxy Authentication Required',
                                '408': 'Request Timeout',
                                '409': 'Conflict',
                                '410': 'Gone',
                                '411': 'Length Required',
                                '412': 'Precondition Failed',
                                '413': 'Payload Too Large',
                                '414': 'URI Too Long',
                                '415': 'Unsupported Media Type',
                                '416': 'Range Not Satisfiable',
                                '417': 'Expectation Failed',
                                '418': "I'm a Teapot",
                                '421': 'Misdirected Request',
                                '422': 'Unprocessable Entity',
                                '423': 'Locked',
                                '424': 'Failed Dependency',
                                '425': 'Too Early',
                                '426': 'Upgrade Required',
                                '428': 'Precondition Required',
                                '429': 'Too Many Requests',
                                '431': 'Request Header Fields Too Large',
                                '451': 'Unavailable For Legal Reasons',
                                '500': 'Internal Server Error',
                                '501': 'Not Implemented',
                                '502': 'Bad Gateway',
                                '503': 'Service Unavailable',
                                '504': 'Gateway Timeout',
                                '505': 'HTTP Version Not Supported',
                                '506': 'Variant Also Negotiates',
                                '507': 'Insufficient Storage',
                                '508': 'Loop Detected',
                                '509': 'Bandwidth Limit Exceeded',
                                '510': 'Not Extended',
                                '511': 'Network Authentication Required'
                              },
                              Agent: [Function: Agent] {
                                defaultMaxSockets: Infinity
                              },
                              ClientRequest: [Function: ClientRequest],
                              IncomingMessage: [Function: IncomingMessage],
                              OutgoingMessage: [Function: OutgoingMessage],
                              Server: [Function: Server],
                              ServerResponse: [Function: ServerResponse],
                              createServer: [Function: createServer],
                              validateHeaderName: [Function: __node_internal_],
                              validateHeaderValue: [Function: __node_internal_],
                              get: [Function: get],
                              request: [Function: request],
                              setMaxIdleHTTPParsers: [Function: setMaxIdleHTTPParsers],
                              maxHeaderSize: [Getter],
                              globalAgent: [Getter/Setter]
                            },
                            'https:': {
                              Agent: [Function: Agent],
                              globalAgent: [Circular *3],
                              Server: [Function: Server],
                              createServer: [Function: createServer],
                              get: [Function: get],
                              request: [Function: request]
                            }
                          },
                          pathname: '/api/token'
                        },
                        _ended: false,
                        _ending: true,
                        _redirectCount: 0,
                        _redirects: [],
                        _requestBodyLength: 119,
                        _requestBodyBuffers: [
                          {
                            data: <Buffer 67 72 61 6e 74 5f 74 79 70 65 3d 63 6c 69 65 6e 74 5f 63 72 65 64 65 6e 74 69 61 6c 73 26 63 6c 69 65 6e 74 5f 69 64 3d 65 62 63 63 39 39 31 32 34 30 ... 69 more bytes>,
                            encoding: undefined
                          }
                        ],
                        _onNativeResponse: [Function (anonymous)],
                        _currentRequest: [Circular *6],
                        _currentUrl: 'https://accounts.spotify.com/api/token',
                        [Symbol(kCapture)]: false
                      },
                      [Symbol(kCapture)]: false,
                      [Symbol(kBytesWritten)]: 0,
                      [Symbol(kEndCalled)]: false,
                      [Symbol(kNeedDrain)]: false,
                      [Symbol(corked)]: 0,
                      [Symbol(kOutHeaders)]: [Object: null prototype] {
                        accept: [
                          'Accept',
                          'application/json, text/plain, */*'
                        ],
                        'content-type': [
                          'Content-Type',
                          'application/x-www-form-urlencoded'
                        ],
                        'user-agent': [ 'User-Agent', 'axios/1.6.8' ],
                        'content-length': [ 'Content-Length', '119' ],
                        'accept-encoding': [
                          'Accept-Encoding',
                          'gzip, compress, deflate, br'
                        ],
                        host: [ 'Host', 'accounts.spotify.com' ]
                      },
                      [Symbol(errored)]: null,
                      [Symbol(kUniqueHeaders)]: null
                    },
                    maxHeaderPairs: 2000,
                    _consumed: false,
                    onIncoming: [Function: parserOnIncomingClient],
                    joinDuplicateHeaders: undefined,
                    [Symbol(resource_symbol)]: HTTPClientAsyncResource {
                      type: 'HTTPINCOMINGMESSAGE',
                      req: <ref *6> ClientRequest {
                        _events: [Object: null prototype] {
                          response: [Function: bound onceWrapper] {
                            listener: [Function (anonymous)]
                          },
                          abort: [Function (anonymous)],
                          aborted: [Function (anonymous)],
                          connect: [Function (anonymous)],
                          error: [Function (anonymous)],
                          socket: [Function (anonymous)],
                          timeout: [Function (anonymous)]
                        },
                        _eventsCount: 7,
                        _maxListeners: undefined,
                        outputData: [],
                        outputSize: 0,
                        writable: true,
                        destroyed: false,
                        _last: true,
                        chunkedEncoding: false,
                        shouldKeepAlive: false,
                        maxRequestsOnConnectionReached: false,
                        _defaultKeepAlive: true,
                        useChunkedEncodingByDefault: true,
                        sendDate: false,
                        _removedConnection: false,
                        _removedContLen: false,
                        _removedTE: false,
                        strictContentLength: false,
                        _contentLength: '119',
                        _hasBody: true,
                        _trailer: '',
                        finished: false,
                        _headerSent: true,
                        _closed: false,
                        socket: [Circular *2],
                        _header: 'POST /api/token HTTP/1.1\r\n' +
                          'Accept: application/json, text/plain, */*\r\n' +
                          'Content-Type: application/x-www-form-urlencoded\r\n' +
                          'User-Agent: axios/1.6.8\r\n' +
                          'Content-Length: 119\r\n' +
                          'Accept-Encoding: gzip, compress, deflate, br\r\n' +
                          'Host: accounts.spotify.com\r\n' +
                          'Connection: close\r\n' +
                          '\r\n',
                        _keepAliveTimeout: 0,
                        _onPendingData: [Function: nop],
                        agent: [Circular *3],
                        socketPath: undefined,
                        method: 'POST',
                        maxHeaderSize: undefined,
                        insecureHTTPParser: undefined,
                        joinDuplicateHeaders: undefined,
                        path: '/api/token',
                        _ended: false,
                        res: null,
                        aborted: false,
                        timeoutCb: null,
                        upgradeOrConnect: false,
                        parser: [Circular *4],
                        maxHeadersCount: null,
                        reusedSocket: false,
                        host: 'accounts.spotify.com',
                        protocol: 'https:',
                        _redirectable: Writable {
                          _writableState: WritableState {
                            objectMode: false,
                            highWaterMark: 16384,
                            finalCalled: false,
                            needDrain: false,
                            ending: false,
                            ended: false,
                            finished: false,
                            destroyed: false,
                            decodeStrings: true,
                            defaultEncoding: 'utf8',
                            length: 0,
                            writing: false,
                            corked: 0,
                            sync: true,
                            bufferProcessing: false,
                            onwrite: [Function: bound onwrite],
                            writecb: null,
                            writelen: 0,
                            afterWriteTickInfo: null,
                            buffered: [],
                            bufferedIndex: 0,
                            allBuffers: true,
                            allNoop: true,
                            pendingcb: 0,
                            constructed: true,
                            prefinished: false,
                            errorEmitted: false,
                            emitClose: true,
                            autoDestroy: true,
                            errored: null,
                            closed: false,
                            closeEmitted: false,
                            [Symbol(kOnFinished)]: []
                          },
                          _events: [Object: null prototype] {
                            response: [Function: handleResponse],
                            error: [Function: handleRequestError],
                            socket: [Function: handleRequestSocket]
                          },
                          _eventsCount: 3,
                          _maxListeners: undefined,
                          _options: {
                            maxRedirects: 21,
                            maxBodyLength: Infinity,
                            protocol: 'https:',
                            path: '/api/token',
                            method: 'POST',
                            headers: [Object: null prototype] {
                              Accept: 'application/json, text/plain, */*',
                              'Content-Type': 'application/x-www-form-urlencoded',
                              'User-Agent': 'axios/1.6.8',
                              'Content-Length': '119',
                              'Accept-Encoding': 'gzip, compress, deflate, br'
                            },
                            agents: { http: undefined, https: undefined },
                            auth: undefined,
                            family: undefined,
                            beforeRedirect: [Function: dispatchBeforeRedirect],
                            beforeRedirects: { proxy: [Function: beforeRedirect] },
                            hostname: 'accounts.spotify.com',
                            port: '',
                            agent: undefined,
                            nativeProtocols: <ref *5> {
                              'http:': {
                                _connectionListener: [Function: connectionListener],
                                METHODS: [
                                  'ACL',         'BIND',       'CHECKOUT',
                                  'CONNECT',     'COPY',       'DELETE',
                                  'GET',         'HEAD',       'LINK',
                                  'LOCK',        'M-SEARCH',   'MERGE',
                                  'MKACTIVITY',  'MKCALENDAR', 'MKCOL',
                                  'MOVE',        'NOTIFY',     'OPTIONS',
                                  'PATCH',       'POST',       'PROPFIND',
                                  'PROPPATCH',   'PURGE',      'PUT',
                                  'REBIND',      'REPORT',     'SEARCH',
                                  'SOURCE',      'SUBSCRIBE',  'TRACE',
                                  'UNBIND',      'UNLINK',     'UNLOCK',
                                  'UNSUBSCRIBE'
                                ],
                                STATUS_CODES: {
                                  '100': 'Continue',
                                  '101': 'Switching Protocols',
                                  '102': 'Processing',
                                  '103': 'Early Hints',
                                  '200': 'OK',
                                  '201': 'Created',
                                  '202': 'Accepted',
                                  '203': 'Non-Authoritative Information',
                                  '204': 'No Content',
                                  '205': 'Reset Content',
                                  '206': 'Partial Content',
                                  '207': 'Multi-Status',
                                  '208': 'Already Reported',
                                  '226': 'IM Used',
                                  '300': 'Multiple Choices',
                                  '301': 'Moved Permanently',
                                  '302': 'Found',
                                  '303': 'See Other',
                                  '304': 'Not Modified',
                                  '305': 'Use Proxy',
                                  '307': 'Temporary Redirect',
                                  '308': 'Permanent Redirect',
                                  '400': 'Bad Request',
                                  '401': 'Unauthorized',
                                  '402': 'Payment Required',
                                  '403': 'Forbidden',
                                  '404': 'Not Found',
                                  '405': 'Method Not Allowed',
                                  '406': 'Not Acceptable',
                                  '407': 'Proxy Authentication Required',
                                  '408': 'Request Timeout',
                                  '409': 'Conflict',
                                  '410': 'Gone',
                                  '411': 'Length Required',
                                  '412': 'Precondition Failed',
                                  '413': 'Payload Too Large',
                                  '414': 'URI Too Long',
                                  '415': 'Unsupported Media Type',
                                  '416': 'Range Not Satisfiable',
                                  '417': 'Expectation Failed',
                                  '418': "I'm a Teapot",
                                  '421': 'Misdirected Request',
                                  '422': 'Unprocessable Entity',
                                  '423': 'Locked',
                                  '424': 'Failed Dependency',
                                  '425': 'Too Early',
                                  '426': 'Upgrade Required',
                                  '428': 'Precondition Required',
                                  '429': 'Too Many Requests',
                                  '431': 'Request Header Fields Too Large',
                                  '451': 'Unavailable For Legal Reasons',
                                  '500': 'Internal Server Error',
                                  '501': 'Not Implemented',
                                  '502': 'Bad Gateway',
                                  '503': 'Service Unavailable',
                                  '504': 'Gateway Timeout',
                                  '505': 'HTTP Version Not Supported',
                                  '506': 'Variant Also Negotiates',
                                  '507': 'Insufficient Storage',
                                  '508': 'Loop Detected',
                                  '509': 'Bandwidth Limit Exceeded',
                                  '510': 'Not Extended',
                                  '511': 'Network Authentication Required'
                                },
                                Agent: [Function: Agent] {
                                  defaultMaxSockets: Infinity
                                },
                                ClientRequest: [Function: ClientRequest],
                                IncomingMessage: [Function: IncomingMessage],
                                OutgoingMessage: [Function: OutgoingMessage],
                                Server: [Function: Server],
                                ServerResponse: [Function: ServerResponse],
                                createServer: [Function: createServer],
                                validateHeaderName: [Function: __node_internal_],
                                validateHeaderValue: [Function: __node_internal_],
                                get: [Function: get],
                                request: [Function: request],
                                setMaxIdleHTTPParsers: [Function: setMaxIdleHTTPParsers],
                                maxHeaderSize: [Getter],
                                globalAgent: [Getter/Setter]
                              },
                              'https:': {
                                Agent: [Function: Agent],
                                globalAgent: [Circular *3],
                                Server: [Function: Server],
                                createServer: [Function: createServer],
                                get: [Function: get],
                                request: [Function: request]
                              }
                            },
                            pathname: '/api/token'
                          },
                          _ended: false,
                          _ending: true,
                          _redirectCount: 0,
                          _redirects: [],
                          _requestBodyLength: 119,
                          _requestBodyBuffers: [
                            {
                              data: <Buffer 67 72 61 6e 74 5f 74 79 70 65 3d 63 6c 69 65 6e 74 5f 63 72 65 64 65 6e 74 69 61 6c 73 26 63 6c 69 65 6e 74 5f 69 64 3d 65 62 63 63 39 39 31 32 34 30 ... 69 more bytes>,
                              encoding: undefined
                            }
                          ],
                          _onNativeResponse: [Function (anonymous)],
                          _currentRequest: [Circular *6],
                          _currentUrl: 'https://accounts.spotify.com/api/token',
                          [Symbol(kCapture)]: false
                        },
                        [Symbol(kCapture)]: false,
                        [Symbol(kBytesWritten)]: 0,
                        [Symbol(kEndCalled)]: false,
                        [Symbol(kNeedDrain)]: false,
                        [Symbol(corked)]: 0,
                        [Symbol(kOutHeaders)]: [Object: null prototype] {
                          accept: [
                            'Accept',
                            'application/json, text/plain, */*'
                          ],
                          'content-type': [
                            'Content-Type',
                            'application/x-www-form-urlencoded'
                          ],
                          'user-agent': [ 'User-Agent', 'axios/1.6.8' ],
                          'content-length': [ 'Content-Length', '119' ],
                          'accept-encoding': [
                            'Accept-Encoding',
                            'gzip, compress, deflate, br'
                          ],
                          host: [ 'Host', 'accounts.spotify.com' ]
                        },
                        [Symbol(errored)]: null,
                        [Symbol(kUniqueHeaders)]: null
                      }
                    }
                  },
                  _httpMessage: <ref *6> ClientRequest {
                    _events: [Object: null prototype] {
                      response: [Function: bound onceWrapper] {
                        listener: [Function (anonymous)]
                      },
                      abort: [Function (anonymous)],
                      aborted: [Function (anonymous)],
                      connect: [Function (anonymous)],
                      error: [Function (anonymous)],
                      socket: [Function (anonymous)],
                      timeout: [Function (anonymous)]
                    },
                    _eventsCount: 7,
                    _maxListeners: undefined,
                    outputData: [],
                    outputSize: 0,
                    writable: true,
                    destroyed: false,
                    _last: true,
                    chunkedEncoding: false,
                    shouldKeepAlive: false,
                    maxRequestsOnConnectionReached: false,
                    _defaultKeepAlive: true,
                    useChunkedEncodingByDefault: true,
                    sendDate: false,
                    _removedConnection: false,
                    _removedContLen: false,
                    _removedTE: false,
                    strictContentLength: false,
                    _contentLength: '119',
                    _hasBody: true,
                    _trailer: '',
                    finished: false,
                    _headerSent: true,
                    _closed: false,
                    socket: [Circular *2],
                    _header: 'POST /api/token HTTP/1.1\r\n' +
                      'Accept: application/json, text/plain, */*\r\n' +
                      'Content-Type: application/x-www-form-urlencoded\r\n' +
                      'User-Agent: axios/1.6.8\r\n' +
                      'Content-Length: 119\r\n' +
                      'Accept-Encoding: gzip, compress, deflate, br\r\n' +
                      'Host: accounts.spotify.com\r\n' +
                      'Connection: close\r\n' +
                      '\r\n',
                    _keepAliveTimeout: 0,
                    _onPendingData: [Function: nop],
                    agent: [Circular *3],
                    socketPath: undefined,
                    method: 'POST',
                    maxHeaderSize: undefined,
                    insecureHTTPParser: undefined,
                    joinDuplicateHeaders: undefined,
                    path: '/api/token',
                    _ended: false,
                    res: null,
                    aborted: false,
                    timeoutCb: null,
                    upgradeOrConnect: false,
                    parser: <ref *4> HTTPParser {
                      '0': null,
                      '1': [Function: parserOnHeaders],
                      '2': [Function: parserOnHeadersComplete],
                      '3': [Function: parserOnBody],
                      '4': [Function: parserOnMessageComplete],
                      '5': null,
                      '6': null,
                      _headers: [],
                      _url: '',
                      socket: [Circular *2],
                      incoming: null,
                      outgoing: [Circular *6],
                      maxHeaderPairs: 2000,
                      _consumed: false,
                      onIncoming: [Function: parserOnIncomingClient],
                      joinDuplicateHeaders: undefined,
                      [Symbol(resource_symbol)]: HTTPClientAsyncResource {
                        type: 'HTTPINCOMINGMESSAGE',
                        req: [Circular *6]
                      }
                    },
                    maxHeadersCount: null,
                    reusedSocket: false,
                    host: 'accounts.spotify.com',
                    protocol: 'https:',
                    _redirectable: Writable {
                      _writableState: WritableState {
                        objectMode: false,
                        highWaterMark: 16384,
                        finalCalled: false,
                        needDrain: false,
                        ending: false,
                        ended: false,
                        finished: false,
                        destroyed: false,
                        decodeStrings: true,
                        defaultEncoding: 'utf8',
                        length: 0,
                        writing: false,
                        corked: 0,
                        sync: true,
                        bufferProcessing: false,
                        onwrite: [Function: bound onwrite],
                        writecb: null,
                        writelen: 0,
                        afterWriteTickInfo: null,
                        buffered: [],
                        bufferedIndex: 0,
                        allBuffers: true,
                        allNoop: true,
                        pendingcb: 0,
                        constructed: true,
                        prefinished: false,
                        errorEmitted: false,
                        emitClose: true,
                        autoDestroy: true,
                        errored: null,
                        closed: false,
                        closeEmitted: false,
                        [Symbol(kOnFinished)]: []
                      },
                      _events: [Object: null prototype] {
                        response: [Function: handleResponse],
                        error: [Function: handleRequestError],
                        socket: [Function: handleRequestSocket]
                      },
                      _eventsCount: 3,
                      _maxListeners: undefined,
                      _options: {
                        maxRedirects: 21,
                        maxBodyLength: Infinity,
                        protocol: 'https:',
                        path: '/api/token',
                        method: 'POST',
                        headers: [Object: null prototype] {
                          Accept: 'application/json, text/plain, */*',
                          'Content-Type': 'application/x-www-form-urlencoded',
                          'User-Agent': 'axios/1.6.8',
                          'Content-Length': '119',
                          'Accept-Encoding': 'gzip, compress, deflate, br'
                        },
                        agents: { http: undefined, https: undefined },
                        auth: undefined,
                        family: undefined,
                        beforeRedirect: [Function: dispatchBeforeRedirect],
                        beforeRedirects: { proxy: [Function: beforeRedirect] },
                        hostname: 'accounts.spotify.com',
                        port: '',
                        agent: undefined,
                        nativeProtocols: <ref *5> {
                          'http:': {
                            _connectionListener: [Function: connectionListener],
                            METHODS: [
                              'ACL',         'BIND',       'CHECKOUT',
                              'CONNECT',     'COPY',       'DELETE',
                              'GET',         'HEAD',       'LINK',
                              'LOCK',        'M-SEARCH',   'MERGE',
                              'MKACTIVITY',  'MKCALENDAR', 'MKCOL',
                              'MOVE',        'NOTIFY',     'OPTIONS',
                              'PATCH',       'POST',       'PROPFIND',
                              'PROPPATCH',   'PURGE',      'PUT',
                              'REBIND',      'REPORT',     'SEARCH',
                              'SOURCE',      'SUBSCRIBE',  'TRACE',
                              'UNBIND',      'UNLINK',     'UNLOCK',
                              'UNSUBSCRIBE'
                            ],
                            STATUS_CODES: {
                              '100': 'Continue',
                              '101': 'Switching Protocols',
                              '102': 'Processing',
                              '103': 'Early Hints',
                              '200': 'OK',
                              '201': 'Created',
                              '202': 'Accepted',
                              '203': 'Non-Authoritative Information',
                              '204': 'No Content',
                              '205': 'Reset Content',
                              '206': 'Partial Content',
                              '207': 'Multi-Status',
                              '208': 'Already Reported',
                              '226': 'IM Used',
                              '300': 'Multiple Choices',
                              '301': 'Moved Permanently',
                              '302': 'Found',
                              '303': 'See Other',
                              '304': 'Not Modified',
                              '305': 'Use Proxy',
                              '307': 'Temporary Redirect',
                              '308': 'Permanent Redirect',
                              '400': 'Bad Request',
                              '401': 'Unauthorized',
                              '402': 'Payment Required',
                              '403': 'Forbidden',
                              '404': 'Not Found',
                              '405': 'Method Not Allowed',
                              '406': 'Not Acceptable',
                              '407': 'Proxy Authentication Required',
                              '408': 'Request Timeout',
                              '409': 'Conflict',
                              '410': 'Gone',
                              '411': 'Length Required',
                              '412': 'Precondition Failed',
                              '413': 'Payload Too Large',
                              '414': 'URI Too Long',
                              '415': 'Unsupported Media Type',
                              '416': 'Range Not Satisfiable',
                              '417': 'Expectation Failed',
                              '418': "I'm a Teapot",
                              '421': 'Misdirected Request',
                              '422': 'Unprocessable Entity',
                              '423': 'Locked',
                              '424': 'Failed Dependency',
                              '425': 'Too Early',
                              '426': 'Upgrade Required',
                              '428': 'Precondition Required',
                              '429': 'Too Many Requests',
                              '431': 'Request Header Fields Too Large',
                              '451': 'Unavailable For Legal Reasons',
                              '500': 'Internal Server Error',
                              '501': 'Not Implemented',
                              '502': 'Bad Gateway',
                              '503': 'Service Unavailable',
                              '504': 'Gateway Timeout',
                              '505': 'HTTP Version Not Supported',
                              '506': 'Variant Also Negotiates',
                              '507': 'Insufficient Storage',
                              '508': 'Loop Detected',
                              '509': 'Bandwidth Limit Exceeded',
                              '510': 'Not Extended',
                              '511': 'Network Authentication Required'
                            },
                            Agent: [Function: Agent] {
                              defaultMaxSockets: Infinity
                            },
                            ClientRequest: [Function: ClientRequest],
                            IncomingMessage: [Function: IncomingMessage],
                            OutgoingMessage: [Function: OutgoingMessage],
                            Server: [Function: Server],
                            ServerResponse: [Function: ServerResponse],
                            createServer: [Function: createServer],
                            validateHeaderName: [Function: __node_internal_],
                            validateHeaderValue: [Function: __node_internal_],
                            get: [Function: get],
                            request: [Function: request],
                            setMaxIdleHTTPParsers: [Function: setMaxIdleHTTPParsers],
                            maxHeaderSize: [Getter],
                            globalAgent: [Getter/Setter]
                          },
                          'https:': {
                            Agent: [Function: Agent],
                            globalAgent: [Circular *3],
                            Server: [Function: Server],
                            createServer: [Function: createServer],
                            get: [Function: get],
                            request: [Function: request]
                          }
                        },
                        pathname: '/api/token'
                      },
                      _ended: false,
                      _ending: true,
                      _redirectCount: 0,
                      _redirects: [],
                      _requestBodyLength: 119,
                      _requestBodyBuffers: [
                        {
                          data: <Buffer 67 72 61 6e 74 5f 74 79 70 65 3d 63 6c 69 65 6e 74 5f 63 72 65 64 65 6e 74 69 61 6c 73 26 63 6c 69 65 6e 74 5f 69 64 3d 65 62 63 63 39 39 31 32 34 30 ... 69 more bytes>,
                          encoding: undefined
                        }
                      ],
                      _onNativeResponse: [Function (anonymous)],
                      _currentRequest: [Circular *6],
                      _currentUrl: 'https://accounts.spotify.com/api/token',
                      [Symbol(kCapture)]: false
                    },
                    [Symbol(kCapture)]: false,
                    [Symbol(kBytesWritten)]: 0,
                    [Symbol(kEndCalled)]: false,
                    [Symbol(kNeedDrain)]: false,
                    [Symbol(corked)]: 0,
                    [Symbol(kOutHeaders)]: [Object: null prototype] {
                      accept: [ 'Accept', 'application/json, text/plain, */*' ],
                      'content-type': [
                        'Content-Type',
                        'application/x-www-form-urlencoded'
                      ],
                      'user-agent': [ 'User-Agent', 'axios/1.6.8' ],
                      'content-length': [ 'Content-Length', '119' ],
                      'accept-encoding': [
                        'Accept-Encoding',
                        'gzip, compress, deflate, br'
                      ],
                      host: [ 'Host', 'accounts.spotify.com' ]
                    },
                    [Symbol(errored)]: null,
                    [Symbol(kUniqueHeaders)]: null
                  },
                  [Symbol(res)]: TLSWrap {
                    _parent: TCP {
                      reading: [Getter/Setter],
                      onconnection: null,
                      [Symbol(owner_symbol)]: [Circular *2]
                    },
                    _parentWrap: undefined,
                    _secureContext: SecureContext { context: SecureContext {} },
                    reading: false,
                    onkeylog: [Function: onkeylog],
                    onhandshakestart: {},
                    onhandshakedone: [Function (anonymous)],
                    onocspresponse: [Function: onocspresponse],
                    onnewsession: [Function: onnewsessionclient],
                    onerror: [Function: onerror],
                    [Symbol(owner_symbol)]: [Circular *2]
                  },
                  [Symbol(verified)]: false,
                  [Symbol(pendingSession)]: null,
                  [Symbol(async_id_symbol)]: 6,
                  [Symbol(kHandle)]: TLSWrap {
                    _parent: TCP {
                      reading: [Getter/Setter],
                      onconnection: null,
                      [Symbol(owner_symbol)]: [Circular *2]
                    },
                    _parentWrap: undefined,
                    _secureContext: SecureContext { context: SecureContext {} },
                    reading: false,
                    onkeylog: [Function: onkeylog],
                    onhandshakestart: {},
                    onhandshakedone: [Function (anonymous)],
                    onocspresponse: [Function: onocspresponse],
                    onnewsession: [Function: onnewsessionclient],
                    onerror: [Function: onerror],
                    [Symbol(owner_symbol)]: [Circular *2]
                  },
                  [Symbol(lastWriteQueueSize)]: 0,
                  [Symbol(timeout)]: null,
                  [Symbol(kBuffer)]: null,
                  [Symbol(kBufferCb)]: null,
                  [Symbol(kBufferGen)]: null,
                  [Symbol(kCapture)]: false,
                  [Symbol(kSetNoDelay)]: false,
                  [Symbol(kSetKeepAlive)]: true,
                  [Symbol(kSetKeepAliveInitialDelay)]: 60,
                  [Symbol(kBytesRead)]: 0,
                  [Symbol(kBytesWritten)]: 0,
                  [Symbol(connect-options)]: {
                    rejectUnauthorized: true,
                    ciphers: 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
                    checkServerIdentity: [Function: checkServerIdentity],
                    minDHSize: 1024,
                    maxRedirects: 21,
                    maxBodyLength: Infinity,
                    protocol: 'https:',
                    path: null,
                    method: 'POST',
                    headers: [Object: null prototype] {
                      Accept: 'application/json, text/plain, */*',
                      'Content-Type': 'application/x-www-form-urlencoded',
                      'User-Agent': 'axios/1.6.8',
                      'Content-Length': '119',
                      'Accept-Encoding': 'gzip, compress, deflate, br'
                    },
                    agents: { http: undefined, https: undefined },
                    auth: undefined,
                    family: undefined,
                    beforeRedirect: [Function: dispatchBeforeRedirect],
                    beforeRedirects: { proxy: [Function: beforeRedirect] },
                    hostname: 'accounts.spotify.com',
                    port: 443,
                    agent: undefined,
                    nativeProtocols: <ref *5> {
                      'http:': {
                        _connectionListener: [Function: connectionListener],
                        METHODS: [
                          'ACL',         'BIND',       'CHECKOUT',
                          'CONNECT',     'COPY',       'DELETE',
                          'GET',         'HEAD',       'LINK',
                          'LOCK',        'M-SEARCH',   'MERGE',
                          'MKACTIVITY',  'MKCALENDAR', 'MKCOL',
                          'MOVE',        'NOTIFY',     'OPTIONS',
                          'PATCH',       'POST',       'PROPFIND',
                          'PROPPATCH',   'PURGE',      'PUT',
                          'REBIND',      'REPORT',     'SEARCH',
                          'SOURCE',      'SUBSCRIBE',  'TRACE',
                          'UNBIND',      'UNLINK',     'UNLOCK',
                          'UNSUBSCRIBE'
                        ],
                        STATUS_CODES: {
                          '100': 'Continue',
                          '101': 'Switching Protocols',
                          '102': 'Processing',
                          '103': 'Early Hints',
                          '200': 'OK',
                          '201': 'Created',
                          '202': 'Accepted',
                          '203': 'Non-Authoritative Information',
                          '204': 'No Content',
                          '205': 'Reset Content',
                          '206': 'Partial Content',
                          '207': 'Multi-Status',
                          '208': 'Already Reported',
                          '226': 'IM Used',
                          '300': 'Multiple Choices',
                          '301': 'Moved Permanently',
                          '302': 'Found',
                          '303': 'See Other',
                          '304': 'Not Modified',
                          '305': 'Use Proxy',
                          '307': 'Temporary Redirect',
                          '308': 'Permanent Redirect',
                          '400': 'Bad Request',
                          '401': 'Unauthorized',
                          '402': 'Payment Required',
                          '403': 'Forbidden',
                          '404': 'Not Found',
                          '405': 'Method Not Allowed',
                          '406': 'Not Acceptable',
                          '407': 'Proxy Authentication Required',
                          '408': 'Request Timeout',
                          '409': 'Conflict',
                          '410': 'Gone',
                          '411': 'Length Required',
                          '412': 'Precondition Failed',
                          '413': 'Payload Too Large',
                          '414': 'URI Too Long',
                          '415': 'Unsupported Media Type',
                          '416': 'Range Not Satisfiable',
                          '417': 'Expectation Failed',
                          '418': "I'm a Teapot",
                          '421': 'Misdirected Request',
                          '422': 'Unprocessable Entity',
                          '423': 'Locked',
                          '424': 'Failed Dependency',
                          '425': 'Too Early',
                          '426': 'Upgrade Required',
                          '428': 'Precondition Required',
                          '429': 'Too Many Requests',
                          '431': 'Request Header Fields Too Large',
                          '451': 'Unavailable For Legal Reasons',
                          '500': 'Internal Server Error',
                          '501': 'Not Implemented',
                          '502': 'Bad Gateway',
                          '503': 'Service Unavailable',
                          '504': 'Gateway Timeout',
                          '505': 'HTTP Version Not Supported',
                          '506': 'Variant Also Negotiates',
                          '507': 'Insufficient Storage',
                          '508': 'Loop Detected',
                          '509': 'Bandwidth Limit Exceeded',
                          '510': 'Not Extended',
                          '511': 'Network Authentication Required'
                        },
                        Agent: [Function: Agent] {
                          defaultMaxSockets: Infinity
                        },
                        ClientRequest: [Function: ClientRequest],
                        IncomingMessage: [Function: IncomingMessage],
                        OutgoingMessage: [Function: OutgoingMessage],
                        Server: [Function: Server],
                        ServerResponse: [Function: ServerResponse],
                        createServer: [Function: createServer],
                        validateHeaderName: [Function: __node_internal_],
                        validateHeaderValue: [Function: __node_internal_],
                        get: [Function: get],
                        request: [Function: request],
                        setMaxIdleHTTPParsers: [Function: setMaxIdleHTTPParsers],
                        maxHeaderSize: [Getter],
                        globalAgent: [Getter/Setter]
                      },
                      'https:': {
                        Agent: [Function: Agent],
                        globalAgent: [Circular *3],
                        Server: [Function: Server],
                        createServer: [Function: createServer],
                        get: [Function: get],
                        request: [Function: request]
                      }
                    },
                    pathname: '/api/token',
                    _defaultAgent: [Circular *3],
                    host: 'accounts.spotify.com',
                    noDelay: true,
                    servername: 'accounts.spotify.com',
                    _agentKey: 'accounts.spotify.com:443:::::::::::::::::::::',
                    encoding: null,
                    singleUse: true
                  }
                }
              ]
            },
            freeSockets: [Object: null prototype] {},
            keepAliveMsecs: 1000,
            keepAlive: false,
            maxSockets: Infinity,
            maxFreeSockets: 256,
            scheduling: 'lifo',
            maxTotalSockets: Infinity,
            totalSocketCount: 1,
            maxCachedSessions: 100,
            _sessionCache: {
              map: {
                'www.wikidata.org:443:::::::::::::::::::::': <Buffer 30 82 08 7d 02 01 01 02 02 03 04 04 02 13 02 04 20 49 81 10 e3 ea 7d 84 9b e4 63 a1 f3 bf 02 aa db cd 63 84 bf 4f 51 15 cc 96 ff a3 1c ef 0f 60 a7 04 ... 2127 more bytes>
              },
              list: [ 'www.wikidata.org:443:::::::::::::::::::::' ]
            },
            [Symbol(kCapture)]: false
          },
          host: 'www.wikidata.org',
          noDelay: true,
          servername: 'www.wikidata.org',
          _agentKey: 'www.wikidata.org:443:::::::::::::::::::::',
          encoding: null,
          singleUse: true
        }
      },
      _consuming: false,
      _dumped: false,
      req: [Circular *1],
      responseUrl: 'https://www.wikidata.org/w/rest.php/oauth2/access_token',
      redirects: [],
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: {
        date: 'Wed, 01 May 2024 17:15:27 GMT',
        server: 'mw-api-ext.eqiad.main-6568d96485-7z7s5',
        'x-content-type-options': 'nosniff',
        'cache-control': 'private,no-cache,s-maxage=0',
        'access-control-allow-origin': '*',
        vary: 'Accept-Encoding',
        'content-type': 'application/json',
        age: '0',
        'x-cache': 'cp1104 miss, cp1104 pass',
        'x-cache-status': 'pass',
        'server-timing': 'cache;desc="pass", host;desc="cp1104"',
        'strict-transport-security': 'max-age=106384710; includeSubDomains; preload',
        'report-to': '{ "group": "wm_nel", "max_age": 604800, "endpoints": [{ "url": "https://intake-logging.wikimedia.org/v1/events?stream=w3c.reportingapi.network_error&schema_uri=/w3c/reportingapi/network_error/1.0.0" }] }',
        nel: '{ "report_to": "wm_nel", "max_age": 604800, "failure_fraction": 0.05, "success_fraction": 0.0}',
        'set-cookie': [
          'WMF-Last-Access=01-May-2024;Path=/;HttpOnly;secure;Expires=Sun, 02 Jun 2024 12:00:00 GMT',
          'WMF-Last-Access-Global=01-May-2024;Path=/;Domain=.wikidata.org;HttpOnly;secure;Expires=Sun, 02 Jun 2024 12:00:00 GMT',
          'GeoIP=BR:PR:Curitiba:-25.50:-49.29:v4; Path=/; secure; Domain=.wikidata.org',
          'NetworkProbeLimit=0.001;Path=/;Secure;Max-Age=3600'
        ],
        'x-client-ip': '186.219.185.78',
        'content-length': '177',
        connection: 'close'
      },
      [Symbol(kHeadersCount)]: 44,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0
    },
    aborted: false,
    timeoutCb: null,
    upgradeOrConnect: false,
    parser: null,
    maxHeadersCount: null,
    reusedSocket: false,
    host: 'www.wikidata.org',
    protocol: 'https:',
    _redirectable: Writable {
      _writableState: WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: true,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        afterWriteTickInfo: null,
        buffered: [],
        bufferedIndex: 0,
        allBuffers: true,
        allNoop: true,
        pendingcb: 0,
        constructed: true,
        prefinished: false,
        errorEmitted: false,
        emitClose: true,
        autoDestroy: true,
        errored: null,
        closed: false,
        closeEmitted: false,
        [Symbol(kOnFinished)]: []
      },
      _events: [Object: null prototype] {
        response: [Function: handleResponse],
        error: [Function: handleRequestError],
        socket: [Function: handleRequestSocket]
      },
      _eventsCount: 3,
      _maxListeners: undefined,
      _options: {
        maxRedirects: 21,
        maxBodyLength: Infinity,
        protocol: 'https:',
        path: '/w/rest.php/oauth2/access_token',
        method: 'POST',
        headers: [Object: null prototype] {
          Accept: 'application/json, text/plain, */*',
          'Content-Type': 'application/json',
          'User-Agent': 'axios/1.6.8',
          'Content-Length': '141',
          'Accept-Encoding': 'gzip, compress, deflate, br'
        },
        agents: { http: undefined, https: undefined },
        auth: undefined,
        family: undefined,
        beforeRedirect: [Function: dispatchBeforeRedirect],
        beforeRedirects: { proxy: [Function: beforeRedirect] },
        hostname: 'www.wikidata.org',
        port: '',
        agent: undefined,
        nativeProtocols: <ref *5> {
          'http:': {
            _connectionListener: [Function: connectionListener],
            METHODS: [
              'ACL',         'BIND',       'CHECKOUT',
              'CONNECT',     'COPY',       'DELETE',
              'GET',         'HEAD',       'LINK',
              'LOCK',        'M-SEARCH',   'MERGE',
              'MKACTIVITY',  'MKCALENDAR', 'MKCOL',
              'MOVE',        'NOTIFY',     'OPTIONS',
              'PATCH',       'POST',       'PROPFIND',
              'PROPPATCH',   'PURGE',      'PUT',
              'REBIND',      'REPORT',     'SEARCH',
              'SOURCE',      'SUBSCRIBE',  'TRACE',
              'UNBIND',      'UNLINK',     'UNLOCK',
              'UNSUBSCRIBE'
            ],
            STATUS_CODES: {
              '100': 'Continue',
              '101': 'Switching Protocols',
              '102': 'Processing',
              '103': 'Early Hints',
              '200': 'OK',
              '201': 'Created',
              '202': 'Accepted',
              '203': 'Non-Authoritative Information',
              '204': 'No Content',
              '205': 'Reset Content',
              '206': 'Partial Content',
              '207': 'Multi-Status',
              '208': 'Already Reported',
              '226': 'IM Used',
              '300': 'Multiple Choices',
              '301': 'Moved Permanently',
              '302': 'Found',
              '303': 'See Other',
              '304': 'Not Modified',
              '305': 'Use Proxy',
              '307': 'Temporary Redirect',
              '308': 'Permanent Redirect',
              '400': 'Bad Request',
              '401': 'Unauthorized',
              '402': 'Payment Required',
              '403': 'Forbidden',
              '404': 'Not Found',
              '405': 'Method Not Allowed',
              '406': 'Not Acceptable',
              '407': 'Proxy Authentication Required',
              '408': 'Request Timeout',
              '409': 'Conflict',
              '410': 'Gone',
              '411': 'Length Required',
              '412': 'Precondition Failed',
              '413': 'Payload Too Large',
              '414': 'URI Too Long',
              '415': 'Unsupported Media Type',
              '416': 'Range Not Satisfiable',
              '417': 'Expectation Failed',
              '418': "I'm a Teapot",
              '421': 'Misdirected Request',
              '422': 'Unprocessable Entity',
              '423': 'Locked',
              '424': 'Failed Dependency',
              '425': 'Too Early',
              '426': 'Upgrade Required',
              '428': 'Precondition Required',
              '429': 'Too Many Requests',
              '431': 'Request Header Fields Too Large',
              '451': 'Unavailable For Legal Reasons',
              '500': 'Internal Server Error',
              '501': 'Not Implemented',
              '502': 'Bad Gateway',
              '503': 'Service Unavailable',
              '504': 'Gateway Timeout',
              '505': 'HTTP Version Not Supported',
              '506': 'Variant Also Negotiates',
              '507': 'Insufficient Storage',
              '508': 'Loop Detected',
              '509': 'Bandwidth Limit Exceeded',
              '510': 'Not Extended',
              '511': 'Network Authentication Required'
            },
            Agent: [Function: Agent] { defaultMaxSockets: Infinity },
            ClientRequest: [Function: ClientRequest],
            IncomingMessage: [Function: IncomingMessage],
            OutgoingMessage: [Function: OutgoingMessage],
            Server: [Function: Server],
            ServerResponse: [Function: ServerResponse],
            createServer: [Function: createServer],
            validateHeaderName: [Function: __node_internal_],
            validateHeaderValue: [Function: __node_internal_],
            get: [Function: get],
            request: [Function: request],
            setMaxIdleHTTPParsers: [Function: setMaxIdleHTTPParsers],
            maxHeaderSize: [Getter],
            globalAgent: [Getter/Setter]
          },
          'https:': {
            Agent: [Function: Agent],
            globalAgent: <ref *3> Agent {
              _events: [Object: null prototype] {
                free: [Function (anonymous)],
                newListener: [Function: maybeEnableKeylog]
              },
              _eventsCount: 2,
              _maxListeners: undefined,
              defaultPort: 443,
              protocol: 'https:',
              options: [Object: null prototype] { noDelay: true, path: null },
              requests: [Object: null prototype] {},
              sockets: [Object: null prototype] {
                'accounts.spotify.com:443:::::::::::::::::::::': [
                  <ref *2> TLSSocket {
                    _tlsOptions: {
                      allowHalfOpen: undefined,
                      pipe: false,
                      secureContext: SecureContext { context: SecureContext {} },
                      isServer: false,
                      requestCert: true,
                      rejectUnauthorized: true,
                      session: undefined,
                      ALPNProtocols: undefined,
                      requestOCSP: undefined,
                      enableTrace: undefined,
                      pskCallback: undefined,
                      highWaterMark: undefined,
                      onread: undefined,
                      signal: undefined
                    },
                    _secureEstablished: false,
                    _securePending: false,
                    _newSessionPending: false,
                    _controlReleased: true,
                    secureConnecting: true,
                    _SNICallback: null,
                    servername: null,
                    alpnProtocol: null,
                    authorized: false,
                    authorizationError: null,
                    encrypted: true,
                    _events: [Object: null prototype] {
                      close: [
                        [Function: onSocketCloseDestroySSL],
                        [Function: bound onceWrapper] {
                          listener: [Function (anonymous)]
                        },
                        [Function: onClose],
                        [Function: socketCloseListener],
                        [Function: bound onceWrapper] {
                          listener: [Function: onClose]
                        }
                      ],
                      end: [
                        [Function: onConnectEnd],
                        [Function: onReadableStreamEnd],
                        [Function: socketOnEnd]
                      ],
                      newListener: [Function: keylogNewListener],
                      connect: [
                        [Function: bound onceWrapper] {
                          listener: [Function (anonymous)]
                        },
                        [Function: bound onceWrapper] {
                          listener: [Function (anonymous)]
                        },
                        [Function: bound onceWrapper] {
                          listener: [Function: connect]
                        }
                      ],
                      secure: [Function: onConnectSecure],
                      session: [Function (anonymous)],
                      free: [Function: onFree],
                      timeout: [Function: onTimeout],
                      agentRemove: [Function: onRemove],
                      error: [Function: socketErrorListener],
                      data: [Function: socketOnData],
                      drain: [Function: ondrain]
                    },
                    _eventsCount: 12,
                    connecting: true,
                    _hadError: false,
                    _parent: null,
                    _host: 'accounts.spotify.com',
                    _closeAfterHandlingError: false,
                    _readableState: ReadableState {
                      objectMode: false,
                      highWaterMark: 16384,
                      buffer: BufferList { head: null, tail: null, length: 0 },
                      length: 0,
                      pipes: [],
                      flowing: true,
                      ended: false,
                      endEmitted: false,
                      reading: true,
                      constructed: true,
                      sync: false,
                      needReadable: true,
                      emittedReadable: false,
                      readableListening: false,
                      resumeScheduled: false,
                      errorEmitted: false,
                      emitClose: false,
                      autoDestroy: true,
                      destroyed: false,
                      errored: null,
                      closed: false,
                      closeEmitted: false,
                      defaultEncoding: 'utf8',
                      awaitDrainWriters: null,
                      multiAwaitDrain: false,
                      readingMore: false,
                      dataEmitted: false,
                      decoder: null,
                      encoding: null,
                      [Symbol(kPaused)]: false
                    },
                    _maxListeners: undefined,
                    _writableState: WritableState {
                      objectMode: false,
                      highWaterMark: 16384,
                      finalCalled: false,
                      needDrain: false,
                      ending: false,
                      ended: false,
                      finished: false,
                      destroyed: false,
                      decodeStrings: false,
                      defaultEncoding: 'utf8',
                      length: 378,
                      writing: true,
                      corked: 0,
                      sync: false,
                      bufferProcessing: false,
                      onwrite: [Function: bound onwrite],
                      writecb: [Function (anonymous)],
                      writelen: 378,
                      afterWriteTickInfo: null,
                      buffered: [],
                      bufferedIndex: 0,
                      allBuffers: true,
                      allNoop: true,
                      pendingcb: 1,
                      constructed: true,
                      prefinished: false,
                      errorEmitted: false,
                      emitClose: false,
                      autoDestroy: true,
                      errored: null,
                      closed: false,
                      closeEmitted: false,
                      [Symbol(kOnFinished)]: []
                    },
                    allowHalfOpen: false,
                    _sockname: null,
                    _pendingData: [
                      {
                        chunk: 'POST /api/token HTTP/1.1\r\n' +
                          'Accept: application/json, text/plain, */*\r\n' +
                          'Content-Type: application/x-www-form-urlencoded\r\n' +
                          'User-Agent: axios/1.6.8\r\n' +
                          'Content-Length: 119\r\n' +
                          'Accept-Encoding: gzip, compress, deflate, br\r\n' +
                          'Host: accounts.spotify.com\r\n' +
                          'Connection: close\r\n' +
                          '\r\n',
                        encoding: 'latin1',
                        callback: [Function: nop]
                      },
                      {
                        chunk: <Buffer 67 72 61 6e 74 5f 74 79 70 65 3d 63 6c 69 65 6e 74 5f 63 72 65 64 65 6e 74 69 61 6c 73 26 63 6c 69 65 6e 74 5f 69 64 3d 65 62 63 63 39 39 31 32 34 30 ... 69 more bytes>,
                        encoding: 'buffer',
                        callback: [Function (anonymous)]
                      },
                      allBuffers: false
                    ],
                    _pendingEncoding: '',
                    server: undefined,
                    _server: null,
                    ssl: TLSWrap {
                      _parent: TCP {
                        reading: [Getter/Setter],
                        onconnection: null,
                        [Symbol(owner_symbol)]: [Circular *2]
                      },
                      _parentWrap: undefined,
                      _secureContext: SecureContext { context: SecureContext {} },
                      reading: false,
                      onkeylog: [Function: onkeylog],
                      onhandshakestart: {},
                      onhandshakedone: [Function (anonymous)],
                      onocspresponse: [Function: onocspresponse],
                      onnewsession: [Function: onnewsessionclient],
                      onerror: [Function: onerror],
                      [Symbol(owner_symbol)]: [Circular *2]
                    },
                    _requestCert: true,
                    _rejectUnauthorized: true,
                    parser: <ref *4> HTTPParser {
                      '0': null,
                      '1': [Function: parserOnHeaders],
                      '2': [Function: parserOnHeadersComplete],
                      '3': [Function: parserOnBody],
                      '4': [Function: parserOnMessageComplete],
                      '5': null,
                      '6': null,
                      _headers: [],
                      _url: '',
                      socket: [Circular *2],
                      incoming: null,
                      outgoing: <ref *6> ClientRequest {
                        _events: [Object: null prototype] {
                          response: [Function: bound onceWrapper] {
                            listener: [Function (anonymous)]
                          },
                          abort: [Function (anonymous)],
                          aborted: [Function (anonymous)],
                          connect: [Function (anonymous)],
                          error: [Function (anonymous)],
                          socket: [Function (anonymous)],
                          timeout: [Function (anonymous)]
                        },
                        _eventsCount: 7,
                        _maxListeners: undefined,
                        outputData: [],
                        outputSize: 0,
                        writable: true,
                        destroyed: false,
                        _last: true,
                        chunkedEncoding: false,
                        shouldKeepAlive: false,
                        maxRequestsOnConnectionReached: false,
                        _defaultKeepAlive: true,
                        useChunkedEncodingByDefault: true,
                        sendDate: false,
                        _removedConnection: false,
                        _removedContLen: false,
                        _removedTE: false,
                        strictContentLength: false,
                        _contentLength: '119',
                        _hasBody: true,
                        _trailer: '',
                        finished: false,
                        _headerSent: true,
                        _closed: false,
                        socket: [Circular *2],
                        _header: 'POST /api/token HTTP/1.1\r\n' +
                          'Accept: application/json, text/plain, */*\r\n' +
                          'Content-Type: application/x-www-form-urlencoded\r\n' +
                          'User-Agent: axios/1.6.8\r\n' +
                          'Content-Length: 119\r\n' +
                          'Accept-Encoding: gzip, compress, deflate, br\r\n' +
                          'Host: accounts.spotify.com\r\n' +
                          'Connection: close\r\n' +
                          '\r\n',
                        _keepAliveTimeout: 0,
                        _onPendingData: [Function: nop],
                        agent: [Circular *3],
                        socketPath: undefined,
                        method: 'POST',
                        maxHeaderSize: undefined,
                        insecureHTTPParser: undefined,
                        joinDuplicateHeaders: undefined,
                        path: '/api/token',
                        _ended: false,
                        res: null,
                        aborted: false,
                        timeoutCb: null,
                        upgradeOrConnect: false,
                        parser: [Circular *4],
                        maxHeadersCount: null,
                        reusedSocket: false,
                        host: 'accounts.spotify.com',
                        protocol: 'https:',
                        _redirectable: Writable {
                          _writableState: WritableState {
                            objectMode: false,
                            highWaterMark: 16384,
                            finalCalled: false,
                            needDrain: false,
                            ending: false,
                            ended: false,
                            finished: false,
                            destroyed: false,
                            decodeStrings: true,
                            defaultEncoding: 'utf8',
                            length: 0,
                            writing: false,
                            corked: 0,
                            sync: true,
                            bufferProcessing: false,
                            onwrite: [Function: bound onwrite],
                            writecb: null,
                            writelen: 0,
                            afterWriteTickInfo: null,
                            buffered: [],
                            bufferedIndex: 0,
                            allBuffers: true,
                            allNoop: true,
                            pendingcb: 0,
                            constructed: true,
                            prefinished: false,
                            errorEmitted: false,
                            emitClose: true,
                            autoDestroy: true,
                            errored: null,
                            closed: false,
                            closeEmitted: false,
                            [Symbol(kOnFinished)]: []
                          },
                          _events: [Object: null prototype] {
                            response: [Function: handleResponse],
                            error: [Function: handleRequestError],
                            socket: [Function: handleRequestSocket]
                          },
                          _eventsCount: 3,
                          _maxListeners: undefined,
                          _options: {
                            maxRedirects: 21,
                            maxBodyLength: Infinity,
                            protocol: 'https:',
                            path: '/api/token',
                            method: 'POST',
                            headers: [Object: null prototype] {
                              Accept: 'application/json, text/plain, */*',
                              'Content-Type': 'application/x-www-form-urlencoded',
                              'User-Agent': 'axios/1.6.8',
                              'Content-Length': '119',
                              'Accept-Encoding': 'gzip, compress, deflate, br'
                            },
                            agents: { http: undefined, https: undefined },
                            auth: undefined,
                            family: undefined,
                            beforeRedirect: [Function: dispatchBeforeRedirect],
                            beforeRedirects: { proxy: [Function: beforeRedirect] },
                            hostname: 'accounts.spotify.com',
                            port: '',
                            agent: undefined,
                            nativeProtocols: [Circular *5],
                            pathname: '/api/token'
                          },
                          _ended: false,
                          _ending: true,
                          _redirectCount: 0,
                          _redirects: [],
                          _requestBodyLength: 119,
                          _requestBodyBuffers: [
                            {
                              data: <Buffer 67 72 61 6e 74 5f 74 79 70 65 3d 63 6c 69 65 6e 74 5f 63 72 65 64 65 6e 74 69 61 6c 73 26 63 6c 69 65 6e 74 5f 69 64 3d 65 62 63 63 39 39 31 32 34 30 ... 69 more bytes>,
                              encoding: undefined
                            }
                          ],
                          _onNativeResponse: [Function (anonymous)],
                          _currentRequest: [Circular *6],
                          _currentUrl: 'https://accounts.spotify.com/api/token',
                          [Symbol(kCapture)]: false
                        },
                        [Symbol(kCapture)]: false,
                        [Symbol(kBytesWritten)]: 0,
                        [Symbol(kEndCalled)]: false,
                        [Symbol(kNeedDrain)]: false,
                        [Symbol(corked)]: 0,
                        [Symbol(kOutHeaders)]: [Object: null prototype] {
                          accept: [
                            'Accept',
                            'application/json, text/plain, */*'
                          ],
                          'content-type': [
                            'Content-Type',
                            'application/x-www-form-urlencoded'
                          ],
                          'user-agent': [ 'User-Agent', 'axios/1.6.8' ],
                          'content-length': [ 'Content-Length', '119' ],
                          'accept-encoding': [
                            'Accept-Encoding',
                            'gzip, compress, deflate, br'
                          ],
                          host: [ 'Host', 'accounts.spotify.com' ]
                        },
                        [Symbol(errored)]: null,
                        [Symbol(kUniqueHeaders)]: null
                      },
                      maxHeaderPairs: 2000,
                      _consumed: false,
                      onIncoming: [Function: parserOnIncomingClient],
                      joinDuplicateHeaders: undefined,
                      [Symbol(resource_symbol)]: HTTPClientAsyncResource {
                        type: 'HTTPINCOMINGMESSAGE',
                        req: <ref *6> ClientRequest {
                          _events: [Object: null prototype] {
                            response: [Function: bound onceWrapper] {
                              listener: [Function (anonymous)]
                            },
                            abort: [Function (anonymous)],
                            aborted: [Function (anonymous)],
                            connect: [Function (anonymous)],
                            error: [Function (anonymous)],
                            socket: [Function (anonymous)],
                            timeout: [Function (anonymous)]
                          },
                          _eventsCount: 7,
                          _maxListeners: undefined,
                          outputData: [],
                          outputSize: 0,
                          writable: true,
                          destroyed: false,
                          _last: true,
                          chunkedEncoding: false,
                          shouldKeepAlive: false,
                          maxRequestsOnConnectionReached: false,
                          _defaultKeepAlive: true,
                          useChunkedEncodingByDefault: true,
                          sendDate: false,
                          _removedConnection: false,
                          _removedContLen: false,
                          _removedTE: false,
                          strictContentLength: false,
                          _contentLength: '119',
                          _hasBody: true,
                          _trailer: '',
                          finished: false,
                          _headerSent: true,
                          _closed: false,
                          socket: [Circular *2],
                          _header: 'POST /api/token HTTP/1.1\r\n' +
                            'Accept: application/json, text/plain, */*\r\n' +
                            'Content-Type: application/x-www-form-urlencoded\r\n' +
                            'User-Agent: axios/1.6.8\r\n' +
                            'Content-Length: 119\r\n' +
                            'Accept-Encoding: gzip, compress, deflate, br\r\n' +
                            'Host: accounts.spotify.com\r\n' +
                            'Connection: close\r\n' +
                            '\r\n',
                          _keepAliveTimeout: 0,
                          _onPendingData: [Function: nop],
                          agent: [Circular *3],
                          socketPath: undefined,
                          method: 'POST',
                          maxHeaderSize: undefined,
                          insecureHTTPParser: undefined,
                          joinDuplicateHeaders: undefined,
                          path: '/api/token',
                          _ended: false,
                          res: null,
                          aborted: false,
                          timeoutCb: null,
                          upgradeOrConnect: false,
                          parser: [Circular *4],
                          maxHeadersCount: null,
                          reusedSocket: false,
                          host: 'accounts.spotify.com',
                          protocol: 'https:',
                          _redirectable: Writable {
                            _writableState: WritableState {
                              objectMode: false,
                              highWaterMark: 16384,
                              finalCalled: false,
                              needDrain: false,
                              ending: false,
                              ended: false,
                              finished: false,
                              destroyed: false,
                              decodeStrings: true,
                              defaultEncoding: 'utf8',
                              length: 0,
                              writing: false,
                              corked: 0,
                              sync: true,
                              bufferProcessing: false,
                              onwrite: [Function: bound onwrite],
                              writecb: null,
                              writelen: 0,
                              afterWriteTickInfo: null,
                              buffered: [],
                              bufferedIndex: 0,
                              allBuffers: true,
                              allNoop: true,
                              pendingcb: 0,
                              constructed: true,
                              prefinished: false,
                              errorEmitted: false,
                              emitClose: true,
                              autoDestroy: true,
                              errored: null,
                              closed: false,
                              closeEmitted: false,
                              [Symbol(kOnFinished)]: []
                            },
                            _events: [Object: null prototype] {
                              response: [Function: handleResponse],
                              error: [Function: handleRequestError],
                              socket: [Function: handleRequestSocket]
                            },
                            _eventsCount: 3,
                            _maxListeners: undefined,
                            _options: {
                              maxRedirects: 21,
                              maxBodyLength: Infinity,
                              protocol: 'https:',
                              path: '/api/token',
                              method: 'POST',
                              headers: [Object: null prototype] {
                                Accept: 'application/json, text/plain, */*',
                                'Content-Type': 'application/x-www-form-urlencoded',
                                'User-Agent': 'axios/1.6.8',
                                'Content-Length': '119',
                                'Accept-Encoding': 'gzip, compress, deflate, br'
                              },
                              agents: { http: undefined, https: undefined },
                              auth: undefined,
                              family: undefined,
                              beforeRedirect: [Function: dispatchBeforeRedirect],
                              beforeRedirects: { proxy: [Function: beforeRedirect] },
                              hostname: 'accounts.spotify.com',
                              port: '',
                              agent: undefined,
                              nativeProtocols: [Circular *5],
                              pathname: '/api/token'
                            },
                            _ended: false,
                            _ending: true,
                            _redirectCount: 0,
                            _redirects: [],
                            _requestBodyLength: 119,
                            _requestBodyBuffers: [
                              {
                                data: <Buffer 67 72 61 6e 74 5f 74 79 70 65 3d 63 6c 69 65 6e 74 5f 63 72 65 64 65 6e 74 69 61 6c 73 26 63 6c 69 65 6e 74 5f 69 64 3d 65 62 63 63 39 39 31 32 34 30 ... 69 more bytes>,
                                encoding: undefined
                              }
                            ],
                            _onNativeResponse: [Function (anonymous)],
                            _currentRequest: [Circular *6],
                            _currentUrl: 'https://accounts.spotify.com/api/token',
                            [Symbol(kCapture)]: false
                          },
                          [Symbol(kCapture)]: false,
                          [Symbol(kBytesWritten)]: 0,
                          [Symbol(kEndCalled)]: false,
                          [Symbol(kNeedDrain)]: false,
                          [Symbol(corked)]: 0,
                          [Symbol(kOutHeaders)]: [Object: null prototype] {
                            accept: [
                              'Accept',
                              'application/json, text/plain, */*'
                            ],
                            'content-type': [
                              'Content-Type',
                              'application/x-www-form-urlencoded'
                            ],
                            'user-agent': [ 'User-Agent', 'axios/1.6.8' ],
                            'content-length': [ 'Content-Length', '119' ],
                            'accept-encoding': [
                              'Accept-Encoding',
                              'gzip, compress, deflate, br'
                            ],
                            host: [ 'Host', 'accounts.spotify.com' ]
                          },
                          [Symbol(errored)]: null,
                          [Symbol(kUniqueHeaders)]: null
                        }
                      }
                    },
                    _httpMessage: <ref *6> ClientRequest {
                      _events: [Object: null prototype] {
                        response: [Function: bound onceWrapper] {
                          listener: [Function (anonymous)]
                        },
                        abort: [Function (anonymous)],
                        aborted: [Function (anonymous)],
                        connect: [Function (anonymous)],
                        error: [Function (anonymous)],
                        socket: [Function (anonymous)],
                        timeout: [Function (anonymous)]
                      },
                      _eventsCount: 7,
                      _maxListeners: undefined,
                      outputData: [],
                      outputSize: 0,
                      writable: true,
                      destroyed: false,
                      _last: true,
                      chunkedEncoding: false,
                      shouldKeepAlive: false,
                      maxRequestsOnConnectionReached: false,
                      _defaultKeepAlive: true,
                      useChunkedEncodingByDefault: true,
                      sendDate: false,
                      _removedConnection: false,
                      _removedContLen: false,
                      _removedTE: false,
                      strictContentLength: false,
                      _contentLength: '119',
                      _hasBody: true,
                      _trailer: '',
                      finished: false,
                      _headerSent: true,
                      _closed: false,
                      socket: [Circular *2],
                      _header: 'POST /api/token HTTP/1.1\r\n' +
                        'Accept: application/json, text/plain, */*\r\n' +
                        'Content-Type: application/x-www-form-urlencoded\r\n' +
                        'User-Agent: axios/1.6.8\r\n' +
                        'Content-Length: 119\r\n' +
                        'Accept-Encoding: gzip, compress, deflate, br\r\n' +
                        'Host: accounts.spotify.com\r\n' +
                        'Connection: close\r\n' +
                        '\r\n',
                      _keepAliveTimeout: 0,
                      _onPendingData: [Function: nop],
                      agent: [Circular *3],
                      socketPath: undefined,
                      method: 'POST',
                      maxHeaderSize: undefined,
                      insecureHTTPParser: undefined,
                      joinDuplicateHeaders: undefined,
                      path: '/api/token',
                      _ended: false,
                      res: null,
                      aborted: false,
                      timeoutCb: null,
                      upgradeOrConnect: false,
                      parser: <ref *4> HTTPParser {
                        '0': null,
                        '1': [Function: parserOnHeaders],
                        '2': [Function: parserOnHeadersComplete],
                        '3': [Function: parserOnBody],
                        '4': [Function: parserOnMessageComplete],
                        '5': null,
                        '6': null,
                        _headers: [],
                        _url: '',
                        socket: [Circular *2],
                        incoming: null,
                        outgoing: [Circular *6],
                        maxHeaderPairs: 2000,
                        _consumed: false,
                        onIncoming: [Function: parserOnIncomingClient],
                        joinDuplicateHeaders: undefined,
                        [Symbol(resource_symbol)]: HTTPClientAsyncResource {
                          type: 'HTTPINCOMINGMESSAGE',
                          req: [Circular *6]
                        }
                      },
                      maxHeadersCount: null,
                      reusedSocket: false,
                      host: 'accounts.spotify.com',
                      protocol: 'https:',
                      _redirectable: Writable {
                        _writableState: WritableState {
                          objectMode: false,
                          highWaterMark: 16384,
                          finalCalled: false,
                          needDrain: false,
                          ending: false,
                          ended: false,
                          finished: false,
                          destroyed: false,
                          decodeStrings: true,
                          defaultEncoding: 'utf8',
                          length: 0,
                          writing: false,
                          corked: 0,
                          sync: true,
                          bufferProcessing: false,
                          onwrite: [Function: bound onwrite],
                          writecb: null,
                          writelen: 0,
                          afterWriteTickInfo: null,
                          buffered: [],
                          bufferedIndex: 0,
                          allBuffers: true,
                          allNoop: true,
                          pendingcb: 0,
                          constructed: true,
                          prefinished: false,
                          errorEmitted: false,
                          emitClose: true,
                          autoDestroy: true,
                          errored: null,
                          closed: false,
                          closeEmitted: false,
                          [Symbol(kOnFinished)]: []
                        },
                        _events: [Object: null prototype] {
                          response: [Function: handleResponse],
                          error: [Function: handleRequestError],
                          socket: [Function: handleRequestSocket]
                        },
                        _eventsCount: 3,
                        _maxListeners: undefined,
                        _options: {
                          maxRedirects: 21,
                          maxBodyLength: Infinity,
                          protocol: 'https:',
                          path: '/api/token',
                          method: 'POST',
                          headers: [Object: null prototype] {
                            Accept: 'application/json, text/plain, */*',
                            'Content-Type': 'application/x-www-form-urlencoded',
                            'User-Agent': 'axios/1.6.8',
                            'Content-Length': '119',
                            'Accept-Encoding': 'gzip, compress, deflate, br'
                          },
                          agents: { http: undefined, https: undefined },
                          auth: undefined,
                          family: undefined,
                          beforeRedirect: [Function: dispatchBeforeRedirect],
                          beforeRedirects: { proxy: [Function: beforeRedirect] },
                          hostname: 'accounts.spotify.com',
                          port: '',
                          agent: undefined,
                          nativeProtocols: [Circular *5],
                          pathname: '/api/token'
                        },
                        _ended: false,
                        _ending: true,
                        _redirectCount: 0,
                        _redirects: [],
                        _requestBodyLength: 119,
                        _requestBodyBuffers: [
                          {
                            data: <Buffer 67 72 61 6e 74 5f 74 79 70 65 3d 63 6c 69 65 6e 74 5f 63 72 65 64 65 6e 74 69 61 6c 73 26 63 6c 69 65 6e 74 5f 69 64 3d 65 62 63 63 39 39 31 32 34 30 ... 69 more bytes>,
                            encoding: undefined
                          }
                        ],
                        _onNativeResponse: [Function (anonymous)],
                        _currentRequest: [Circular *6],
                        _currentUrl: 'https://accounts.spotify.com/api/token',
                        [Symbol(kCapture)]: false
                      },
                      [Symbol(kCapture)]: false,
                      [Symbol(kBytesWritten)]: 0,
                      [Symbol(kEndCalled)]: false,
                      [Symbol(kNeedDrain)]: false,
                      [Symbol(corked)]: 0,
                      [Symbol(kOutHeaders)]: [Object: null prototype] {
                        accept: [
                          'Accept',
                          'application/json, text/plain, */*'
                        ],
                        'content-type': [
                          'Content-Type',
                          'application/x-www-form-urlencoded'
                        ],
                        'user-agent': [ 'User-Agent', 'axios/1.6.8' ],
                        'content-length': [ 'Content-Length', '119' ],
                        'accept-encoding': [
                          'Accept-Encoding',
                          'gzip, compress, deflate, br'
                        ],
                        host: [ 'Host', 'accounts.spotify.com' ]
                      },
                      [Symbol(errored)]: null,
                      [Symbol(kUniqueHeaders)]: null
                    },
                    [Symbol(res)]: TLSWrap {
                      _parent: TCP {
                        reading: [Getter/Setter],
                        onconnection: null,
                        [Symbol(owner_symbol)]: [Circular *2]
                      },
                      _parentWrap: undefined,
                      _secureContext: SecureContext { context: SecureContext {} },
                      reading: false,
                      onkeylog: [Function: onkeylog],
                      onhandshakestart: {},
                      onhandshakedone: [Function (anonymous)],
                      onocspresponse: [Function: onocspresponse],
                      onnewsession: [Function: onnewsessionclient],
                      onerror: [Function: onerror],
                      [Symbol(owner_symbol)]: [Circular *2]
                    },
                    [Symbol(verified)]: false,
                    [Symbol(pendingSession)]: null,
                    [Symbol(async_id_symbol)]: 6,
                    [Symbol(kHandle)]: TLSWrap {
                      _parent: TCP {
                        reading: [Getter/Setter],
                        onconnection: null,
                        [Symbol(owner_symbol)]: [Circular *2]
                      },
                      _parentWrap: undefined,
                      _secureContext: SecureContext { context: SecureContext {} },
                      reading: false,
                      onkeylog: [Function: onkeylog],
                      onhandshakestart: {},
                      onhandshakedone: [Function (anonymous)],
                      onocspresponse: [Function: onocspresponse],
                      onnewsession: [Function: onnewsessionclient],
                      onerror: [Function: onerror],
                      [Symbol(owner_symbol)]: [Circular *2]
                    },
                    [Symbol(lastWriteQueueSize)]: 0,
                    [Symbol(timeout)]: null,
                    [Symbol(kBuffer)]: null,
                    [Symbol(kBufferCb)]: null,
                    [Symbol(kBufferGen)]: null,
                    [Symbol(kCapture)]: false,
                    [Symbol(kSetNoDelay)]: false,
                    [Symbol(kSetKeepAlive)]: true,
                    [Symbol(kSetKeepAliveInitialDelay)]: 60,
                    [Symbol(kBytesRead)]: 0,
                    [Symbol(kBytesWritten)]: 0,
                    [Symbol(connect-options)]: {
                      rejectUnauthorized: true,
                      ciphers: 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
                      checkServerIdentity: [Function: checkServerIdentity],
                      minDHSize: 1024,
                      maxRedirects: 21,
                      maxBodyLength: Infinity,
                      protocol: 'https:',
                      path: null,
                      method: 'POST',
                      headers: [Object: null prototype] {
                        Accept: 'application/json, text/plain, */*',
                        'Content-Type': 'application/x-www-form-urlencoded',
                        'User-Agent': 'axios/1.6.8',
                        'Content-Length': '119',
                        'Accept-Encoding': 'gzip, compress, deflate, br'
                      },
                      agents: { http: undefined, https: undefined },
                      auth: undefined,
                      family: undefined,
                      beforeRedirect: [Function: dispatchBeforeRedirect],
                      beforeRedirects: { proxy: [Function: beforeRedirect] },
                      hostname: 'accounts.spotify.com',
                      port: 443,
                      agent: undefined,
                      nativeProtocols: [Circular *5],
                      pathname: '/api/token',
                      _defaultAgent: [Circular *3],
                      host: 'accounts.spotify.com',
                      noDelay: true,
                      servername: 'accounts.spotify.com',
                      _agentKey: 'accounts.spotify.com:443:::::::::::::::::::::',
                      encoding: null,
                      singleUse: true
                    }
                  }
                ]
              },
              freeSockets: [Object: null prototype] {},
              keepAliveMsecs: 1000,
              keepAlive: false,
              maxSockets: Infinity,
              maxFreeSockets: 256,
              scheduling: 'lifo',
              maxTotalSockets: Infinity,
              totalSocketCount: 1,
              maxCachedSessions: 100,
              _sessionCache: {
                map: {
                  'www.wikidata.org:443:::::::::::::::::::::': <Buffer 30 82 08 7d 02 01 01 02 02 03 04 04 02 13 02 04 20 49 81 10 e3 ea 7d 84 9b e4 63 a1 f3 bf 02 aa db cd 63 84 bf 4f 51 15 cc 96 ff a3 1c ef 0f 60 a7 04 ... 2127 more bytes>
                },
                list: [ 'www.wikidata.org:443:::::::::::::::::::::' ]
              },
              [Symbol(kCapture)]: false
            },
            Server: [Function: Server],
            createServer: [Function: createServer],
            get: [Function: get],
            request: [Function: request]
          }
        },
        pathname: '/w/rest.php/oauth2/access_token'
      },
      _ended: true,
      _ending: true,
      _redirectCount: 0,
      _redirects: [],
      _requestBodyLength: 141,
      _requestBodyBuffers: [],
      _onNativeResponse: [Function (anonymous)],
      _currentRequest: [Circular *1],
      _currentUrl: 'https://www.wikidata.org/w/rest.php/oauth2/access_token',
      [Symbol(kCapture)]: false
    },
    [Symbol(kCapture)]: false,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(kEndCalled)]: true,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      accept: [ 'Accept', 'application/json, text/plain, */*' ],
      'content-type': [ 'Content-Type', 'application/json' ],
      'user-agent': [ 'User-Agent', 'axios/1.6.8' ],
      'content-length': [ 'Content-Length', '141' ],
      'accept-encoding': [ 'Accept-Encoding', 'gzip, compress, deflate, br' ],
      host: [ 'Host', 'www.wikidata.org' ]
    },
    [Symbol(errored)]: null,
    [Symbol(kUniqueHeaders)]: null
  },
  response: {
    status: 400,
    statusText: 'Bad Request',
    headers: Object [AxiosHeaders] {
      date: 'Wed, 01 May 2024 17:15:27 GMT',
      server: 'mw-api-ext.eqiad.main-6568d96485-7z7s5',
      'x-content-type-options': 'nosniff',
      'cache-control': 'private,no-cache,s-maxage=0',
      'access-control-allow-origin': '*',
      vary: 'Accept-Encoding',
      'content-type': 'application/json',
      age: '0',
      'x-cache': 'cp1104 miss, cp1104 pass',
      'x-cache-status': 'pass',
      'server-timing': 'cache;desc="pass", host;desc="cp1104"',
      'strict-transport-security': 'max-age=106384710; includeSubDomains; preload',
      'report-to': '{ "group": "wm_nel", "max_age": 604800, "endpoints": [{ "url": "https://intake-logging.wikimedia.org/v1/events?stream=w3c.reportingapi.network_error&schema_uri=/w3c/reportingapi/network_error/1.0.0" }] }',
      nel: '{ "report_to": "wm_nel", "max_age": 604800, "failure_fraction": 0.05, "success_fraction": 0.0}',
      'set-cookie': [
        'WMF-Last-Access=01-May-2024;Path=/;HttpOnly;secure;Expires=Sun, 02 Jun 2024 12:00:00 GMT',
        'WMF-Last-Access-Global=01-May-2024;Path=/;Domain=.wikidata.org;HttpOnly;secure;Expires=Sun, 02 Jun 2024 12:00:00 GMT',
        'GeoIP=BR:PR:Curitiba:-25.50:-49.29:v4; Path=/; secure; Domain=.wikidata.org',
        'NetworkProbeLimit=0.001;Path=/;Secure;Max-Age=3600'
      ],
      'x-client-ip': '186.219.185.78',
      'content-length': '177',
      connection: 'close'
    },
    config: {
      transitional: {
        silentJSONParsing: true,
        forcedJSONParsing: true,
        clarifyTimeoutError: false
      },
      adapter: [ 'xhr', 'http' ],
      transformRequest: [ [Function: transformRequest] ],
      transformResponse: [ [Function: transformResponse] ],
      timeout: 0,
      xsrfCookieName: 'XSRF-TOKEN',
      xsrfHeaderName: 'X-XSRF-TOKEN',
      maxContentLength: -1,
      maxBodyLength: -1,
      env: {
        FormData: [Function: FormData] {
          LINE_BREAK: '\r\n',
          DEFAULT_CONTENT_TYPE: 'application/octet-stream'
        },
        Blob: [class Blob]
      },
      validateStatus: [Function: validateStatus],
      headers: Object [AxiosHeaders] {
        Accept: 'application/json, text/plain, */*',
        'Content-Type': 'application/json',
        'User-Agent': 'axios/1.6.8',
        'Content-Length': '141',
        'Accept-Encoding': 'gzip, compress, deflate, br'
      },
      method: 'post',
      url: 'https://www.wikidata.org/w/rest.php/oauth2/access_token',
      data: '{"grant_type":"client_credentials","client_id":"f1eaf401d045108de857f9150048f03f","client_secret":"91139e005084a2e34f08dcf7799679affc9bd2fe"}'
    },
    request: <ref *1> ClientRequest {
      _events: [Object: null prototype] {
        abort: [Function (anonymous)],
        aborted: [Function (anonymous)],
        connect: [Function (anonymous)],
        error: [Function (anonymous)],
        socket: [Function (anonymous)],
        timeout: [Function (anonymous)],
        finish: [Function: requestOnFinish]
      },
      _eventsCount: 7,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: true,
      _last: true,
      chunkedEncoding: false,
      shouldKeepAlive: false,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: false,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: '141',
      _hasBody: true,
      _trailer: '',
      finished: true,
      _headerSent: true,
      _closed: true,
      socket: TLSSocket {
        _tlsOptions: {
          allowHalfOpen: undefined,
          pipe: false,
          secureContext: SecureContext { context: SecureContext {} },
          isServer: false,
          requestCert: true,
          rejectUnauthorized: true,
          session: undefined,
          ALPNProtocols: undefined,
          requestOCSP: undefined,
          enableTrace: undefined,
          pskCallback: undefined,
          highWaterMark: undefined,
          onread: undefined,
          signal: undefined
        },
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        secureConnecting: false,
        _SNICallback: null,
        servername: 'www.wikidata.org',
        alpnProtocol: false,
        authorized: true,
        authorizationError: null,
        encrypted: true,
        _events: [Object: null prototype] {
          close: [
            [Function: onSocketCloseDestroySSL],
            [Function: onClose],
            [Function: socketCloseListener]
          ],
          end: [Function: onReadableStreamEnd],
          newListener: [Function: keylogNewListener],
          secure: [Function: onConnectSecure],
          session: [Function (anonymous)],
          free: [Function: onFree],
          timeout: [Function: onTimeout],
          agentRemove: [Function: onRemove],
          error: [Function: socketErrorListener]
        },
        _eventsCount: 9,
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: 'www.wikidata.org',
        _closeAfterHandlingError: false,
        _readableState: ReadableState {
          objectMode: false,
          highWaterMark: 16384,
          buffer: BufferList { head: null, tail: null, length: 0 },
          length: 0,
          pipes: [],
          flowing: true,
          ended: true,
          endEmitted: true,
          reading: false,
          constructed: true,
          sync: false,
          needReadable: false,
          emittedReadable: false,
          readableListening: false,
          resumeScheduled: false,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: true,
          destroyed: true,
          errored: null,
          closed: true,
          closeEmitted: true,
          defaultEncoding: 'utf8',
          awaitDrainWriters: null,
          multiAwaitDrain: false,
          readingMore: false,
          dataEmitted: true,
          decoder: null,
          encoding: null,
          [Symbol(kPaused)]: false
        },
        _maxListeners: undefined,
        _writableState: WritableState {
          objectMode: false,
          highWaterMark: 16384,
          finalCalled: true,
          needDrain: false,
          ending: true,
          ended: true,
          finished: true,
          destroyed: true,
          decodeStrings: false,
          defaultEncoding: 'utf8',
          length: 0,
          writing: false,
          corked: 0,
          sync: false,
          bufferProcessing: false,
          onwrite: [Function: bound onwrite],
          writecb: null,
          writelen: 0,
          afterWriteTickInfo: null,
          buffered: [],
          bufferedIndex: 0,
          allBuffers: true,
          allNoop: true,
          pendingcb: 0,
          constructed: true,
          prefinished: true,
          errorEmitted: false,
          emitClose: false,
          autoDestroy: true,
          errored: null,
          closed: true,
          closeEmitted: true,
          [Symbol(kOnFinished)]: []
        },
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: undefined,
        _server: null,
        ssl: null,
        _requestCert: true,
        _rejectUnauthorized: true,
        parser: null,
        _httpMessage: [Circular *1],
        write: [Function: writeAfterFIN],
        [Symbol(res)]: null,
        [Symbol(verified)]: true,
        [Symbol(pendingSession)]: null,
        [Symbol(async_id_symbol)]: 35,
        [Symbol(kHandle)]: null,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(kCapture)]: false,
        [Symbol(kSetNoDelay)]: false,
        [Symbol(kSetKeepAlive)]: true,
        [Symbol(kSetKeepAliveInitialDelay)]: 60,
        [Symbol(kBytesRead)]: 1442,
        [Symbol(kBytesWritten)]: 400,
        [Symbol(connect-options)]: {
          rejectUnauthorized: true,
          ciphers: 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
          checkServerIdentity: [Function: checkServerIdentity],
          minDHSize: 1024,
          maxRedirects: 21,
          maxBodyLength: Infinity,
          protocol: 'https:',
          path: null,
          method: 'POST',
          headers: [Object: null prototype] {
            Accept: 'application/json, text/plain, */*',
            'Content-Type': 'application/json',
            'User-Agent': 'axios/1.6.8',
            'Content-Length': '141',
            'Accept-Encoding': 'gzip, compress, deflate, br'
          },
          agents: { http: undefined, https: undefined },
          auth: undefined,
          family: undefined,
          beforeRedirect: [Function: dispatchBeforeRedirect],
          beforeRedirects: { proxy: [Function: beforeRedirect] },
          hostname: 'www.wikidata.org',
          port: 443,
          agent: undefined,
          nativeProtocols: <ref *5> {
            'http:': {
              _connectionListener: [Function: connectionListener],
              METHODS: [
                'ACL',         'BIND',       'CHECKOUT',
                'CONNECT',     'COPY',       'DELETE',
                'GET',         'HEAD',       'LINK',
                'LOCK',        'M-SEARCH',   'MERGE',
                'MKACTIVITY',  'MKCALENDAR', 'MKCOL',
                'MOVE',        'NOTIFY',     'OPTIONS',
                'PATCH',       'POST',       'PROPFIND',
                'PROPPATCH',   'PURGE',      'PUT',
                'REBIND',      'REPORT',     'SEARCH',
                'SOURCE',      'SUBSCRIBE',  'TRACE',
                'UNBIND',      'UNLINK',     'UNLOCK',
                'UNSUBSCRIBE'
              ],
              STATUS_CODES: {
                '100': 'Continue',
                '101': 'Switching Protocols',
                '102': 'Processing',
                '103': 'Early Hints',
                '200': 'OK',
                '201': 'Created',
                '202': 'Accepted',
                '203': 'Non-Authoritative Information',
                '204': 'No Content',
                '205': 'Reset Content',
                '206': 'Partial Content',
                '207': 'Multi-Status',
                '208': 'Already Reported',
                '226': 'IM Used',
                '300': 'Multiple Choices',
                '301': 'Moved Permanently',
                '302': 'Found',
                '303': 'See Other',
                '304': 'Not Modified',
                '305': 'Use Proxy',
                '307': 'Temporary Redirect',
                '308': 'Permanent Redirect',
                '400': 'Bad Request',
                '401': 'Unauthorized',
                '402': 'Payment Required',
                '403': 'Forbidden',
                '404': 'Not Found',
                '405': 'Method Not Allowed',
                '406': 'Not Acceptable',
                '407': 'Proxy Authentication Required',
                '408': 'Request Timeout',
                '409': 'Conflict',
                '410': 'Gone',
                '411': 'Length Required',
                '412': 'Precondition Failed',
                '413': 'Payload Too Large',
                '414': 'URI Too Long',
                '415': 'Unsupported Media Type',
                '416': 'Range Not Satisfiable',
                '417': 'Expectation Failed',
                '418': "I'm a Teapot",
                '421': 'Misdirected Request',
                '422': 'Unprocessable Entity',
                '423': 'Locked',
                '424': 'Failed Dependency',
                '425': 'Too Early',
                '426': 'Upgrade Required',
                '428': 'Precondition Required',
                '429': 'Too Many Requests',
                '431': 'Request Header Fields Too Large',
                '451': 'Unavailable For Legal Reasons',
                '500': 'Internal Server Error',
                '501': 'Not Implemented',
                '502': 'Bad Gateway',
                '503': 'Service Unavailable',
                '504': 'Gateway Timeout',
                '505': 'HTTP Version Not Supported',
                '506': 'Variant Also Negotiates',
                '507': 'Insufficient Storage',
                '508': 'Loop Detected',
                '509': 'Bandwidth Limit Exceeded',
                '510': 'Not Extended',
                '511': 'Network Authentication Required'
              },
              Agent: [Function: Agent] { defaultMaxSockets: Infinity },
              ClientRequest: [Function: ClientRequest],
              IncomingMessage: [Function: IncomingMessage],
              OutgoingMessage: [Function: OutgoingMessage],
              Server: [Function: Server],
              ServerResponse: [Function: ServerResponse],
              createServer: [Function: createServer],
              validateHeaderName: [Function: __node_internal_],
              validateHeaderValue: [Function: __node_internal_],
              get: [Function: get],
              request: [Function: request],
              setMaxIdleHTTPParsers: [Function: setMaxIdleHTTPParsers],
              maxHeaderSize: [Getter],
              globalAgent: [Getter/Setter]
            },
            'https:': {
              Agent: [Function: Agent],
              globalAgent: <ref *3> Agent {
                _events: [Object: null prototype] {
                  free: [Function (anonymous)],
                  newListener: [Function: maybeEnableKeylog]
                },
                _eventsCount: 2,
                _maxListeners: undefined,
                defaultPort: 443,
                protocol: 'https:',
                options: [Object: null prototype] { noDelay: true, path: null },
                requests: [Object: null prototype] {},
                sockets: [Object: null prototype] {
                  'accounts.spotify.com:443:::::::::::::::::::::': [
                    <ref *2> TLSSocket {
                      _tlsOptions: {
                        allowHalfOpen: undefined,
                        pipe: false,
                        secureContext: SecureContext { context: SecureContext {} },
                        isServer: false,
                        requestCert: true,
                        rejectUnauthorized: true,
                        session: undefined,
                        ALPNProtocols: undefined,
                        requestOCSP: undefined,
                        enableTrace: undefined,
                        pskCallback: undefined,
                        highWaterMark: undefined,
                        onread: undefined,
                        signal: undefined
                      },
                      _secureEstablished: false,
                      _securePending: false,
                      _newSessionPending: false,
                      _controlReleased: true,
                      secureConnecting: true,
                      _SNICallback: null,
                      servername: null,
                      alpnProtocol: null,
                      authorized: false,
                      authorizationError: null,
                      encrypted: true,
                      _events: [Object: null prototype] {
                        close: [
                          [Function: onSocketCloseDestroySSL],
                          [Function: bound onceWrapper] {
                            listener: [Function (anonymous)]
                          },
                          [Function: onClose],
                          [Function: socketCloseListener],
                          [Function: bound onceWrapper] {
                            listener: [Function: onClose]
                          }
                        ],
                        end: [
                          [Function: onConnectEnd],
                          [Function: onReadableStreamEnd],
                          [Function: socketOnEnd]
                        ],
                        newListener: [Function: keylogNewListener],
                        connect: [
                          [Function: bound onceWrapper] {
                            listener: [Function (anonymous)]
                          },
                          [Function: bound onceWrapper] {
                            listener: [Function (anonymous)]
                          },
                          [Function: bound onceWrapper] {
                            listener: [Function: connect]
                          }
                        ],
                        secure: [Function: onConnectSecure],
                        session: [Function (anonymous)],
                        free: [Function: onFree],
                        timeout: [Function: onTimeout],
                        agentRemove: [Function: onRemove],
                        error: [Function: socketErrorListener],
                        data: [Function: socketOnData],
                        drain: [Function: ondrain]
                      },
                      _eventsCount: 12,
                      connecting: true,
                      _hadError: false,
                      _parent: null,
                      _host: 'accounts.spotify.com',
                      _closeAfterHandlingError: false,
                      _readableState: ReadableState {
                        objectMode: false,
                        highWaterMark: 16384,
                        buffer: BufferList { head: null, tail: null, length: 0 },
                        length: 0,
                        pipes: [],
                        flowing: true,
                        ended: false,
                        endEmitted: false,
                        reading: true,
                        constructed: true,
                        sync: false,
                        needReadable: true,
                        emittedReadable: false,
                        readableListening: false,
                        resumeScheduled: false,
                        errorEmitted: false,
                        emitClose: false,
                        autoDestroy: true,
                        destroyed: false,
                        errored: null,
                        closed: false,
                        closeEmitted: false,
                        defaultEncoding: 'utf8',
                        awaitDrainWriters: null,
                        multiAwaitDrain: false,
                        readingMore: false,
                        dataEmitted: false,
                        decoder: null,
                        encoding: null,
                        [Symbol(kPaused)]: false
                      },
                      _maxListeners: undefined,
                      _writableState: WritableState {
                        objectMode: false,
                        highWaterMark: 16384,
                        finalCalled: false,
                        needDrain: false,
                        ending: false,
                        ended: false,
                        finished: false,
                        destroyed: false,
                        decodeStrings: false,
                        defaultEncoding: 'utf8',
                        length: 378,
                        writing: true,
                        corked: 0,
                        sync: false,
                        bufferProcessing: false,
                        onwrite: [Function: bound onwrite],
                        writecb: [Function (anonymous)],
                        writelen: 378,
                        afterWriteTickInfo: null,
                        buffered: [],
                        bufferedIndex: 0,
                        allBuffers: true,
                        allNoop: true,
                        pendingcb: 1,
                        constructed: true,
                        prefinished: false,
                        errorEmitted: false,
                        emitClose: false,
                        autoDestroy: true,
                        errored: null,
                        closed: false,
                        closeEmitted: false,
                        [Symbol(kOnFinished)]: []
                      },
                      allowHalfOpen: false,
                      _sockname: null,
                      _pendingData: [
                        {
                          chunk: 'POST /api/token HTTP/1.1\r\n' +
                            'Accept: application/json, text/plain, */*\r\n' +
                            'Content-Type: application/x-www-form-urlencoded\r\n' +
                            'User-Agent: axios/1.6.8\r\n' +
                            'Content-Length: 119\r\n' +
                            'Accept-Encoding: gzip, compress, deflate, br\r\n' +
                            'Host: accounts.spotify.com\r\n' +
                            'Connection: close\r\n' +
                            '\r\n',
                          encoding: 'latin1',
                          callback: [Function: nop]
                        },
                        {
                          chunk: <Buffer 67 72 61 6e 74 5f 74 79 70 65 3d 63 6c 69 65 6e 74 5f 63 72 65 64 65 6e 74 69 61 6c 73 26 63 6c 69 65 6e 74 5f 69 64 3d 65 62 63 63 39 39 31 32 34 30 ... 69 more bytes>,
                          encoding: 'buffer',
                          callback: [Function (anonymous)]
                        },
                        allBuffers: false
                      ],
                      _pendingEncoding: '',
                      server: undefined,
                      _server: null,
                      ssl: TLSWrap {
                        _parent: TCP {
                          reading: [Getter/Setter],
                          onconnection: null,
                          [Symbol(owner_symbol)]: [Circular *2]
                        },
                        _parentWrap: undefined,
                        _secureContext: SecureContext { context: SecureContext {} },
                        reading: false,
                        onkeylog: [Function: onkeylog],
                        onhandshakestart: {},
                        onhandshakedone: [Function (anonymous)],
                        onocspresponse: [Function: onocspresponse],
                        onnewsession: [Function: onnewsessionclient],
                        onerror: [Function: onerror],
                        [Symbol(owner_symbol)]: [Circular *2]
                      },
                      _requestCert: true,
                      _rejectUnauthorized: true,
                      parser: <ref *4> HTTPParser {
                        '0': null,
                        '1': [Function: parserOnHeaders],
                        '2': [Function: parserOnHeadersComplete],
                        '3': [Function: parserOnBody],
                        '4': [Function: parserOnMessageComplete],
                        '5': null,
                        '6': null,
                        _headers: [],
                        _url: '',
                        socket: [Circular *2],
                        incoming: null,
                        outgoing: <ref *6> ClientRequest {
                          _events: [Object: null prototype] {
                            response: [Function: bound onceWrapper] {
                              listener: [Function (anonymous)]
                            },
                            abort: [Function (anonymous)],
                            aborted: [Function (anonymous)],
                            connect: [Function (anonymous)],
                            error: [Function (anonymous)],
                            socket: [Function (anonymous)],
                            timeout: [Function (anonymous)]
                          },
                          _eventsCount: 7,
                          _maxListeners: undefined,
                          outputData: [],
                          outputSize: 0,
                          writable: true,
                          destroyed: false,
                          _last: true,
                          chunkedEncoding: false,
                          shouldKeepAlive: false,
                          maxRequestsOnConnectionReached: false,
                          _defaultKeepAlive: true,
                          useChunkedEncodingByDefault: true,
                          sendDate: false,
                          _removedConnection: false,
                          _removedContLen: false,
                          _removedTE: false,
                          strictContentLength: false,
                          _contentLength: '119',
                          _hasBody: true,
                          _trailer: '',
                          finished: false,
                          _headerSent: true,
                          _closed: false,
                          socket: [Circular *2],
                          _header: 'POST /api/token HTTP/1.1\r\n' +
                            'Accept: application/json, text/plain, */*\r\n' +
                            'Content-Type: application/x-www-form-urlencoded\r\n' +
                            'User-Agent: axios/1.6.8\r\n' +
                            'Content-Length: 119\r\n' +
                            'Accept-Encoding: gzip, compress, deflate, br\r\n' +
                            'Host: accounts.spotify.com\r\n' +
                            'Connection: close\r\n' +
                            '\r\n',
                          _keepAliveTimeout: 0,
                          _onPendingData: [Function: nop],
                          agent: [Circular *3],
                          socketPath: undefined,
                          method: 'POST',
                          maxHeaderSize: undefined,
                          insecureHTTPParser: undefined,
                          joinDuplicateHeaders: undefined,
                          path: '/api/token',
                          _ended: false,
                          res: null,
                          aborted: false,
                          timeoutCb: null,
                          upgradeOrConnect: false,
                          parser: [Circular *4],
                          maxHeadersCount: null,
                          reusedSocket: false,
                          host: 'accounts.spotify.com',
                          protocol: 'https:',
                          _redirectable: Writable {
                            _writableState: WritableState {
                              objectMode: false,
                              highWaterMark: 16384,
                              finalCalled: false,
                              needDrain: false,
                              ending: false,
                              ended: false,
                              finished: false,
                              destroyed: false,
                              decodeStrings: true,
                              defaultEncoding: 'utf8',
                              length: 0,
                              writing: false,
                              corked: 0,
                              sync: true,
                              bufferProcessing: false,
                              onwrite: [Function: bound onwrite],
                              writecb: null,
                              writelen: 0,
                              afterWriteTickInfo: null,
                              buffered: [],
                              bufferedIndex: 0,
                              allBuffers: true,
                              allNoop: true,
                              pendingcb: 0,
                              constructed: true,
                              prefinished: false,
                              errorEmitted: false,
                              emitClose: true,
                              autoDestroy: true,
                              errored: null,
                              closed: false,
                              closeEmitted: false,
                              [Symbol(kOnFinished)]: []
                            },
                            _events: [Object: null prototype] {
                              response: [Function: handleResponse],
                              error: [Function: handleRequestError],
                              socket: [Function: handleRequestSocket]
                            },
                            _eventsCount: 3,
                            _maxListeners: undefined,
                            _options: {
                              maxRedirects: 21,
                              maxBodyLength: Infinity,
                              protocol: 'https:',
                              path: '/api/token',
                              method: 'POST',
                              headers: [Object: null prototype] {
                                Accept: 'application/json, text/plain, */*',
                                'Content-Type': 'application/x-www-form-urlencoded',
                                'User-Agent': 'axios/1.6.8',
                                'Content-Length': '119',
                                'Accept-Encoding': 'gzip, compress, deflate, br'
                              },
                              agents: { http: undefined, https: undefined },
                              auth: undefined,
                              family: undefined,
                              beforeRedirect: [Function: dispatchBeforeRedirect],
                              beforeRedirects: { proxy: [Function: beforeRedirect] },
                              hostname: 'accounts.spotify.com',
                              port: '',
                              agent: undefined,
                              nativeProtocols: [Circular *5],
                              pathname: '/api/token'
                            },
                            _ended: false,
                            _ending: true,
                            _redirectCount: 0,
                            _redirects: [],
                            _requestBodyLength: 119,
                            _requestBodyBuffers: [
                              {
                                data: <Buffer 67 72 61 6e 74 5f 74 79 70 65 3d 63 6c 69 65 6e 74 5f 63 72 65 64 65 6e 74 69 61 6c 73 26 63 6c 69 65 6e 74 5f 69 64 3d 65 62 63 63 39 39 31 32 34 30 ... 69 more bytes>,
                                encoding: undefined
                              }
                            ],
                            _onNativeResponse: [Function (anonymous)],
                            _currentRequest: [Circular *6],
                            _currentUrl: 'https://accounts.spotify.com/api/token',
                            [Symbol(kCapture)]: false
                          },
                          [Symbol(kCapture)]: false,
                          [Symbol(kBytesWritten)]: 0,
                          [Symbol(kEndCalled)]: false,
                          [Symbol(kNeedDrain)]: false,
                          [Symbol(corked)]: 0,
                          [Symbol(kOutHeaders)]: [Object: null prototype] {
                            accept: [
                              'Accept',
                              'application/json, text/plain, */*'
                            ],
                            'content-type': [
                              'Content-Type',
                              'application/x-www-form-urlencoded'
                            ],
                            'user-agent': [ 'User-Agent', 'axios/1.6.8' ],
                            'content-length': [ 'Content-Length', '119' ],
                            'accept-encoding': [
                              'Accept-Encoding',
                              'gzip, compress, deflate, br'
                            ],
                            host: [ 'Host', 'accounts.spotify.com' ]
                          },
                          [Symbol(errored)]: null,
                          [Symbol(kUniqueHeaders)]: null
                        },
                        maxHeaderPairs: 2000,
                        _consumed: false,
                        onIncoming: [Function: parserOnIncomingClient],
                        joinDuplicateHeaders: undefined,
                        [Symbol(resource_symbol)]: HTTPClientAsyncResource {
                          type: 'HTTPINCOMINGMESSAGE',
                          req: <ref *6> ClientRequest {
                            _events: [Object: null prototype] {
                              response: [Function: bound onceWrapper] {
                                listener: [Function (anonymous)]
                              },
                              abort: [Function (anonymous)],
                              aborted: [Function (anonymous)],
                              connect: [Function (anonymous)],
                              error: [Function (anonymous)],
                              socket: [Function (anonymous)],
                              timeout: [Function (anonymous)]
                            },
                            _eventsCount: 7,
                            _maxListeners: undefined,
                            outputData: [],
                            outputSize: 0,
                            writable: true,
                            destroyed: false,
                            _last: true,
                            chunkedEncoding: false,
                            shouldKeepAlive: false,
                            maxRequestsOnConnectionReached: false,
                            _defaultKeepAlive: true,
                            useChunkedEncodingByDefault: true,
                            sendDate: false,
                            _removedConnection: false,
                            _removedContLen: false,
                            _removedTE: false,
                            strictContentLength: false,
                            _contentLength: '119',
                            _hasBody: true,
                            _trailer: '',
                            finished: false,
                            _headerSent: true,
                            _closed: false,
                            socket: [Circular *2],
                            _header: 'POST /api/token HTTP/1.1\r\n' +
                              'Accept: application/json, text/plain, */*\r\n' +
                              'Content-Type: application/x-www-form-urlencoded\r\n' +
                              'User-Agent: axios/1.6.8\r\n' +
                              'Content-Length: 119\r\n' +
                              'Accept-Encoding: gzip, compress, deflate, br\r\n' +
                              'Host: accounts.spotify.com\r\n' +
                              'Connection: close\r\n' +
                              '\r\n',
                            _keepAliveTimeout: 0,
                            _onPendingData: [Function: nop],
                            agent: [Circular *3],
                            socketPath: undefined,
                            method: 'POST',
                            maxHeaderSize: undefined,
                            insecureHTTPParser: undefined,
                            joinDuplicateHeaders: undefined,
                            path: '/api/token',
                            _ended: false,
                            res: null,
                            aborted: false,
                            timeoutCb: null,
                            upgradeOrConnect: false,
                            parser: [Circular *4],
                            maxHeadersCount: null,
                            reusedSocket: false,
                            host: 'accounts.spotify.com',
                            protocol: 'https:',
                            _redirectable: Writable {
                              _writableState: WritableState {
                                objectMode: false,
                                highWaterMark: 16384,
                                finalCalled: false,
                                needDrain: false,
                                ending: false,
                                ended: false,
                                finished: false,
                                destroyed: false,
                                decodeStrings: true,
                                defaultEncoding: 'utf8',
                                length: 0,
                                writing: false,
                                corked: 0,
                                sync: true,
                                bufferProcessing: false,
                                onwrite: [Function: bound onwrite],
                                writecb: null,
                                writelen: 0,
                                afterWriteTickInfo: null,
                                buffered: [],
                                bufferedIndex: 0,
                                allBuffers: true,
                                allNoop: true,
                                pendingcb: 0,
                                constructed: true,
                                prefinished: false,
                                errorEmitted: false,
                                emitClose: true,
                                autoDestroy: true,
                                errored: null,
                                closed: false,
                                closeEmitted: false,
                                [Symbol(kOnFinished)]: []
                              },
                              _events: [Object: null prototype] {
                                response: [Function: handleResponse],
                                error: [Function: handleRequestError],
                                socket: [Function: handleRequestSocket]
                              },
                              _eventsCount: 3,
                              _maxListeners: undefined,
                              _options: {
                                maxRedirects: 21,
                                maxBodyLength: Infinity,
                                protocol: 'https:',
                                path: '/api/token',
                                method: 'POST',
                                headers: [Object: null prototype] {
                                  Accept: 'application/json, text/plain, */*',
                                  'Content-Type': 'application/x-www-form-urlencoded',
                                  'User-Agent': 'axios/1.6.8',
                                  'Content-Length': '119',
                                  'Accept-Encoding': 'gzip, compress, deflate, br'
                                },
                                agents: { http: undefined, https: undefined },
                                auth: undefined,
                                family: undefined,
                                beforeRedirect: [Function: dispatchBeforeRedirect],
                                beforeRedirects: { proxy: [Function: beforeRedirect] },
                                hostname: 'accounts.spotify.com',
                                port: '',
                                agent: undefined,
                                nativeProtocols: [Circular *5],
                                pathname: '/api/token'
                              },
                              _ended: false,
                              _ending: true,
                              _redirectCount: 0,
                              _redirects: [],
                              _requestBodyLength: 119,
                              _requestBodyBuffers: [
                                {
                                  data: <Buffer 67 72 61 6e 74 5f 74 79 70 65 3d 63 6c 69 65 6e 74 5f 63 72 65 64 65 6e 74 69 61 6c 73 26 63 6c 69 65 6e 74 5f 69 64 3d 65 62 63 63 39 39 31 32 34 30 ... 69 more bytes>,
                                  encoding: undefined
                                }
                              ],
                              _onNativeResponse: [Function (anonymous)],
                              _currentRequest: [Circular *6],
                              _currentUrl: 'https://accounts.spotify.com/api/token',
                              [Symbol(kCapture)]: false
                            },
                            [Symbol(kCapture)]: false,
                            [Symbol(kBytesWritten)]: 0,
                            [Symbol(kEndCalled)]: false,
                            [Symbol(kNeedDrain)]: false,
                            [Symbol(corked)]: 0,
                            [Symbol(kOutHeaders)]: [Object: null prototype] {
                              accept: [
                                'Accept',
                                'application/json, text/plain, */*'
                              ],
                              'content-type': [
                                'Content-Type',
                                'application/x-www-form-urlencoded'
                              ],
                              'user-agent': [ 'User-Agent', 'axios/1.6.8' ],
                              'content-length': [ 'Content-Length', '119' ],
                              'accept-encoding': [
                                'Accept-Encoding',
                                'gzip, compress, deflate, br'
                              ],
                              host: [ 'Host', 'accounts.spotify.com' ]
                            },
                            [Symbol(errored)]: null,
                            [Symbol(kUniqueHeaders)]: null
                          }
                        }
                      },
                      _httpMessage: <ref *6> ClientRequest {
                        _events: [Object: null prototype] {
                          response: [Function: bound onceWrapper] {
                            listener: [Function (anonymous)]
                          },
                          abort: [Function (anonymous)],
                          aborted: [Function (anonymous)],
                          connect: [Function (anonymous)],
                          error: [Function (anonymous)],
                          socket: [Function (anonymous)],
                          timeout: [Function (anonymous)]
                        },
                        _eventsCount: 7,
                        _maxListeners: undefined,
                        outputData: [],
                        outputSize: 0,
                        writable: true,
                        destroyed: false,
                        _last: true,
                        chunkedEncoding: false,
                        shouldKeepAlive: false,
                        maxRequestsOnConnectionReached: false,
                        _defaultKeepAlive: true,
                        useChunkedEncodingByDefault: true,
                        sendDate: false,
                        _removedConnection: false,
                        _removedContLen: false,
                        _removedTE: false,
                        strictContentLength: false,
                        _contentLength: '119',
                        _hasBody: true,
                        _trailer: '',
                        finished: false,
                        _headerSent: true,
                        _closed: false,
                        socket: [Circular *2],
                        _header: 'POST /api/token HTTP/1.1\r\n' +
                          'Accept: application/json, text/plain, */*\r\n' +
                          'Content-Type: application/x-www-form-urlencoded\r\n' +
                          'User-Agent: axios/1.6.8\r\n' +
                          'Content-Length: 119\r\n' +
                          'Accept-Encoding: gzip, compress, deflate, br\r\n' +
                          'Host: accounts.spotify.com\r\n' +
                          'Connection: close\r\n' +
                          '\r\n',
                        _keepAliveTimeout: 0,
                        _onPendingData: [Function: nop],
                        agent: [Circular *3],
                        socketPath: undefined,
                        method: 'POST',
                        maxHeaderSize: undefined,
                        insecureHTTPParser: undefined,
                        joinDuplicateHeaders: undefined,
                        path: '/api/token',
                        _ended: false,
                        res: null,
                        aborted: false,
                        timeoutCb: null,
                        upgradeOrConnect: false,
                        parser: <ref *4> HTTPParser {
                          '0': null,
                          '1': [Function: parserOnHeaders],
                          '2': [Function: parserOnHeadersComplete],
                          '3': [Function: parserOnBody],
                          '4': [Function: parserOnMessageComplete],
                          '5': null,
                          '6': null,
                          _headers: [],
                          _url: '',
                          socket: [Circular *2],
                          incoming: null,
                          outgoing: [Circular *6],
                          maxHeaderPairs: 2000,
                          _consumed: false,
                          onIncoming: [Function: parserOnIncomingClient],
                          joinDuplicateHeaders: undefined,
                          [Symbol(resource_symbol)]: HTTPClientAsyncResource {
                            type: 'HTTPINCOMINGMESSAGE',
                            req: [Circular *6]
                          }
                        },
                        maxHeadersCount: null,
                        reusedSocket: false,
                        host: 'accounts.spotify.com',
                        protocol: 'https:',
                        _redirectable: Writable {
                          _writableState: WritableState {
                            objectMode: false,
                            highWaterMark: 16384,
                            finalCalled: false,
                            needDrain: false,
                            ending: false,
                            ended: false,
                            finished: false,
                            destroyed: false,
                            decodeStrings: true,
                            defaultEncoding: 'utf8',
                            length: 0,
                            writing: false,
                            corked: 0,
                            sync: true,
                            bufferProcessing: false,
                            onwrite: [Function: bound onwrite],
                            writecb: null,
                            writelen: 0,
                            afterWriteTickInfo: null,
                            buffered: [],
                            bufferedIndex: 0,
                            allBuffers: true,
                            allNoop: true,
                            pendingcb: 0,
                            constructed: true,
                            prefinished: false,
                            errorEmitted: false,
                            emitClose: true,
                            autoDestroy: true,
                            errored: null,
                            closed: false,
                            closeEmitted: false,
                            [Symbol(kOnFinished)]: []
                          },
                          _events: [Object: null prototype] {
                            response: [Function: handleResponse],
                            error: [Function: handleRequestError],
                            socket: [Function: handleRequestSocket]
                          },
                          _eventsCount: 3,
                          _maxListeners: undefined,
                          _options: {
                            maxRedirects: 21,
                            maxBodyLength: Infinity,
                            protocol: 'https:',
                            path: '/api/token',
                            method: 'POST',
                            headers: [Object: null prototype] {
                              Accept: 'application/json, text/plain, */*',
                              'Content-Type': 'application/x-www-form-urlencoded',
                              'User-Agent': 'axios/1.6.8',
                              'Content-Length': '119',
                              'Accept-Encoding': 'gzip, compress, deflate, br'
                            },
                            agents: { http: undefined, https: undefined },
                            auth: undefined,
                            family: undefined,
                            beforeRedirect: [Function: dispatchBeforeRedirect],
                            beforeRedirects: { proxy: [Function: beforeRedirect] },
                            hostname: 'accounts.spotify.com',
                            port: '',
                            agent: undefined,
                            nativeProtocols: [Circular *5],
                            pathname: '/api/token'
                          },
                          _ended: false,
                          _ending: true,
                          _redirectCount: 0,
                          _redirects: [],
                          _requestBodyLength: 119,
                          _requestBodyBuffers: [
                            {
                              data: <Buffer 67 72 61 6e 74 5f 74 79 70 65 3d 63 6c 69 65 6e 74 5f 63 72 65 64 65 6e 74 69 61 6c 73 26 63 6c 69 65 6e 74 5f 69 64 3d 65 62 63 63 39 39 31 32 34 30 ... 69 more bytes>,
                              encoding: undefined
                            }
                          ],
                          _onNativeResponse: [Function (anonymous)],
                          _currentRequest: [Circular *6],
                          _currentUrl: 'https://accounts.spotify.com/api/token',
                          [Symbol(kCapture)]: false
                        },
                        [Symbol(kCapture)]: false,
                        [Symbol(kBytesWritten)]: 0,
                        [Symbol(kEndCalled)]: false,
                        [Symbol(kNeedDrain)]: false,
                        [Symbol(corked)]: 0,
                        [Symbol(kOutHeaders)]: [Object: null prototype] {
                          accept: [
                            'Accept',
                            'application/json, text/plain, */*'
                          ],
                          'content-type': [
                            'Content-Type',
                            'application/x-www-form-urlencoded'
                          ],
                          'user-agent': [ 'User-Agent', 'axios/1.6.8' ],
                          'content-length': [ 'Content-Length', '119' ],
                          'accept-encoding': [
                            'Accept-Encoding',
                            'gzip, compress, deflate, br'
                          ],
                          host: [ 'Host', 'accounts.spotify.com' ]
                        },
                        [Symbol(errored)]: null,
                        [Symbol(kUniqueHeaders)]: null
                      },
                      [Symbol(res)]: TLSWrap {
                        _parent: TCP {
                          reading: [Getter/Setter],
                          onconnection: null,
                          [Symbol(owner_symbol)]: [Circular *2]
                        },
                        _parentWrap: undefined,
                        _secureContext: SecureContext { context: SecureContext {} },
                        reading: false,
                        onkeylog: [Function: onkeylog],
                        onhandshakestart: {},
                        onhandshakedone: [Function (anonymous)],
                        onocspresponse: [Function: onocspresponse],
                        onnewsession: [Function: onnewsessionclient],
                        onerror: [Function: onerror],
                        [Symbol(owner_symbol)]: [Circular *2]
                      },
                      [Symbol(verified)]: false,
                      [Symbol(pendingSession)]: null,
                      [Symbol(async_id_symbol)]: 6,
                      [Symbol(kHandle)]: TLSWrap {
                        _parent: TCP {
                          reading: [Getter/Setter],
                          onconnection: null,
                          [Symbol(owner_symbol)]: [Circular *2]
                        },
                        _parentWrap: undefined,
                        _secureContext: SecureContext { context: SecureContext {} },
                        reading: false,
                        onkeylog: [Function: onkeylog],
                        onhandshakestart: {},
                        onhandshakedone: [Function (anonymous)],
                        onocspresponse: [Function: onocspresponse],
                        onnewsession: [Function: onnewsessionclient],
                        onerror: [Function: onerror],
                        [Symbol(owner_symbol)]: [Circular *2]
                      },
                      [Symbol(lastWriteQueueSize)]: 0,
                      [Symbol(timeout)]: null,
                      [Symbol(kBuffer)]: null,
                      [Symbol(kBufferCb)]: null,
                      [Symbol(kBufferGen)]: null,
                      [Symbol(kCapture)]: false,
                      [Symbol(kSetNoDelay)]: false,
                      [Symbol(kSetKeepAlive)]: true,
                      [Symbol(kSetKeepAliveInitialDelay)]: 60,
                      [Symbol(kBytesRead)]: 0,
                      [Symbol(kBytesWritten)]: 0,
                      [Symbol(connect-options)]: {
                        rejectUnauthorized: true,
                        ciphers: 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
                        checkServerIdentity: [Function: checkServerIdentity],
                        minDHSize: 1024,
                        maxRedirects: 21,
                        maxBodyLength: Infinity,
                        protocol: 'https:',
                        path: null,
                        method: 'POST',
                        headers: [Object: null prototype] {
                          Accept: 'application/json, text/plain, */*',
                          'Content-Type': 'application/x-www-form-urlencoded',
                          'User-Agent': 'axios/1.6.8',
                          'Content-Length': '119',
                          'Accept-Encoding': 'gzip, compress, deflate, br'
                        },
                        agents: { http: undefined, https: undefined },
                        auth: undefined,
                        family: undefined,
                        beforeRedirect: [Function: dispatchBeforeRedirect],
                        beforeRedirects: { proxy: [Function: beforeRedirect] },
                        hostname: 'accounts.spotify.com',
                        port: 443,
                        agent: undefined,
                        nativeProtocols: [Circular *5],
                        pathname: '/api/token',
                        _defaultAgent: [Circular *3],
                        host: 'accounts.spotify.com',
                        noDelay: true,
                        servername: 'accounts.spotify.com',
                        _agentKey: 'accounts.spotify.com:443:::::::::::::::::::::',
                        encoding: null,
                        singleUse: true
                      }
                    }
                  ]
                },
                freeSockets: [Object: null prototype] {},
                keepAliveMsecs: 1000,
                keepAlive: false,
                maxSockets: Infinity,
                maxFreeSockets: 256,
                scheduling: 'lifo',
                maxTotalSockets: Infinity,
                totalSocketCount: 1,
                maxCachedSessions: 100,
                _sessionCache: {
                  map: {
                    'www.wikidata.org:443:::::::::::::::::::::': <Buffer 30 82 08 7d 02 01 01 02 02 03 04 04 02 13 02 04 20 49 81 10 e3 ea 7d 84 9b e4 63 a1 f3 bf 02 aa db cd 63 84 bf 4f 51 15 cc 96 ff a3 1c ef 0f 60 a7 04 ... 2127 more bytes>
                  },
                  list: [ 'www.wikidata.org:443:::::::::::::::::::::' ]
                },
                [Symbol(kCapture)]: false
              },
              Server: [Function: Server],
              createServer: [Function: createServer],
              get: [Function: get],
              request: [Function: request]
            }
          },
          pathname: '/w/rest.php/oauth2/access_token',
          _defaultAgent: <ref *3> Agent {
            _events: [Object: null prototype] {
              free: [Function (anonymous)],
              newListener: [Function: maybeEnableKeylog]
            },
            _eventsCount: 2,
            _maxListeners: undefined,
            defaultPort: 443,
            protocol: 'https:',
            options: [Object: null prototype] { noDelay: true, path: null },
            requests: [Object: null prototype] {},
            sockets: [Object: null prototype] {
              'accounts.spotify.com:443:::::::::::::::::::::': [
                <ref *2> TLSSocket {
                  _tlsOptions: {
                    allowHalfOpen: undefined,
                    pipe: false,
                    secureContext: SecureContext { context: SecureContext {} },
                    isServer: false,
                    requestCert: true,
                    rejectUnauthorized: true,
                    session: undefined,
                    ALPNProtocols: undefined,
                    requestOCSP: undefined,
                    enableTrace: undefined,
                    pskCallback: undefined,
                    highWaterMark: undefined,
                    onread: undefined,
                    signal: undefined
                  },
                  _secureEstablished: false,
                  _securePending: false,
                  _newSessionPending: false,
                  _controlReleased: true,
                  secureConnecting: true,
                  _SNICallback: null,
                  servername: null,
                  alpnProtocol: null,
                  authorized: false,
                  authorizationError: null,
                  encrypted: true,
                  _events: [Object: null prototype] {
                    close: [
                      [Function: onSocketCloseDestroySSL],
                      [Function: bound onceWrapper] {
                        listener: [Function (anonymous)]
                      },
                      [Function: onClose],
                      [Function: socketCloseListener],
                      [Function: bound onceWrapper] {
                        listener: [Function: onClose]
                      }
                    ],
                    end: [
                      [Function: onConnectEnd],
                      [Function: onReadableStreamEnd],
                      [Function: socketOnEnd]
                    ],
                    newListener: [Function: keylogNewListener],
                    connect: [
                      [Function: bound onceWrapper] {
                        listener: [Function (anonymous)]
                      },
                      [Function: bound onceWrapper] {
                        listener: [Function (anonymous)]
                      },
                      [Function: bound onceWrapper] {
                        listener: [Function: connect]
                      }
                    ],
                    secure: [Function: onConnectSecure],
                    session: [Function (anonymous)],
                    free: [Function: onFree],
                    timeout: [Function: onTimeout],
                    agentRemove: [Function: onRemove],
                    error: [Function: socketErrorListener],
                    data: [Function: socketOnData],
                    drain: [Function: ondrain]
                  },
                  _eventsCount: 12,
                  connecting: true,
                  _hadError: false,
                  _parent: null,
                  _host: 'accounts.spotify.com',
                  _closeAfterHandlingError: false,
                  _readableState: ReadableState {
                    objectMode: false,
                    highWaterMark: 16384,
                    buffer: BufferList { head: null, tail: null, length: 0 },
                    length: 0,
                    pipes: [],
                    flowing: true,
                    ended: false,
                    endEmitted: false,
                    reading: true,
                    constructed: true,
                    sync: false,
                    needReadable: true,
                    emittedReadable: false,
                    readableListening: false,
                    resumeScheduled: false,
                    errorEmitted: false,
                    emitClose: false,
                    autoDestroy: true,
                    destroyed: false,
                    errored: null,
                    closed: false,
                    closeEmitted: false,
                    defaultEncoding: 'utf8',
                    awaitDrainWriters: null,
                    multiAwaitDrain: false,
                    readingMore: false,
                    dataEmitted: false,
                    decoder: null,
                    encoding: null,
                    [Symbol(kPaused)]: false
                  },
                  _maxListeners: undefined,
                  _writableState: WritableState {
                    objectMode: false,
                    highWaterMark: 16384,
                    finalCalled: false,
                    needDrain: false,
                    ending: false,
                    ended: false,
                    finished: false,
                    destroyed: false,
                    decodeStrings: false,
                    defaultEncoding: 'utf8',
                    length: 378,
                    writing: true,
                    corked: 0,
                    sync: false,
                    bufferProcessing: false,
                    onwrite: [Function: bound onwrite],
                    writecb: [Function (anonymous)],
                    writelen: 378,
                    afterWriteTickInfo: null,
                    buffered: [],
                    bufferedIndex: 0,
                    allBuffers: true,
                    allNoop: true,
                    pendingcb: 1,
                    constructed: true,
                    prefinished: false,
                    errorEmitted: false,
                    emitClose: false,
                    autoDestroy: true,
                    errored: null,
                    closed: false,
                    closeEmitted: false,
                    [Symbol(kOnFinished)]: []
                  },
                  allowHalfOpen: false,
                  _sockname: null,
                  _pendingData: [
                    {
                      chunk: 'POST /api/token HTTP/1.1\r\n' +
                        'Accept: application/json, text/plain, */*\r\n' +
                        'Content-Type: application/x-www-form-urlencoded\r\n' +
                        'User-Agent: axios/1.6.8\r\n' +
                        'Content-Length: 119\r\n' +
                        'Accept-Encoding: gzip, compress, deflate, br\r\n' +
                        'Host: accounts.spotify.com\r\n' +
                        'Connection: close\r\n' +
                        '\r\n',
                      encoding: 'latin1',
                      callback: [Function: nop]
                    },
                    {
                      chunk: <Buffer 67 72 61 6e 74 5f 74 79 70 65 3d 63 6c 69 65 6e 74 5f 63 72 65 64 65 6e 74 69 61 6c 73 26 63 6c 69 65 6e 74 5f 69 64 3d 65 62 63 63 39 39 31 32 34 30 ... 69 more bytes>,
                      encoding: 'buffer',
                      callback: [Function (anonymous)]
                    },
                    allBuffers: false
                  ],
                  _pendingEncoding: '',
                  server: undefined,
                  _server: null,
                  ssl: TLSWrap {
                    _parent: TCP {
                      reading: [Getter/Setter],
                      onconnection: null,
                      [Symbol(owner_symbol)]: [Circular *2]
                    },
                    _parentWrap: undefined,
                    _secureContext: SecureContext { context: SecureContext {} },
                    reading: false,
                    onkeylog: [Function: onkeylog],
                    onhandshakestart: {},
                    onhandshakedone: [Function (anonymous)],
                    onocspresponse: [Function: onocspresponse],
                    onnewsession: [Function: onnewsessionclient],
                    onerror: [Function: onerror],
                    [Symbol(owner_symbol)]: [Circular *2]
                  },
                  _requestCert: true,
                  _rejectUnauthorized: true,
                  parser: <ref *4> HTTPParser {
                    '0': null,
                    '1': [Function: parserOnHeaders],
                    '2': [Function: parserOnHeadersComplete],
                    '3': [Function: parserOnBody],
                    '4': [Function: parserOnMessageComplete],
                    '5': null,
                    '6': null,
                    _headers: [],
                    _url: '',
                    socket: [Circular *2],
                    incoming: null,
                    outgoing: <ref *6> ClientRequest {
                      _events: [Object: null prototype] {
                        response: [Function: bound onceWrapper] {
                          listener: [Function (anonymous)]
                        },
                        abort: [Function (anonymous)],
                        aborted: [Function (anonymous)],
                        connect: [Function (anonymous)],
                        error: [Function (anonymous)],
                        socket: [Function (anonymous)],
                        timeout: [Function (anonymous)]
                      },
                      _eventsCount: 7,
                      _maxListeners: undefined,
                      outputData: [],
                      outputSize: 0,
                      writable: true,
                      destroyed: false,
                      _last: true,
                      chunkedEncoding: false,
                      shouldKeepAlive: false,
                      maxRequestsOnConnectionReached: false,
                      _defaultKeepAlive: true,
                      useChunkedEncodingByDefault: true,
                      sendDate: false,
                      _removedConnection: false,
                      _removedContLen: false,
                      _removedTE: false,
                      strictContentLength: false,
                      _contentLength: '119',
                      _hasBody: true,
                      _trailer: '',
                      finished: false,
                      _headerSent: true,
                      _closed: false,
                      socket: [Circular *2],
                      _header: 'POST /api/token HTTP/1.1\r\n' +
                        'Accept: application/json, text/plain, */*\r\n' +
                        'Content-Type: application/x-www-form-urlencoded\r\n' +
                        'User-Agent: axios/1.6.8\r\n' +
                        'Content-Length: 119\r\n' +
                        'Accept-Encoding: gzip, compress, deflate, br\r\n' +
                        'Host: accounts.spotify.com\r\n' +
                        'Connection: close\r\n' +
                        '\r\n',
                      _keepAliveTimeout: 0,
                      _onPendingData: [Function: nop],
                      agent: [Circular *3],
                      socketPath: undefined,
                      method: 'POST',
                      maxHeaderSize: undefined,
                      insecureHTTPParser: undefined,
                      joinDuplicateHeaders: undefined,
                      path: '/api/token',
                      _ended: false,
                      res: null,
                      aborted: false,
                      timeoutCb: null,
                      upgradeOrConnect: false,
                      parser: [Circular *4],
                      maxHeadersCount: null,
                      reusedSocket: false,
                      host: 'accounts.spotify.com',
                      protocol: 'https:',
                      _redirectable: Writable {
                        _writableState: WritableState {
                          objectMode: false,
                          highWaterMark: 16384,
                          finalCalled: false,
                          needDrain: false,
                          ending: false,
                          ended: false,
                          finished: false,
                          destroyed: false,
                          decodeStrings: true,
                          defaultEncoding: 'utf8',
                          length: 0,
                          writing: false,
                          corked: 0,
                          sync: true,
                          bufferProcessing: false,
                          onwrite: [Function: bound onwrite],
                          writecb: null,
                          writelen: 0,
                          afterWriteTickInfo: null,
                          buffered: [],
                          bufferedIndex: 0,
                          allBuffers: true,
                          allNoop: true,
                          pendingcb: 0,
                          constructed: true,
                          prefinished: false,
                          errorEmitted: false,
                          emitClose: true,
                          autoDestroy: true,
                          errored: null,
                          closed: false,
                          closeEmitted: false,
                          [Symbol(kOnFinished)]: []
                        },
                        _events: [Object: null prototype] {
                          response: [Function: handleResponse],
                          error: [Function: handleRequestError],
                          socket: [Function: handleRequestSocket]
                        },
                        _eventsCount: 3,
                        _maxListeners: undefined,
                        _options: {
                          maxRedirects: 21,
                          maxBodyLength: Infinity,
                          protocol: 'https:',
                          path: '/api/token',
                          method: 'POST',
                          headers: [Object: null prototype] {
                            Accept: 'application/json, text/plain, */*',
                            'Content-Type': 'application/x-www-form-urlencoded',
                            'User-Agent': 'axios/1.6.8',
                            'Content-Length': '119',
                            'Accept-Encoding': 'gzip, compress, deflate, br'
                          },
                          agents: { http: undefined, https: undefined },
                          auth: undefined,
                          family: undefined,
                          beforeRedirect: [Function: dispatchBeforeRedirect],
                          beforeRedirects: { proxy: [Function: beforeRedirect] },
                          hostname: 'accounts.spotify.com',
                          port: '',
                          agent: undefined,
                          nativeProtocols: <ref *5> {
                            'http:': {
                              _connectionListener: [Function: connectionListener],
                              METHODS: [
                                'ACL',         'BIND',       'CHECKOUT',
                                'CONNECT',     'COPY',       'DELETE',
                                'GET',         'HEAD',       'LINK',
                                'LOCK',        'M-SEARCH',   'MERGE',
                                'MKACTIVITY',  'MKCALENDAR', 'MKCOL',
                                'MOVE',        'NOTIFY',     'OPTIONS',
                                'PATCH',       'POST',       'PROPFIND',
                                'PROPPATCH',   'PURGE',      'PUT',
                                'REBIND',      'REPORT',     'SEARCH',
                                'SOURCE',      'SUBSCRIBE',  'TRACE',
                                'UNBIND',      'UNLINK',     'UNLOCK',
                                'UNSUBSCRIBE'
                              ],
                              STATUS_CODES: {
                                '100': 'Continue',
                                '101': 'Switching Protocols',
                                '102': 'Processing',
                                '103': 'Early Hints',
                                '200': 'OK',
                                '201': 'Created',
                                '202': 'Accepted',
                                '203': 'Non-Authoritative Information',
                                '204': 'No Content',
                                '205': 'Reset Content',
                                '206': 'Partial Content',
                                '207': 'Multi-Status',
                                '208': 'Already Reported',
                                '226': 'IM Used',
                                '300': 'Multiple Choices',
                                '301': 'Moved Permanently',
                                '302': 'Found',
                                '303': 'See Other',
                                '304': 'Not Modified',
                                '305': 'Use Proxy',
                                '307': 'Temporary Redirect',
                                '308': 'Permanent Redirect',
                                '400': 'Bad Request',
                                '401': 'Unauthorized',
                                '402': 'Payment Required',
                                '403': 'Forbidden',
                                '404': 'Not Found',
                                '405': 'Method Not Allowed',
                                '406': 'Not Acceptable',
                                '407': 'Proxy Authentication Required',
                                '408': 'Request Timeout',
                                '409': 'Conflict',
                                '410': 'Gone',
                                '411': 'Length Required',
                                '412': 'Precondition Failed',
                                '413': 'Payload Too Large',
                                '414': 'URI Too Long',
                                '415': 'Unsupported Media Type',
                                '416': 'Range Not Satisfiable',
                                '417': 'Expectation Failed',
                                '418': "I'm a Teapot",
                                '421': 'Misdirected Request',
                                '422': 'Unprocessable Entity',
                                '423': 'Locked',
                                '424': 'Failed Dependency',
                                '425': 'Too Early',
                                '426': 'Upgrade Required',
                                '428': 'Precondition Required',
                                '429': 'Too Many Requests',
                                '431': 'Request Header Fields Too Large',
                                '451': 'Unavailable For Legal Reasons',
                                '500': 'Internal Server Error',
                                '501': 'Not Implemented',
                                '502': 'Bad Gateway',
                                '503': 'Service Unavailable',
                                '504': 'Gateway Timeout',
                                '505': 'HTTP Version Not Supported',
                                '506': 'Variant Also Negotiates',
                                '507': 'Insufficient Storage',
                                '508': 'Loop Detected',
                                '509': 'Bandwidth Limit Exceeded',
                                '510': 'Not Extended',
                                '511': 'Network Authentication Required'
                              },
                              Agent: [Function: Agent] {
                                defaultMaxSockets: Infinity
                              },
                              ClientRequest: [Function: ClientRequest],
                              IncomingMessage: [Function: IncomingMessage],
                              OutgoingMessage: [Function: OutgoingMessage],
                              Server: [Function: Server],
                              ServerResponse: [Function: ServerResponse],
                              createServer: [Function: createServer],
                              validateHeaderName: [Function: __node_internal_],
                              validateHeaderValue: [Function: __node_internal_],
                              get: [Function: get],
                              request: [Function: request],
                              setMaxIdleHTTPParsers: [Function: setMaxIdleHTTPParsers],
                              maxHeaderSize: [Getter],
                              globalAgent: [Getter/Setter]
                            },
                            'https:': {
                              Agent: [Function: Agent],
                              globalAgent: [Circular *3],
                              Server: [Function: Server],
                              createServer: [Function: createServer],
                              get: [Function: get],
                              request: [Function: request]
                            }
                          },
                          pathname: '/api/token'
                        },
                        _ended: false,
                        _ending: true,
                        _redirectCount: 0,
                        _redirects: [],
                        _requestBodyLength: 119,
                        _requestBodyBuffers: [
                          {
                            data: <Buffer 67 72 61 6e 74 5f 74 79 70 65 3d 63 6c 69 65 6e 74 5f 63 72 65 64 65 6e 74 69 61 6c 73 26 63 6c 69 65 6e 74 5f 69 64 3d 65 62 63 63 39 39 31 32 34 30 ... 69 more bytes>,
                            encoding: undefined
                          }
                        ],
                        _onNativeResponse: [Function (anonymous)],
                        _currentRequest: [Circular *6],
                        _currentUrl: 'https://accounts.spotify.com/api/token',
                        [Symbol(kCapture)]: false
                      },
                      [Symbol(kCapture)]: false,
                      [Symbol(kBytesWritten)]: 0,
                      [Symbol(kEndCalled)]: false,
                      [Symbol(kNeedDrain)]: false,
                      [Symbol(corked)]: 0,
                      [Symbol(kOutHeaders)]: [Object: null prototype] {
                        accept: [
                          'Accept',
                          'application/json, text/plain, */*'
                        ],
                        'content-type': [
                          'Content-Type',
                          'application/x-www-form-urlencoded'
                        ],
                        'user-agent': [ 'User-Agent', 'axios/1.6.8' ],
                        'content-length': [ 'Content-Length', '119' ],
                        'accept-encoding': [
                          'Accept-Encoding',
                          'gzip, compress, deflate, br'
                        ],
                        host: [ 'Host', 'accounts.spotify.com' ]
                      },
                      [Symbol(errored)]: null,
                      [Symbol(kUniqueHeaders)]: null
                    },
                    maxHeaderPairs: 2000,
                    _consumed: false,
                    onIncoming: [Function: parserOnIncomingClient],
                    joinDuplicateHeaders: undefined,
                    [Symbol(resource_symbol)]: HTTPClientAsyncResource {
                      type: 'HTTPINCOMINGMESSAGE',
                      req: <ref *6> ClientRequest {
                        _events: [Object: null prototype] {
                          response: [Function: bound onceWrapper] {
                            listener: [Function (anonymous)]
                          },
                          abort: [Function (anonymous)],
                          aborted: [Function (anonymous)],
                          connect: [Function (anonymous)],
                          error: [Function (anonymous)],
                          socket: [Function (anonymous)],
                          timeout: [Function (anonymous)]
                        },
                        _eventsCount: 7,
                        _maxListeners: undefined,
                        outputData: [],
                        outputSize: 0,
                        writable: true,
                        destroyed: false,
                        _last: true,
                        chunkedEncoding: false,
                        shouldKeepAlive: false,
                        maxRequestsOnConnectionReached: false,
                        _defaultKeepAlive: true,
                        useChunkedEncodingByDefault: true,
                        sendDate: false,
                        _removedConnection: false,
                        _removedContLen: false,
                        _removedTE: false,
                        strictContentLength: false,
                        _contentLength: '119',
                        _hasBody: true,
                        _trailer: '',
                        finished: false,
                        _headerSent: true,
                        _closed: false,
                        socket: [Circular *2],
                        _header: 'POST /api/token HTTP/1.1\r\n' +
                          'Accept: application/json, text/plain, */*\r\n' +
                          'Content-Type: application/x-www-form-urlencoded\r\n' +
                          'User-Agent: axios/1.6.8\r\n' +
                          'Content-Length: 119\r\n' +
                          'Accept-Encoding: gzip, compress, deflate, br\r\n' +
                          'Host: accounts.spotify.com\r\n' +
                          'Connection: close\r\n' +
                          '\r\n',
                        _keepAliveTimeout: 0,
                        _onPendingData: [Function: nop],
                        agent: [Circular *3],
                        socketPath: undefined,
                        method: 'POST',
                        maxHeaderSize: undefined,
                        insecureHTTPParser: undefined,
                        joinDuplicateHeaders: undefined,
                        path: '/api/token',
                        _ended: false,
                        res: null,
                        aborted: false,
                        timeoutCb: null,
                        upgradeOrConnect: false,
                        parser: [Circular *4],
                        maxHeadersCount: null,
                        reusedSocket: false,
                        host: 'accounts.spotify.com',
                        protocol: 'https:',
                        _redirectable: Writable {
                          _writableState: WritableState {
                            objectMode: false,
                            highWaterMark: 16384,
                            finalCalled: false,
                            needDrain: false,
                            ending: false,
                            ended: false,
                            finished: false,
                            destroyed: false,
                            decodeStrings: true,
                            defaultEncoding: 'utf8',
                            length: 0,
                            writing: false,
                            corked: 0,
                            sync: true,
                            bufferProcessing: false,
                            onwrite: [Function: bound onwrite],
                            writecb: null,
                            writelen: 0,
                            afterWriteTickInfo: null,
                            buffered: [],
                            bufferedIndex: 0,
                            allBuffers: true,
                            allNoop: true,
                            pendingcb: 0,
                            constructed: true,
                            prefinished: false,
                            errorEmitted: false,
                            emitClose: true,
                            autoDestroy: true,
                            errored: null,
                            closed: false,
                            closeEmitted: false,
                            [Symbol(kOnFinished)]: []
                          },
                          _events: [Object: null prototype] {
                            response: [Function: handleResponse],
                            error: [Function: handleRequestError],
                            socket: [Function: handleRequestSocket]
                          },
                          _eventsCount: 3,
                          _maxListeners: undefined,
                          _options: {
                            maxRedirects: 21,
                            maxBodyLength: Infinity,
                            protocol: 'https:',
                            path: '/api/token',
                            method: 'POST',
                            headers: [Object: null prototype] {
                              Accept: 'application/json, text/plain, */*',
                              'Content-Type': 'application/x-www-form-urlencoded',
                              'User-Agent': 'axios/1.6.8',
                              'Content-Length': '119',
                              'Accept-Encoding': 'gzip, compress, deflate, br'
                            },
                            agents: { http: undefined, https: undefined },
                            auth: undefined,
                            family: undefined,
                            beforeRedirect: [Function: dispatchBeforeRedirect],
                            beforeRedirects: { proxy: [Function: beforeRedirect] },
                            hostname: 'accounts.spotify.com',
                            port: '',
                            agent: undefined,
                            nativeProtocols: <ref *5> {
                              'http:': {
                                _connectionListener: [Function: connectionListener],
                                METHODS: [
                                  'ACL',         'BIND',       'CHECKOUT',
                                  'CONNECT',     'COPY',       'DELETE',
                                  'GET',         'HEAD',       'LINK',
                                  'LOCK',        'M-SEARCH',   'MERGE',
                                  'MKACTIVITY',  'MKCALENDAR', 'MKCOL',
                                  'MOVE',        'NOTIFY',     'OPTIONS',
                                  'PATCH',       'POST',       'PROPFIND',
                                  'PROPPATCH',   'PURGE',      'PUT',
                                  'REBIND',      'REPORT',     'SEARCH',
                                  'SOURCE',      'SUBSCRIBE',  'TRACE',
                                  'UNBIND',      'UNLINK',     'UNLOCK',
                                  'UNSUBSCRIBE'
                                ],
                                STATUS_CODES: {
                                  '100': 'Continue',
                                  '101': 'Switching Protocols',
                                  '102': 'Processing',
                                  '103': 'Early Hints',
                                  '200': 'OK',
                                  '201': 'Created',
                                  '202': 'Accepted',
                                  '203': 'Non-Authoritative Information',
                                  '204': 'No Content',
                                  '205': 'Reset Content',
                                  '206': 'Partial Content',
                                  '207': 'Multi-Status',
                                  '208': 'Already Reported',
                                  '226': 'IM Used',
                                  '300': 'Multiple Choices',
                                  '301': 'Moved Permanently',
                                  '302': 'Found',
                                  '303': 'See Other',
                                  '304': 'Not Modified',
                                  '305': 'Use Proxy',
                                  '307': 'Temporary Redirect',
                                  '308': 'Permanent Redirect',
                                  '400': 'Bad Request',
                                  '401': 'Unauthorized',
                                  '402': 'Payment Required',
                                  '403': 'Forbidden',
                                  '404': 'Not Found',
                                  '405': 'Method Not Allowed',
                                  '406': 'Not Acceptable',
                                  '407': 'Proxy Authentication Required',
                                  '408': 'Request Timeout',
                                  '409': 'Conflict',
                                  '410': 'Gone',
                                  '411': 'Length Required',
                                  '412': 'Precondition Failed',
                                  '413': 'Payload Too Large',
                                  '414': 'URI Too Long',
                                  '415': 'Unsupported Media Type',
                                  '416': 'Range Not Satisfiable',
                                  '417': 'Expectation Failed',
                                  '418': "I'm a Teapot",
                                  '421': 'Misdirected Request',
                                  '422': 'Unprocessable Entity',
                                  '423': 'Locked',
                                  '424': 'Failed Dependency',
                                  '425': 'Too Early',
                                  '426': 'Upgrade Required',
                                  '428': 'Precondition Required',
                                  '429': 'Too Many Requests',
                                  '431': 'Request Header Fields Too Large',
                                  '451': 'Unavailable For Legal Reasons',
                                  '500': 'Internal Server Error',
                                  '501': 'Not Implemented',
                                  '502': 'Bad Gateway',
                                  '503': 'Service Unavailable',
                                  '504': 'Gateway Timeout',
                                  '505': 'HTTP Version Not Supported',
                                  '506': 'Variant Also Negotiates',
                                  '507': 'Insufficient Storage',
                                  '508': 'Loop Detected',
                                  '509': 'Bandwidth Limit Exceeded',
                                  '510': 'Not Extended',
                                  '511': 'Network Authentication Required'
                                },
                                Agent: [Function: Agent] {
                                  defaultMaxSockets: Infinity
                                },
                                ClientRequest: [Function: ClientRequest],
                                IncomingMessage: [Function: IncomingMessage],
                                OutgoingMessage: [Function: OutgoingMessage],
                                Server: [Function: Server],
                                ServerResponse: [Function: ServerResponse],
                                createServer: [Function: createServer],
                                validateHeaderName: [Function: __node_internal_],
                                validateHeaderValue: [Function: __node_internal_],
                                get: [Function: get],
                                request: [Function: request],
                                setMaxIdleHTTPParsers: [Function: setMaxIdleHTTPParsers],
                                maxHeaderSize: [Getter],
                                globalAgent: [Getter/Setter]
                              },
                              'https:': {
                                Agent: [Function: Agent],
                                globalAgent: [Circular *3],
                                Server: [Function: Server],
                                createServer: [Function: createServer],
                                get: [Function: get],
                                request: [Function: request]
                              }
                            },
                            pathname: '/api/token'
                          },
                          _ended: false,
                          _ending: true,
                          _redirectCount: 0,
                          _redirects: [],
                          _requestBodyLength: 119,
                          _requestBodyBuffers: [
                            {
                              data: <Buffer 67 72 61 6e 74 5f 74 79 70 65 3d 63 6c 69 65 6e 74 5f 63 72 65 64 65 6e 74 69 61 6c 73 26 63 6c 69 65 6e 74 5f 69 64 3d 65 62 63 63 39 39 31 32 34 30 ... 69 more bytes>,
                              encoding: undefined
                            }
                          ],
                          _onNativeResponse: [Function (anonymous)],
                          _currentRequest: [Circular *6],
                          _currentUrl: 'https://accounts.spotify.com/api/token',
                          [Symbol(kCapture)]: false
                        },
                        [Symbol(kCapture)]: false,
                        [Symbol(kBytesWritten)]: 0,
                        [Symbol(kEndCalled)]: false,
                        [Symbol(kNeedDrain)]: false,
                        [Symbol(corked)]: 0,
                        [Symbol(kOutHeaders)]: [Object: null prototype] {
                          accept: [
                            'Accept',
                            'application/json, text/plain, */*'
                          ],
                          'content-type': [
                            'Content-Type',
                            'application/x-www-form-urlencoded'
                          ],
                          'user-agent': [ 'User-Agent', 'axios/1.6.8' ],
                          'content-length': [ 'Content-Length', '119' ],
                          'accept-encoding': [
                            'Accept-Encoding',
                            'gzip, compress, deflate, br'
                          ],
                          host: [ 'Host', 'accounts.spotify.com' ]
                        },
                        [Symbol(errored)]: null,
                        [Symbol(kUniqueHeaders)]: null
                      }
                    }
                  },
                  _httpMessage: <ref *6> ClientRequest {
                    _events: [Object: null prototype] {
                      response: [Function: bound onceWrapper] {
                        listener: [Function (anonymous)]
                      },
                      abort: [Function (anonymous)],
                      aborted: [Function (anonymous)],
                      connect: [Function (anonymous)],
                      error: [Function (anonymous)],
                      socket: [Function (anonymous)],
                      timeout: [Function (anonymous)]
                    },
                    _eventsCount: 7,
                    _maxListeners: undefined,
                    outputData: [],
                    outputSize: 0,
                    writable: true,
                    destroyed: false,
                    _last: true,
                    chunkedEncoding: false,
                    shouldKeepAlive: false,
                    maxRequestsOnConnectionReached: false,
                    _defaultKeepAlive: true,
                    useChunkedEncodingByDefault: true,
                    sendDate: false,
                    _removedConnection: false,
                    _removedContLen: false,
                    _removedTE: false,
                    strictContentLength: false,
                    _contentLength: '119',
                    _hasBody: true,
                    _trailer: '',
                    finished: false,
                    _headerSent: true,
                    _closed: false,
                    socket: [Circular *2],
                    _header: 'POST /api/token HTTP/1.1\r\n' +
                      'Accept: application/json, text/plain, */*\r\n' +
                      'Content-Type: application/x-www-form-urlencoded\r\n' +
                      'User-Agent: axios/1.6.8\r\n' +
                      'Content-Length: 119\r\n' +
                      'Accept-Encoding: gzip, compress, deflate, br\r\n' +
                      'Host: accounts.spotify.com\r\n' +
                      'Connection: close\r\n' +
                      '\r\n',
                    _keepAliveTimeout: 0,
                    _onPendingData: [Function: nop],
                    agent: [Circular *3],
                    socketPath: undefined,
                    method: 'POST',
                    maxHeaderSize: undefined,
                    insecureHTTPParser: undefined,
                    joinDuplicateHeaders: undefined,
                    path: '/api/token',
                    _ended: false,
                    res: null,
                    aborted: false,
                    timeoutCb: null,
                    upgradeOrConnect: false,
                    parser: <ref *4> HTTPParser {
                      '0': null,
                      '1': [Function: parserOnHeaders],
                      '2': [Function: parserOnHeadersComplete],
                      '3': [Function: parserOnBody],
                      '4': [Function: parserOnMessageComplete],
                      '5': null,
                      '6': null,
                      _headers: [],
                      _url: '',
                      socket: [Circular *2],
                      incoming: null,
                      outgoing: [Circular *6],
                      maxHeaderPairs: 2000,
                      _consumed: false,
                      onIncoming: [Function: parserOnIncomingClient],
                      joinDuplicateHeaders: undefined,
                      [Symbol(resource_symbol)]: HTTPClientAsyncResource {
                        type: 'HTTPINCOMINGMESSAGE',
                        req: [Circular *6]
                      }
                    },
                    maxHeadersCount: null,
                    reusedSocket: false,
                    host: 'accounts.spotify.com',
                    protocol: 'https:',
                    _redirectable: Writable {
                      _writableState: WritableState {
                        objectMode: false,
                        highWaterMark: 16384,
                        finalCalled: false,
                        needDrain: false,
                        ending: false,
                        ended: false,
                        finished: false,
                        destroyed: false,
                        decodeStrings: true,
                        defaultEncoding: 'utf8',
                        length: 0,
                        writing: false,
                        corked: 0,
                        sync: true,
                        bufferProcessing: false,
                        onwrite: [Function: bound onwrite],
                        writecb: null,
                        writelen: 0,
                        afterWriteTickInfo: null,
                        buffered: [],
                        bufferedIndex: 0,
                        allBuffers: true,
                        allNoop: true,
                        pendingcb: 0,
                        constructed: true,
                        prefinished: false,
                        errorEmitted: false,
                        emitClose: true,
                        autoDestroy: true,
                        errored: null,
                        closed: false,
                        closeEmitted: false,
                        [Symbol(kOnFinished)]: []
                      },
                      _events: [Object: null prototype] {
                        response: [Function: handleResponse],
                        error: [Function: handleRequestError],
                        socket: [Function: handleRequestSocket]
                      },
                      _eventsCount: 3,
                      _maxListeners: undefined,
                      _options: {
                        maxRedirects: 21,
                        maxBodyLength: Infinity,
                        protocol: 'https:',
                        path: '/api/token',
                        method: 'POST',
                        headers: [Object: null prototype] {
                          Accept: 'application/json, text/plain, */*',
                          'Content-Type': 'application/x-www-form-urlencoded',
                          'User-Agent': 'axios/1.6.8',
                          'Content-Length': '119',
                          'Accept-Encoding': 'gzip, compress, deflate, br'
                        },
                        agents: { http: undefined, https: undefined },
                        auth: undefined,
                        family: undefined,
                        beforeRedirect: [Function: dispatchBeforeRedirect],
                        beforeRedirects: { proxy: [Function: beforeRedirect] },
                        hostname: 'accounts.spotify.com',
                        port: '',
                        agent: undefined,
                        nativeProtocols: <ref *5> {
                          'http:': {
                            _connectionListener: [Function: connectionListener],
                            METHODS: [
                              'ACL',         'BIND',       'CHECKOUT',
                              'CONNECT',     'COPY',       'DELETE',
                              'GET',         'HEAD',       'LINK',
                              'LOCK',        'M-SEARCH',   'MERGE',
                              'MKACTIVITY',  'MKCALENDAR', 'MKCOL',
                              'MOVE',        'NOTIFY',     'OPTIONS',
                              'PATCH',       'POST',       'PROPFIND',
                              'PROPPATCH',   'PURGE',      'PUT',
                              'REBIND',      'REPORT',     'SEARCH',
                              'SOURCE',      'SUBSCRIBE',  'TRACE',
                              'UNBIND',      'UNLINK',     'UNLOCK',
                              'UNSUBSCRIBE'
                            ],
                            STATUS_CODES: {
                              '100': 'Continue',
                              '101': 'Switching Protocols',
                              '102': 'Processing',
                              '103': 'Early Hints',
                              '200': 'OK',
                              '201': 'Created',
                              '202': 'Accepted',
                              '203': 'Non-Authoritative Information',
                              '204': 'No Content',
                              '205': 'Reset Content',
                              '206': 'Partial Content',
                              '207': 'Multi-Status',
                              '208': 'Already Reported',
                              '226': 'IM Used',
                              '300': 'Multiple Choices',
                              '301': 'Moved Permanently',
                              '302': 'Found',
                              '303': 'See Other',
                              '304': 'Not Modified',
                              '305': 'Use Proxy',
                              '307': 'Temporary Redirect',
                              '308': 'Permanent Redirect',
                              '400': 'Bad Request',
                              '401': 'Unauthorized',
                              '402': 'Payment Required',
                              '403': 'Forbidden',
                              '404': 'Not Found',
                              '405': 'Method Not Allowed',
                              '406': 'Not Acceptable',
                              '407': 'Proxy Authentication Required',
                              '408': 'Request Timeout',
                              '409': 'Conflict',
                              '410': 'Gone',
                              '411': 'Length Required',
                              '412': 'Precondition Failed',
                              '413': 'Payload Too Large',
                              '414': 'URI Too Long',
                              '415': 'Unsupported Media Type',
                              '416': 'Range Not Satisfiable',
                              '417': 'Expectation Failed',
                              '418': "I'm a Teapot",
                              '421': 'Misdirected Request',
                              '422': 'Unprocessable Entity',
                              '423': 'Locked',
                              '424': 'Failed Dependency',
                              '425': 'Too Early',
                              '426': 'Upgrade Required',
                              '428': 'Precondition Required',
                              '429': 'Too Many Requests',
                              '431': 'Request Header Fields Too Large',
                              '451': 'Unavailable For Legal Reasons',
                              '500': 'Internal Server Error',
                              '501': 'Not Implemented',
                              '502': 'Bad Gateway',
                              '503': 'Service Unavailable',
                              '504': 'Gateway Timeout',
                              '505': 'HTTP Version Not Supported',
                              '506': 'Variant Also Negotiates',
                              '507': 'Insufficient Storage',
                              '508': 'Loop Detected',
                              '509': 'Bandwidth Limit Exceeded',
                              '510': 'Not Extended',
                              '511': 'Network Authentication Required'
                            },
                            Agent: [Function: Agent] {
                              defaultMaxSockets: Infinity
                            },
                            ClientRequest: [Function: ClientRequest],
                            IncomingMessage: [Function: IncomingMessage],
                            OutgoingMessage: [Function: OutgoingMessage],
                            Server: [Function: Server],
                            ServerResponse: [Function: ServerResponse],
                            createServer: [Function: createServer],
                            validateHeaderName: [Function: __node_internal_],
                            validateHeaderValue: [Function: __node_internal_],
                            get: [Function: get],
                            request: [Function: request],
                            setMaxIdleHTTPParsers: [Function: setMaxIdleHTTPParsers],
                            maxHeaderSize: [Getter],
                            globalAgent: [Getter/Setter]
                          },
                          'https:': {
                            Agent: [Function: Agent],
                            globalAgent: [Circular *3],
                            Server: [Function: Server],
                            createServer: [Function: createServer],
                            get: [Function: get],
                            request: [Function: request]
                          }
                        },
                        pathname: '/api/token'
                      },
                      _ended: false,
                      _ending: true,
                      _redirectCount: 0,
                      _redirects: [],
                      _requestBodyLength: 119,
                      _requestBodyBuffers: [
                        {
                          data: <Buffer 67 72 61 6e 74 5f 74 79 70 65 3d 63 6c 69 65 6e 74 5f 63 72 65 64 65 6e 74 69 61 6c 73 26 63 6c 69 65 6e 74 5f 69 64 3d 65 62 63 63 39 39 31 32 34 30 ... 69 more bytes>,
                          encoding: undefined
                        }
                      ],
                      _onNativeResponse: [Function (anonymous)],
                      _currentRequest: [Circular *6],
                      _currentUrl: 'https://accounts.spotify.com/api/token',
                      [Symbol(kCapture)]: false
                    },
                    [Symbol(kCapture)]: false,
                    [Symbol(kBytesWritten)]: 0,
                    [Symbol(kEndCalled)]: false,
                    [Symbol(kNeedDrain)]: false,
                    [Symbol(corked)]: 0,
                    [Symbol(kOutHeaders)]: [Object: null prototype] {
                      accept: [ 'Accept', 'application/json, text/plain, */*' ],
                      'content-type': [
                        'Content-Type',
                        'application/x-www-form-urlencoded'
                      ],
                      'user-agent': [ 'User-Agent', 'axios/1.6.8' ],
                      'content-length': [ 'Content-Length', '119' ],
                      'accept-encoding': [
                        'Accept-Encoding',
                        'gzip, compress, deflate, br'
                      ],
                      host: [ 'Host', 'accounts.spotify.com' ]
                    },
                    [Symbol(errored)]: null,
                    [Symbol(kUniqueHeaders)]: null
                  },
                  [Symbol(res)]: TLSWrap {
                    _parent: TCP {
                      reading: [Getter/Setter],
                      onconnection: null,
                      [Symbol(owner_symbol)]: [Circular *2]
                    },
                    _parentWrap: undefined,
                    _secureContext: SecureContext { context: SecureContext {} },
                    reading: false,
                    onkeylog: [Function: onkeylog],
                    onhandshakestart: {},
                    onhandshakedone: [Function (anonymous)],
                    onocspresponse: [Function: onocspresponse],
                    onnewsession: [Function: onnewsessionclient],
                    onerror: [Function: onerror],
                    [Symbol(owner_symbol)]: [Circular *2]
                  },
                  [Symbol(verified)]: false,
                  [Symbol(pendingSession)]: null,
                  [Symbol(async_id_symbol)]: 6,
                  [Symbol(kHandle)]: TLSWrap {
                    _parent: TCP {
                      reading: [Getter/Setter],
                      onconnection: null,
                      [Symbol(owner_symbol)]: [Circular *2]
                    },
                    _parentWrap: undefined,
                    _secureContext: SecureContext { context: SecureContext {} },
                    reading: false,
                    onkeylog: [Function: onkeylog],
                    onhandshakestart: {},
                    onhandshakedone: [Function (anonymous)],
                    onocspresponse: [Function: onocspresponse],
                    onnewsession: [Function: onnewsessionclient],
                    onerror: [Function: onerror],
                    [Symbol(owner_symbol)]: [Circular *2]
                  },
                  [Symbol(lastWriteQueueSize)]: 0,
                  [Symbol(timeout)]: null,
                  [Symbol(kBuffer)]: null,
                  [Symbol(kBufferCb)]: null,
                  [Symbol(kBufferGen)]: null,
                  [Symbol(kCapture)]: false,
                  [Symbol(kSetNoDelay)]: false,
                  [Symbol(kSetKeepAlive)]: true,
                  [Symbol(kSetKeepAliveInitialDelay)]: 60,
                  [Symbol(kBytesRead)]: 0,
                  [Symbol(kBytesWritten)]: 0,
                  [Symbol(connect-options)]: {
                    rejectUnauthorized: true,
                    ciphers: 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
                    checkServerIdentity: [Function: checkServerIdentity],
                    minDHSize: 1024,
                    maxRedirects: 21,
                    maxBodyLength: Infinity,
                    protocol: 'https:',
                    path: null,
                    method: 'POST',
                    headers: [Object: null prototype] {
                      Accept: 'application/json, text/plain, */*',
                      'Content-Type': 'application/x-www-form-urlencoded',
                      'User-Agent': 'axios/1.6.8',
                      'Content-Length': '119',
                      'Accept-Encoding': 'gzip, compress, deflate, br'
                    },
                    agents: { http: undefined, https: undefined },
                    auth: undefined,
                    family: undefined,
                    beforeRedirect: [Function: dispatchBeforeRedirect],
                    beforeRedirects: { proxy: [Function: beforeRedirect] },
                    hostname: 'accounts.spotify.com',
                    port: 443,
                    agent: undefined,
                    nativeProtocols: <ref *5> {
                      'http:': {
                        _connectionListener: [Function: connectionListener],
                        METHODS: [
                          'ACL',         'BIND',       'CHECKOUT',
                          'CONNECT',     'COPY',       'DELETE',
                          'GET',         'HEAD',       'LINK',
                          'LOCK',        'M-SEARCH',   'MERGE',
                          'MKACTIVITY',  'MKCALENDAR', 'MKCOL',
                          'MOVE',        'NOTIFY',     'OPTIONS',
                          'PATCH',       'POST',       'PROPFIND',
                          'PROPPATCH',   'PURGE',      'PUT',
                          'REBIND',      'REPORT',     'SEARCH',
                          'SOURCE',      'SUBSCRIBE',  'TRACE',
                          'UNBIND',      'UNLINK',     'UNLOCK',
                          'UNSUBSCRIBE'
                        ],
                        STATUS_CODES: {
                          '100': 'Continue',
                          '101': 'Switching Protocols',
                          '102': 'Processing',
                          '103': 'Early Hints',
                          '200': 'OK',
                          '201': 'Created',
                          '202': 'Accepted',
                          '203': 'Non-Authoritative Information',
                          '204': 'No Content',
                          '205': 'Reset Content',
                          '206': 'Partial Content',
                          '207': 'Multi-Status',
                          '208': 'Already Reported',
                          '226': 'IM Used',
                          '300': 'Multiple Choices',
                          '301': 'Moved Permanently',
                          '302': 'Found',
                          '303': 'See Other',
                          '304': 'Not Modified',
                          '305': 'Use Proxy',
                          '307': 'Temporary Redirect',
                          '308': 'Permanent Redirect',
                          '400': 'Bad Request',
                          '401': 'Unauthorized',
                          '402': 'Payment Required',
                          '403': 'Forbidden',
                          '404': 'Not Found',
                          '405': 'Method Not Allowed',
                          '406': 'Not Acceptable',
                          '407': 'Proxy Authentication Required',
                          '408': 'Request Timeout',
                          '409': 'Conflict',
                          '410': 'Gone',
                          '411': 'Length Required',
                          '412': 'Precondition Failed',
                          '413': 'Payload Too Large',
                          '414': 'URI Too Long',
                          '415': 'Unsupported Media Type',
                          '416': 'Range Not Satisfiable',
                          '417': 'Expectation Failed',
                          '418': "I'm a Teapot",
                          '421': 'Misdirected Request',
                          '422': 'Unprocessable Entity',
                          '423': 'Locked',
                          '424': 'Failed Dependency',
                          '425': 'Too Early',
                          '426': 'Upgrade Required',
                          '428': 'Precondition Required',
                          '429': 'Too Many Requests',
                          '431': 'Request Header Fields Too Large',
                          '451': 'Unavailable For Legal Reasons',
                          '500': 'Internal Server Error',
                          '501': 'Not Implemented',
                          '502': 'Bad Gateway',
                          '503': 'Service Unavailable',
                          '504': 'Gateway Timeout',
                          '505': 'HTTP Version Not Supported',
                          '506': 'Variant Also Negotiates',
                          '507': 'Insufficient Storage',
                          '508': 'Loop Detected',
                          '509': 'Bandwidth Limit Exceeded',
                          '510': 'Not Extended',
                          '511': 'Network Authentication Required'
                        },
                        Agent: [Function: Agent] {
                          defaultMaxSockets: Infinity
                        },
                        ClientRequest: [Function: ClientRequest],
                        IncomingMessage: [Function: IncomingMessage],
                        OutgoingMessage: [Function: OutgoingMessage],
                        Server: [Function: Server],
                        ServerResponse: [Function: ServerResponse],
                        createServer: [Function: createServer],
                        validateHeaderName: [Function: __node_internal_],
                        validateHeaderValue: [Function: __node_internal_],
                        get: [Function: get],
                        request: [Function: request],
                        setMaxIdleHTTPParsers: [Function: setMaxIdleHTTPParsers],
                        maxHeaderSize: [Getter],
                        globalAgent: [Getter/Setter]
                      },
                      'https:': {
                        Agent: [Function: Agent],
                        globalAgent: [Circular *3],
                        Server: [Function: Server],
                        createServer: [Function: createServer],
                        get: [Function: get],
                        request: [Function: request]
                      }
                    },
                    pathname: '/api/token',
                    _defaultAgent: [Circular *3],
                    host: 'accounts.spotify.com',
                    noDelay: true,
                    servername: 'accounts.spotify.com',
                    _agentKey: 'accounts.spotify.com:443:::::::::::::::::::::',
                    encoding: null,
                    singleUse: true
                  }
                }
              ]
            },
            freeSockets: [Object: null prototype] {},
            keepAliveMsecs: 1000,
            keepAlive: false,
            maxSockets: Infinity,
            maxFreeSockets: 256,
            scheduling: 'lifo',
            maxTotalSockets: Infinity,
            totalSocketCount: 1,
            maxCachedSessions: 100,
            _sessionCache: {
              map: {
                'www.wikidata.org:443:::::::::::::::::::::': <Buffer 30 82 08 7d 02 01 01 02 02 03 04 04 02 13 02 04 20 49 81 10 e3 ea 7d 84 9b e4 63 a1 f3 bf 02 aa db cd 63 84 bf 4f 51 15 cc 96 ff a3 1c ef 0f 60 a7 04 ... 2127 more bytes>
              },
              list: [ 'www.wikidata.org:443:::::::::::::::::::::' ]
            },
            [Symbol(kCapture)]: false
          },
          host: 'www.wikidata.org',
          noDelay: true,
          servername: 'www.wikidata.org',
          _agentKey: 'www.wikidata.org:443:::::::::::::::::::::',
          encoding: null,
          singleUse: true
        }
      },
      _header: 'POST /w/rest.php/oauth2/access_token HTTP/1.1\r\n' +
        'Accept: application/json, text/plain, */*\r\n' +
        'Content-Type: application/json\r\n' +
        'User-Agent: axios/1.6.8\r\n' +
        'Content-Length: 141\r\n' +
        'Accept-Encoding: gzip, compress, deflate, br\r\n' +
        'Host: www.wikidata.org\r\n' +
        'Connection: close\r\n' +
        '\r\n',
      _keepAliveTimeout: 0,
      _onPendingData: [Function: nop],
      agent: <ref *3> Agent {
        _events: [Object: null prototype] {
          free: [Function (anonymous)],
          newListener: [Function: maybeEnableKeylog]
        },
        _eventsCount: 2,
        _maxListeners: undefined,
        defaultPort: 443,
        protocol: 'https:',
        options: [Object: null prototype] { noDelay: true, path: null },
        requests: [Object: null prototype] {},
        sockets: [Object: null prototype] {
          'accounts.spotify.com:443:::::::::::::::::::::': [
            <ref *2> TLSSocket {
              _tlsOptions: {
                allowHalfOpen: undefined,
                pipe: false,
                secureContext: SecureContext { context: SecureContext {} },
                isServer: false,
                requestCert: true,
                rejectUnauthorized: true,
                session: undefined,
                ALPNProtocols: undefined,
                requestOCSP: undefined,
                enableTrace: undefined,
                pskCallback: undefined,
                highWaterMark: undefined,
                onread: undefined,
                signal: undefined
              },
              _secureEstablished: false,
              _securePending: false,
              _newSessionPending: false,
              _controlReleased: true,
              secureConnecting: true,
              _SNICallback: null,
              servername: null,
              alpnProtocol: null,
              authorized: false,
              authorizationError: null,
              encrypted: true,
              _events: [Object: null prototype] {
                close: [
                  [Function: onSocketCloseDestroySSL],
                  [Function: bound onceWrapper] {
                    listener: [Function (anonymous)]
                  },
                  [Function: onClose],
                  [Function: socketCloseListener],
                  [Function: bound onceWrapper] {
                    listener: [Function: onClose]
                  }
                ],
                end: [
                  [Function: onConnectEnd],
                  [Function: onReadableStreamEnd],
                  [Function: socketOnEnd]
                ],
                newListener: [Function: keylogNewListener],
                connect: [
                  [Function: bound onceWrapper] {
                    listener: [Function (anonymous)]
                  },
                  [Function: bound onceWrapper] {
                    listener: [Function (anonymous)]
                  },
                  [Function: bound onceWrapper] {
                    listener: [Function: connect]
                  }
                ],
                secure: [Function: onConnectSecure],
                session: [Function (anonymous)],
                free: [Function: onFree],
                timeout: [Function: onTimeout],
                agentRemove: [Function: onRemove],
                error: [Function: socketErrorListener],
                data: [Function: socketOnData],
                drain: [Function: ondrain]
              },
              _eventsCount: 12,
              connecting: true,
              _hadError: false,
              _parent: null,
              _host: 'accounts.spotify.com',
              _closeAfterHandlingError: false,
              _readableState: ReadableState {
                objectMode: false,
                highWaterMark: 16384,
                buffer: BufferList { head: null, tail: null, length: 0 },
                length: 0,
                pipes: [],
                flowing: true,
                ended: false,
                endEmitted: false,
                reading: true,
                constructed: true,
                sync: false,
                needReadable: true,
                emittedReadable: false,
                readableListening: false,
                resumeScheduled: false,
                errorEmitted: false,
                emitClose: false,
                autoDestroy: true,
                destroyed: false,
                errored: null,
                closed: false,
                closeEmitted: false,
                defaultEncoding: 'utf8',
                awaitDrainWriters: null,
                multiAwaitDrain: false,
                readingMore: false,
                dataEmitted: false,
                decoder: null,
                encoding: null,
                [Symbol(kPaused)]: false
              },
              _maxListeners: undefined,
              _writableState: WritableState {
                objectMode: false,
                highWaterMark: 16384,
                finalCalled: false,
                needDrain: false,
                ending: false,
                ended: false,
                finished: false,
                destroyed: false,
                decodeStrings: false,
                defaultEncoding: 'utf8',
                length: 378,
                writing: true,
                corked: 0,
                sync: false,
                bufferProcessing: false,
                onwrite: [Function: bound onwrite],
                writecb: [Function (anonymous)],
                writelen: 378,
                afterWriteTickInfo: null,
                buffered: [],
                bufferedIndex: 0,
                allBuffers: true,
                allNoop: true,
                pendingcb: 1,
                constructed: true,
                prefinished: false,
                errorEmitted: false,
                emitClose: false,
                autoDestroy: true,
                errored: null,
                closed: false,
                closeEmitted: false,
                [Symbol(kOnFinished)]: []
              },
              allowHalfOpen: false,
              _sockname: null,
              _pendingData: [
                {
                  chunk: 'POST /api/token HTTP/1.1\r\n' +
                    'Accept: application/json, text/plain, */*\r\n' +
                    'Content-Type: application/x-www-form-urlencoded\r\n' +
                    'User-Agent: axios/1.6.8\r\n' +
                    'Content-Length: 119\r\n' +
                    'Accept-Encoding: gzip, compress, deflate, br\r\n' +
                    'Host: accounts.spotify.com\r\n' +
                    'Connection: close\r\n' +
                    '\r\n',
                  encoding: 'latin1',
                  callback: [Function: nop]
                },
                {
                  chunk: <Buffer 67 72 61 6e 74 5f 74 79 70 65 3d 63 6c 69 65 6e 74 5f 63 72 65 64 65 6e 74 69 61 6c 73 26 63 6c 69 65 6e 74 5f 69 64 3d 65 62 63 63 39 39 31 32 34 30 ... 69 more bytes>,
                  encoding: 'buffer',
                  callback: [Function (anonymous)]
                },
                allBuffers: false
              ],
              _pendingEncoding: '',
              server: undefined,
              _server: null,
              ssl: TLSWrap {
                _parent: TCP {
                  reading: [Getter/Setter],
                  onconnection: null,
                  [Symbol(owner_symbol)]: [Circular *2]
                },
                _parentWrap: undefined,
                _secureContext: SecureContext { context: SecureContext {} },
                reading: false,
                onkeylog: [Function: onkeylog],
                onhandshakestart: {},
                onhandshakedone: [Function (anonymous)],
                onocspresponse: [Function: onocspresponse],
                onnewsession: [Function: onnewsessionclient],
                onerror: [Function: onerror],
                [Symbol(owner_symbol)]: [Circular *2]
              },
              _requestCert: true,
              _rejectUnauthorized: true,
              parser: <ref *4> HTTPParser {
                '0': null,
                '1': [Function: parserOnHeaders],
                '2': [Function: parserOnHeadersComplete],
                '3': [Function: parserOnBody],
                '4': [Function: parserOnMessageComplete],
                '5': null,
                '6': null,
                _headers: [],
                _url: '',
                socket: [Circular *2],
                incoming: null,
                outgoing: <ref *6> ClientRequest {
                  _events: [Object: null prototype] {
                    response: [Function: bound onceWrapper] {
                      listener: [Function (anonymous)]
                    },
                    abort: [Function (anonymous)],
                    aborted: [Function (anonymous)],
                    connect: [Function (anonymous)],
                    error: [Function (anonymous)],
                    socket: [Function (anonymous)],
                    timeout: [Function (anonymous)]
                  },
                  _eventsCount: 7,
                  _maxListeners: undefined,
                  outputData: [],
                  outputSize: 0,
                  writable: true,
                  destroyed: false,
                  _last: true,
                  chunkedEncoding: false,
                  shouldKeepAlive: false,
                  maxRequestsOnConnectionReached: false,
                  _defaultKeepAlive: true,
                  useChunkedEncodingByDefault: true,
                  sendDate: false,
                  _removedConnection: false,
                  _removedContLen: false,
                  _removedTE: false,
                  strictContentLength: false,
                  _contentLength: '119',
                  _hasBody: true,
                  _trailer: '',
                  finished: false,
                  _headerSent: true,
                  _closed: false,
                  socket: [Circular *2],
                  _header: 'POST /api/token HTTP/1.1\r\n' +
                    'Accept: application/json, text/plain, */*\r\n' +
                    'Content-Type: application/x-www-form-urlencoded\r\n' +
                    'User-Agent: axios/1.6.8\r\n' +
                    'Content-Length: 119\r\n' +
                    'Accept-Encoding: gzip, compress, deflate, br\r\n' +
                    'Host: accounts.spotify.com\r\n' +
                    'Connection: close\r\n' +
                    '\r\n',
                  _keepAliveTimeout: 0,
                  _onPendingData: [Function: nop],
                  agent: [Circular *3],
                  socketPath: undefined,
                  method: 'POST',
                  maxHeaderSize: undefined,
                  insecureHTTPParser: undefined,
                  joinDuplicateHeaders: undefined,
                  path: '/api/token',
                  _ended: false,
                  res: null,
                  aborted: false,
                  timeoutCb: null,
                  upgradeOrConnect: false,
                  parser: [Circular *4],
                  maxHeadersCount: null,
                  reusedSocket: false,
                  host: 'accounts.spotify.com',
                  protocol: 'https:',
                  _redirectable: Writable {
                    _writableState: WritableState {
                      objectMode: false,
                      highWaterMark: 16384,
                      finalCalled: false,
                      needDrain: false,
                      ending: false,
                      ended: false,
                      finished: false,
                      destroyed: false,
                      decodeStrings: true,
                      defaultEncoding: 'utf8',
                      length: 0,
                      writing: false,
                      corked: 0,
                      sync: true,
                      bufferProcessing: false,
                      onwrite: [Function: bound onwrite],
                      writecb: null,
                      writelen: 0,
                      afterWriteTickInfo: null,
                      buffered: [],
                      bufferedIndex: 0,
                      allBuffers: true,
                      allNoop: true,
                      pendingcb: 0,
                      constructed: true,
                      prefinished: false,
                      errorEmitted: false,
                      emitClose: true,
                      autoDestroy: true,
                      errored: null,
                      closed: false,
                      closeEmitted: false,
                      [Symbol(kOnFinished)]: []
                    },
                    _events: [Object: null prototype] {
                      response: [Function: handleResponse],
                      error: [Function: handleRequestError],
                      socket: [Function: handleRequestSocket]
                    },
                    _eventsCount: 3,
                    _maxListeners: undefined,
                    _options: {
                      maxRedirects: 21,
                      maxBodyLength: Infinity,
                      protocol: 'https:',
                      path: '/api/token',
                      method: 'POST',
                      headers: [Object: null prototype] {
                        Accept: 'application/json, text/plain, */*',
                        'Content-Type': 'application/x-www-form-urlencoded',
                        'User-Agent': 'axios/1.6.8',
                        'Content-Length': '119',
                        'Accept-Encoding': 'gzip, compress, deflate, br'
                      },
                      agents: { http: undefined, https: undefined },
                      auth: undefined,
                      family: undefined,
                      beforeRedirect: [Function: dispatchBeforeRedirect],
                      beforeRedirects: { proxy: [Function: beforeRedirect] },
                      hostname: 'accounts.spotify.com',
                      port: '',
                      agent: undefined,
                      nativeProtocols: <ref *5> {
                        'http:': {
                          _connectionListener: [Function: connectionListener],
                          METHODS: [
                            'ACL',         'BIND',       'CHECKOUT',
                            'CONNECT',     'COPY',       'DELETE',
                            'GET',         'HEAD',       'LINK',
                            'LOCK',        'M-SEARCH',   'MERGE',
                            'MKACTIVITY',  'MKCALENDAR', 'MKCOL',
                            'MOVE',        'NOTIFY',     'OPTIONS',
                            'PATCH',       'POST',       'PROPFIND',
                            'PROPPATCH',   'PURGE',      'PUT',
                            'REBIND',      'REPORT',     'SEARCH',
                            'SOURCE',      'SUBSCRIBE',  'TRACE',
                            'UNBIND',      'UNLINK',     'UNLOCK',
                            'UNSUBSCRIBE'
                          ],
                          STATUS_CODES: {
                            '100': 'Continue',
                            '101': 'Switching Protocols',
                            '102': 'Processing',
                            '103': 'Early Hints',
                            '200': 'OK',
                            '201': 'Created',
                            '202': 'Accepted',
                            '203': 'Non-Authoritative Information',
                            '204': 'No Content',
                            '205': 'Reset Content',
                            '206': 'Partial Content',
                            '207': 'Multi-Status',
                            '208': 'Already Reported',
                            '226': 'IM Used',
                            '300': 'Multiple Choices',
                            '301': 'Moved Permanently',
                            '302': 'Found',
                            '303': 'See Other',
                            '304': 'Not Modified',
                            '305': 'Use Proxy',
                            '307': 'Temporary Redirect',
                            '308': 'Permanent Redirect',
                            '400': 'Bad Request',
                            '401': 'Unauthorized',
                            '402': 'Payment Required',
                            '403': 'Forbidden',
                            '404': 'Not Found',
                            '405': 'Method Not Allowed',
                            '406': 'Not Acceptable',
                            '407': 'Proxy Authentication Required',
                            '408': 'Request Timeout',
                            '409': 'Conflict',
                            '410': 'Gone',
                            '411': 'Length Required',
                            '412': 'Precondition Failed',
                            '413': 'Payload Too Large',
                            '414': 'URI Too Long',
                            '415': 'Unsupported Media Type',
                            '416': 'Range Not Satisfiable',
                            '417': 'Expectation Failed',
                            '418': "I'm a Teapot",
                            '421': 'Misdirected Request',
                            '422': 'Unprocessable Entity',
                            '423': 'Locked',
                            '424': 'Failed Dependency',
                            '425': 'Too Early',
                            '426': 'Upgrade Required',
                            '428': 'Precondition Required',
                            '429': 'Too Many Requests',
                            '431': 'Request Header Fields Too Large',
                            '451': 'Unavailable For Legal Reasons',
                            '500': 'Internal Server Error',
                            '501': 'Not Implemented',
                            '502': 'Bad Gateway',
                            '503': 'Service Unavailable',
                            '504': 'Gateway Timeout',
                            '505': 'HTTP Version Not Supported',
                            '506': 'Variant Also Negotiates',
                            '507': 'Insufficient Storage',
                            '508': 'Loop Detected',
                            '509': 'Bandwidth Limit Exceeded',
                            '510': 'Not Extended',
                            '511': 'Network Authentication Required'
                          },
                          Agent: [Function: Agent] {
                            defaultMaxSockets: Infinity
                          },
                          ClientRequest: [Function: ClientRequest],
                          IncomingMessage: [Function: IncomingMessage],
                          OutgoingMessage: [Function: OutgoingMessage],
                          Server: [Function: Server],
                          ServerResponse: [Function: ServerResponse],
                          createServer: [Function: createServer],
                          validateHeaderName: [Function: __node_internal_],
                          validateHeaderValue: [Function: __node_internal_],
                          get: [Function: get],
                          request: [Function: request],
                          setMaxIdleHTTPParsers: [Function: setMaxIdleHTTPParsers],
                          maxHeaderSize: [Getter],
                          globalAgent: [Getter/Setter]
                        },
                        'https:': {
                          Agent: [Function: Agent],
                          globalAgent: [Circular *3],
                          Server: [Function: Server],
                          createServer: [Function: createServer],
                          get: [Function: get],
                          request: [Function: request]
                        }
                      },
                      pathname: '/api/token'
                    },
                    _ended: false,
                    _ending: true,
                    _redirectCount: 0,
                    _redirects: [],
                    _requestBodyLength: 119,
                    _requestBodyBuffers: [
                      {
                        data: <Buffer 67 72 61 6e 74 5f 74 79 70 65 3d 63 6c 69 65 6e 74 5f 63 72 65 64 65 6e 74 69 61 6c 73 26 63 6c 69 65 6e 74 5f 69 64 3d 65 62 63 63 39 39 31 32 34 30 ... 69 more bytes>,
                        encoding: undefined
                      }
                    ],
                    _onNativeResponse: [Function (anonymous)],
                    _currentRequest: [Circular *6],
                    _currentUrl: 'https://accounts.spotify.com/api/token',
                    [Symbol(kCapture)]: false
                  },
                  [Symbol(kCapture)]: false,
                  [Symbol(kBytesWritten)]: 0,
                  [Symbol(kEndCalled)]: false,
                  [Symbol(kNeedDrain)]: false,
                  [Symbol(corked)]: 0,
                  [Symbol(kOutHeaders)]: [Object: null prototype] {
                    accept: [ 'Accept', 'application/json, text/plain, */*' ],
                    'content-type': [
                      'Content-Type',
                      'application/x-www-form-urlencoded'
                    ],
                    'user-agent': [ 'User-Agent', 'axios/1.6.8' ],
                    'content-length': [ 'Content-Length', '119' ],
                    'accept-encoding': [
                      'Accept-Encoding',
                      'gzip, compress, deflate, br'
                    ],
                    host: [ 'Host', 'accounts.spotify.com' ]
                  },
                  [Symbol(errored)]: null,
                  [Symbol(kUniqueHeaders)]: null
                },
                maxHeaderPairs: 2000,
                _consumed: false,
                onIncoming: [Function: parserOnIncomingClient],
                joinDuplicateHeaders: undefined,
                [Symbol(resource_symbol)]: HTTPClientAsyncResource {
                  type: 'HTTPINCOMINGMESSAGE',
                  req: <ref *6> ClientRequest {
                    _events: [Object: null prototype] {
                      response: [Function: bound onceWrapper] {
                        listener: [Function (anonymous)]
                      },
                      abort: [Function (anonymous)],
                      aborted: [Function (anonymous)],
                      connect: [Function (anonymous)],
                      error: [Function (anonymous)],
                      socket: [Function (anonymous)],
                      timeout: [Function (anonymous)]
                    },
                    _eventsCount: 7,
                    _maxListeners: undefined,
                    outputData: [],
                    outputSize: 0,
                    writable: true,
                    destroyed: false,
                    _last: true,
                    chunkedEncoding: false,
                    shouldKeepAlive: false,
                    maxRequestsOnConnectionReached: false,
                    _defaultKeepAlive: true,
                    useChunkedEncodingByDefault: true,
                    sendDate: false,
                    _removedConnection: false,
                    _removedContLen: false,
                    _removedTE: false,
                    strictContentLength: false,
                    _contentLength: '119',
                    _hasBody: true,
                    _trailer: '',
                    finished: false,
                    _headerSent: true,
                    _closed: false,
                    socket: [Circular *2],
                    _header: 'POST /api/token HTTP/1.1\r\n' +
                      'Accept: application/json, text/plain, */*\r\n' +
                      'Content-Type: application/x-www-form-urlencoded\r\n' +
                      'User-Agent: axios/1.6.8\r\n' +
                      'Content-Length: 119\r\n' +
                      'Accept-Encoding: gzip, compress, deflate, br\r\n' +
                      'Host: accounts.spotify.com\r\n' +
                      'Connection: close\r\n' +
                      '\r\n',
                    _keepAliveTimeout: 0,
                    _onPendingData: [Function: nop],
                    agent: [Circular *3],
                    socketPath: undefined,
                    method: 'POST',
                    maxHeaderSize: undefined,
                    insecureHTTPParser: undefined,
                    joinDuplicateHeaders: undefined,
                    path: '/api/token',
                    _ended: false,
                    res: null,
                    aborted: false,
                    timeoutCb: null,
                    upgradeOrConnect: false,
                    parser: [Circular *4],
                    maxHeadersCount: null,
                    reusedSocket: false,
                    host: 'accounts.spotify.com',
                    protocol: 'https:',
                    _redirectable: Writable {
                      _writableState: WritableState {
                        objectMode: false,
                        highWaterMark: 16384,
                        finalCalled: false,
                        needDrain: false,
                        ending: false,
                        ended: false,
                        finished: false,
                        destroyed: false,
                        decodeStrings: true,
                        defaultEncoding: 'utf8',
                        length: 0,
                        writing: false,
                        corked: 0,
                        sync: true,
                        bufferProcessing: false,
                        onwrite: [Function: bound onwrite],
                        writecb: null,
                        writelen: 0,
                        afterWriteTickInfo: null,
                        buffered: [],
                        bufferedIndex: 0,
                        allBuffers: true,
                        allNoop: true,
                        pendingcb: 0,
                        constructed: true,
                        prefinished: false,
                        errorEmitted: false,
                        emitClose: true,
                        autoDestroy: true,
                        errored: null,
                        closed: false,
                        closeEmitted: false,
                        [Symbol(kOnFinished)]: []
                      },
                      _events: [Object: null prototype] {
                        response: [Function: handleResponse],
                        error: [Function: handleRequestError],
                        socket: [Function: handleRequestSocket]
                      },
                      _eventsCount: 3,
                      _maxListeners: undefined,
                      _options: {
                        maxRedirects: 21,
                        maxBodyLength: Infinity,
                        protocol: 'https:',
                        path: '/api/token',
                        method: 'POST',
                        headers: [Object: null prototype] {
                          Accept: 'application/json, text/plain, */*',
                          'Content-Type': 'application/x-www-form-urlencoded',
                          'User-Agent': 'axios/1.6.8',
                          'Content-Length': '119',
                          'Accept-Encoding': 'gzip, compress, deflate, br'
                        },
                        agents: { http: undefined, https: undefined },
                        auth: undefined,
                        family: undefined,
                        beforeRedirect: [Function: dispatchBeforeRedirect],
                        beforeRedirects: { proxy: [Function: beforeRedirect] },
                        hostname: 'accounts.spotify.com',
                        port: '',
                        agent: undefined,
                        nativeProtocols: <ref *5> {
                          'http:': {
                            _connectionListener: [Function: connectionListener],
                            METHODS: [
                              'ACL',         'BIND',       'CHECKOUT',
                              'CONNECT',     'COPY',       'DELETE',
                              'GET',         'HEAD',       'LINK',
                              'LOCK',        'M-SEARCH',   'MERGE',
                              'MKACTIVITY',  'MKCALENDAR', 'MKCOL',
                              'MOVE',        'NOTIFY',     'OPTIONS',
                              'PATCH',       'POST',       'PROPFIND',
                              'PROPPATCH',   'PURGE',      'PUT',
                              'REBIND',      'REPORT',     'SEARCH',
                              'SOURCE',      'SUBSCRIBE',  'TRACE',
                              'UNBIND',      'UNLINK',     'UNLOCK',
                              'UNSUBSCRIBE'
                            ],
                            STATUS_CODES: {
                              '100': 'Continue',
                              '101': 'Switching Protocols',
                              '102': 'Processing',
                              '103': 'Early Hints',
                              '200': 'OK',
                              '201': 'Created',
                              '202': 'Accepted',
                              '203': 'Non-Authoritative Information',
                              '204': 'No Content',
                              '205': 'Reset Content',
                              '206': 'Partial Content',
                              '207': 'Multi-Status',
                              '208': 'Already Reported',
                              '226': 'IM Used',
                              '300': 'Multiple Choices',
                              '301': 'Moved Permanently',
                              '302': 'Found',
                              '303': 'See Other',
                              '304': 'Not Modified',
                              '305': 'Use Proxy',
                              '307': 'Temporary Redirect',
                              '308': 'Permanent Redirect',
                              '400': 'Bad Request',
                              '401': 'Unauthorized',
                              '402': 'Payment Required',
                              '403': 'Forbidden',
                              '404': 'Not Found',
                              '405': 'Method Not Allowed',
                              '406': 'Not Acceptable',
                              '407': 'Proxy Authentication Required',
                              '408': 'Request Timeout',
                              '409': 'Conflict',
                              '410': 'Gone',
                              '411': 'Length Required',
                              '412': 'Precondition Failed',
                              '413': 'Payload Too Large',
                              '414': 'URI Too Long',
                              '415': 'Unsupported Media Type',
                              '416': 'Range Not Satisfiable',
                              '417': 'Expectation Failed',
                              '418': "I'm a Teapot",
                              '421': 'Misdirected Request',
                              '422': 'Unprocessable Entity',
                              '423': 'Locked',
                              '424': 'Failed Dependency',
                              '425': 'Too Early',
                              '426': 'Upgrade Required',
                              '428': 'Precondition Required',
                              '429': 'Too Many Requests',
                              '431': 'Request Header Fields Too Large',
                              '451': 'Unavailable For Legal Reasons',
                              '500': 'Internal Server Error',
                              '501': 'Not Implemented',
                              '502': 'Bad Gateway',
                              '503': 'Service Unavailable',
                              '504': 'Gateway Timeout',
                              '505': 'HTTP Version Not Supported',
                              '506': 'Variant Also Negotiates',
                              '507': 'Insufficient Storage',
                              '508': 'Loop Detected',
                              '509': 'Bandwidth Limit Exceeded',
                              '510': 'Not Extended',
                              '511': 'Network Authentication Required'
                            },
                            Agent: [Function: Agent] {
                              defaultMaxSockets: Infinity
                            },
                            ClientRequest: [Function: ClientRequest],
                            IncomingMessage: [Function: IncomingMessage],
                            OutgoingMessage: [Function: OutgoingMessage],
                            Server: [Function: Server],
                            ServerResponse: [Function: ServerResponse],
                            createServer: [Function: createServer],
                            validateHeaderName: [Function: __node_internal_],
                            validateHeaderValue: [Function: __node_internal_],
                            get: [Function: get],
                            request: [Function: request],
                            setMaxIdleHTTPParsers: [Function: setMaxIdleHTTPParsers],
                            maxHeaderSize: [Getter],
                            globalAgent: [Getter/Setter]
                          },
                          'https:': {
                            Agent: [Function: Agent],
                            globalAgent: [Circular *3],
                            Server: [Function: Server],
                            createServer: [Function: createServer],
                            get: [Function: get],
                            request: [Function: request]
                          }
                        },
                        pathname: '/api/token'
                      },
                      _ended: false,
                      _ending: true,
                      _redirectCount: 0,
                      _redirects: [],
                      _requestBodyLength: 119,
                      _requestBodyBuffers: [
                        {
                          data: <Buffer 67 72 61 6e 74 5f 74 79 70 65 3d 63 6c 69 65 6e 74 5f 63 72 65 64 65 6e 74 69 61 6c 73 26 63 6c 69 65 6e 74 5f 69 64 3d 65 62 63 63 39 39 31 32 34 30 ... 69 more bytes>,
                          encoding: undefined
                        }
                      ],
                      _onNativeResponse: [Function (anonymous)],
                      _currentRequest: [Circular *6],
                      _currentUrl: 'https://accounts.spotify.com/api/token',
                      [Symbol(kCapture)]: false
                    },
                    [Symbol(kCapture)]: false,
                    [Symbol(kBytesWritten)]: 0,
                    [Symbol(kEndCalled)]: false,
                    [Symbol(kNeedDrain)]: false,
                    [Symbol(corked)]: 0,
                    [Symbol(kOutHeaders)]: [Object: null prototype] {
                      accept: [ 'Accept', 'application/json, text/plain, */*' ],
                      'content-type': [
                        'Content-Type',
                        'application/x-www-form-urlencoded'
                      ],
                      'user-agent': [ 'User-Agent', 'axios/1.6.8' ],
                      'content-length': [ 'Content-Length', '119' ],
                      'accept-encoding': [
                        'Accept-Encoding',
                        'gzip, compress, deflate, br'
                      ],
                      host: [ 'Host', 'accounts.spotify.com' ]
                    },
                    [Symbol(errored)]: null,
                    [Symbol(kUniqueHeaders)]: null
                  }
                }
              },
              _httpMessage: <ref *6> ClientRequest {
                _events: [Object: null prototype] {
                  response: [Function: bound onceWrapper] {
                    listener: [Function (anonymous)]
                  },
                  abort: [Function (anonymous)],
                  aborted: [Function (anonymous)],
                  connect: [Function (anonymous)],
                  error: [Function (anonymous)],
                  socket: [Function (anonymous)],
                  timeout: [Function (anonymous)]
                },
                _eventsCount: 7,
                _maxListeners: undefined,
                outputData: [],
                outputSize: 0,
                writable: true,
                destroyed: false,
                _last: true,
                chunkedEncoding: false,
                shouldKeepAlive: false,
                maxRequestsOnConnectionReached: false,
                _defaultKeepAlive: true,
                useChunkedEncodingByDefault: true,
                sendDate: false,
                _removedConnection: false,
                _removedContLen: false,
                _removedTE: false,
                strictContentLength: false,
                _contentLength: '119',
                _hasBody: true,
                _trailer: '',
                finished: false,
                _headerSent: true,
                _closed: false,
                socket: [Circular *2],
                _header: 'POST /api/token HTTP/1.1\r\n' +
                  'Accept: application/json, text/plain, */*\r\n' +
                  'Content-Type: application/x-www-form-urlencoded\r\n' +
                  'User-Agent: axios/1.6.8\r\n' +
                  'Content-Length: 119\r\n' +
                  'Accept-Encoding: gzip, compress, deflate, br\r\n' +
                  'Host: accounts.spotify.com\r\n' +
                  'Connection: close\r\n' +
                  '\r\n',
                _keepAliveTimeout: 0,
                _onPendingData: [Function: nop],
                agent: [Circular *3],
                socketPath: undefined,
                method: 'POST',
                maxHeaderSize: undefined,
                insecureHTTPParser: undefined,
                joinDuplicateHeaders: undefined,
                path: '/api/token',
                _ended: false,
                res: null,
                aborted: false,
                timeoutCb: null,
                upgradeOrConnect: false,
                parser: <ref *4> HTTPParser {
                  '0': null,
                  '1': [Function: parserOnHeaders],
                  '2': [Function: parserOnHeadersComplete],
                  '3': [Function: parserOnBody],
                  '4': [Function: parserOnMessageComplete],
                  '5': null,
                  '6': null,
                  _headers: [],
                  _url: '',
                  socket: [Circular *2],
                  incoming: null,
                  outgoing: [Circular *6],
                  maxHeaderPairs: 2000,
                  _consumed: false,
                  onIncoming: [Function: parserOnIncomingClient],
                  joinDuplicateHeaders: undefined,
                  [Symbol(resource_symbol)]: HTTPClientAsyncResource {
                    type: 'HTTPINCOMINGMESSAGE',
                    req: [Circular *6]
                  }
                },
                maxHeadersCount: null,
                reusedSocket: false,
                host: 'accounts.spotify.com',
                protocol: 'https:',
                _redirectable: Writable {
                  _writableState: WritableState {
                    objectMode: false,
                    highWaterMark: 16384,
                    finalCalled: false,
                    needDrain: false,
                    ending: false,
                    ended: false,
                    finished: false,
                    destroyed: false,
                    decodeStrings: true,
                    defaultEncoding: 'utf8',
                    length: 0,
                    writing: false,
                    corked: 0,
                    sync: true,
                    bufferProcessing: false,
                    onwrite: [Function: bound onwrite],
                    writecb: null,
                    writelen: 0,
                    afterWriteTickInfo: null,
                    buffered: [],
                    bufferedIndex: 0,
                    allBuffers: true,
                    allNoop: true,
                    pendingcb: 0,
                    constructed: true,
                    prefinished: false,
                    errorEmitted: false,
                    emitClose: true,
                    autoDestroy: true,
                    errored: null,
                    closed: false,
                    closeEmitted: false,
                    [Symbol(kOnFinished)]: []
                  },
                  _events: [Object: null prototype] {
                    response: [Function: handleResponse],
                    error: [Function: handleRequestError],
                    socket: [Function: handleRequestSocket]
                  },
                  _eventsCount: 3,
                  _maxListeners: undefined,
                  _options: {
                    maxRedirects: 21,
                    maxBodyLength: Infinity,
                    protocol: 'https:',
                    path: '/api/token',
                    method: 'POST',
                    headers: [Object: null prototype] {
                      Accept: 'application/json, text/plain, */*',
                      'Content-Type': 'application/x-www-form-urlencoded',
                      'User-Agent': 'axios/1.6.8',
                      'Content-Length': '119',
                      'Accept-Encoding': 'gzip, compress, deflate, br'
                    },
                    agents: { http: undefined, https: undefined },
                    auth: undefined,
                    family: undefined,
                    beforeRedirect: [Function: dispatchBeforeRedirect],
                    beforeRedirects: { proxy: [Function: beforeRedirect] },
                    hostname: 'accounts.spotify.com',
                    port: '',
                    agent: undefined,
                    nativeProtocols: <ref *5> {
                      'http:': {
                        _connectionListener: [Function: connectionListener],
                        METHODS: [
                          'ACL',         'BIND',       'CHECKOUT',
                          'CONNECT',     'COPY',       'DELETE',
                          'GET',         'HEAD',       'LINK',
                          'LOCK',        'M-SEARCH',   'MERGE',
                          'MKACTIVITY',  'MKCALENDAR', 'MKCOL',
                          'MOVE',        'NOTIFY',     'OPTIONS',
                          'PATCH',       'POST',       'PROPFIND',
                          'PROPPATCH',   'PURGE',      'PUT',
                          'REBIND',      'REPORT',     'SEARCH',
                          'SOURCE',      'SUBSCRIBE',  'TRACE',
                          'UNBIND',      'UNLINK',     'UNLOCK',
                          'UNSUBSCRIBE'
                        ],
                        STATUS_CODES: {
                          '100': 'Continue',
                          '101': 'Switching Protocols',
                          '102': 'Processing',
                          '103': 'Early Hints',
                          '200': 'OK',
                          '201': 'Created',
                          '202': 'Accepted',
                          '203': 'Non-Authoritative Information',
                          '204': 'No Content',
                          '205': 'Reset Content',
                          '206': 'Partial Content',
                          '207': 'Multi-Status',
                          '208': 'Already Reported',
                          '226': 'IM Used',
                          '300': 'Multiple Choices',
                          '301': 'Moved Permanently',
                          '302': 'Found',
                          '303': 'See Other',
                          '304': 'Not Modified',
                          '305': 'Use Proxy',
                          '307': 'Temporary Redirect',
                          '308': 'Permanent Redirect',
                          '400': 'Bad Request',
                          '401': 'Unauthorized',
                          '402': 'Payment Required',
                          '403': 'Forbidden',
                          '404': 'Not Found',
                          '405': 'Method Not Allowed',
                          '406': 'Not Acceptable',
                          '407': 'Proxy Authentication Required',
                          '408': 'Request Timeout',
                          '409': 'Conflict',
                          '410': 'Gone',
                          '411': 'Length Required',
                          '412': 'Precondition Failed',
                          '413': 'Payload Too Large',
                          '414': 'URI Too Long',
                          '415': 'Unsupported Media Type',
                          '416': 'Range Not Satisfiable',
                          '417': 'Expectation Failed',
                          '418': "I'm a Teapot",
                          '421': 'Misdirected Request',
                          '422': 'Unprocessable Entity',
                          '423': 'Locked',
                          '424': 'Failed Dependency',
                          '425': 'Too Early',
                          '426': 'Upgrade Required',
                          '428': 'Precondition Required',
                          '429': 'Too Many Requests',
                          '431': 'Request Header Fields Too Large',
                          '451': 'Unavailable For Legal Reasons',
                          '500': 'Internal Server Error',
                          '501': 'Not Implemented',
                          '502': 'Bad Gateway',
                          '503': 'Service Unavailable',
                          '504': 'Gateway Timeout',
                          '505': 'HTTP Version Not Supported',
                          '506': 'Variant Also Negotiates',
                          '507': 'Insufficient Storage',
                          '508': 'Loop Detected',
                          '509': 'Bandwidth Limit Exceeded',
                          '510': 'Not Extended',
                          '511': 'Network Authentication Required'
                        },
                        Agent: [Function: Agent] {
                          defaultMaxSockets: Infinity
                        },
                        ClientRequest: [Function: ClientRequest],
                        IncomingMessage: [Function: IncomingMessage],
                        OutgoingMessage: [Function: OutgoingMessage],
                        Server: [Function: Server],
                        ServerResponse: [Function: ServerResponse],
                        createServer: [Function: createServer],
                        validateHeaderName: [Function: __node_internal_],
                        validateHeaderValue: [Function: __node_internal_],
                        get: [Function: get],
                        request: [Function: request],
                        setMaxIdleHTTPParsers: [Function: setMaxIdleHTTPParsers],
                        maxHeaderSize: [Getter],
                        globalAgent: [Getter/Setter]
                      },
                      'https:': {
                        Agent: [Function: Agent],
                        globalAgent: [Circular *3],
                        Server: [Function: Server],
                        createServer: [Function: createServer],
                        get: [Function: get],
                        request: [Function: request]
                      }
                    },
                    pathname: '/api/token'
                  },
                  _ended: false,
                  _ending: true,
                  _redirectCount: 0,
                  _redirects: [],
                  _requestBodyLength: 119,
                  _requestBodyBuffers: [
                    {
                      data: <Buffer 67 72 61 6e 74 5f 74 79 70 65 3d 63 6c 69 65 6e 74 5f 63 72 65 64 65 6e 74 69 61 6c 73 26 63 6c 69 65 6e 74 5f 69 64 3d 65 62 63 63 39 39 31 32 34 30 ... 69 more bytes>,
                      encoding: undefined
                    }
                  ],
                  _onNativeResponse: [Function (anonymous)],
                  _currentRequest: [Circular *6],
                  _currentUrl: 'https://accounts.spotify.com/api/token',
                  [Symbol(kCapture)]: false
                },
                [Symbol(kCapture)]: false,
                [Symbol(kBytesWritten)]: 0,
                [Symbol(kEndCalled)]: false,
                [Symbol(kNeedDrain)]: false,
                [Symbol(corked)]: 0,
                [Symbol(kOutHeaders)]: [Object: null prototype] {
                  accept: [ 'Accept', 'application/json, text/plain, */*' ],
                  'content-type': [
                    'Content-Type',
                    'application/x-www-form-urlencoded'
                  ],
                  'user-agent': [ 'User-Agent', 'axios/1.6.8' ],
                  'content-length': [ 'Content-Length', '119' ],
                  'accept-encoding': [ 'Accept-Encoding', 'gzip, compress, deflate, br' ],
                  host: [ 'Host', 'accounts.spotify.com' ]
                },
                [Symbol(errored)]: null,
                [Symbol(kUniqueHeaders)]: null
              },
              [Symbol(res)]: TLSWrap {
                _parent: TCP {
                  reading: [Getter/Setter],
                  onconnection: null,
                  [Symbol(owner_symbol)]: [Circular *2]
                },
                _parentWrap: undefined,
                _secureContext: SecureContext { context: SecureContext {} },
                reading: false,
                onkeylog: [Function: onkeylog],
                onhandshakestart: {},
                onhandshakedone: [Function (anonymous)],
                onocspresponse: [Function: onocspresponse],
                onnewsession: [Function: onnewsessionclient],
                onerror: [Function: onerror],
                [Symbol(owner_symbol)]: [Circular *2]
              },
              [Symbol(verified)]: false,
              [Symbol(pendingSession)]: null,
              [Symbol(async_id_symbol)]: 6,
              [Symbol(kHandle)]: TLSWrap {
                _parent: TCP {
                  reading: [Getter/Setter],
                  onconnection: null,
                  [Symbol(owner_symbol)]: [Circular *2]
                },
                _parentWrap: undefined,
                _secureContext: SecureContext { context: SecureContext {} },
                reading: false,
                onkeylog: [Function: onkeylog],
                onhandshakestart: {},
                onhandshakedone: [Function (anonymous)],
                onocspresponse: [Function: onocspresponse],
                onnewsession: [Function: onnewsessionclient],
                onerror: [Function: onerror],
                [Symbol(owner_symbol)]: [Circular *2]
              },
              [Symbol(lastWriteQueueSize)]: 0,
              [Symbol(timeout)]: null,
              [Symbol(kBuffer)]: null,
              [Symbol(kBufferCb)]: null,
              [Symbol(kBufferGen)]: null,
              [Symbol(kCapture)]: false,
              [Symbol(kSetNoDelay)]: false,
              [Symbol(kSetKeepAlive)]: true,
              [Symbol(kSetKeepAliveInitialDelay)]: 60,
              [Symbol(kBytesRead)]: 0,
              [Symbol(kBytesWritten)]: 0,
              [Symbol(connect-options)]: {
                rejectUnauthorized: true,
                ciphers: 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
                checkServerIdentity: [Function: checkServerIdentity],
                minDHSize: 1024,
                maxRedirects: 21,
                maxBodyLength: Infinity,
                protocol: 'https:',
                path: null,
                method: 'POST',
                headers: [Object: null prototype] {
                  Accept: 'application/json, text/plain, */*',
                  'Content-Type': 'application/x-www-form-urlencoded',
                  'User-Agent': 'axios/1.6.8',
                  'Content-Length': '119',
                  'Accept-Encoding': 'gzip, compress, deflate, br'
                },
                agents: { http: undefined, https: undefined },
                auth: undefined,
                family: undefined,
                beforeRedirect: [Function: dispatchBeforeRedirect],
                beforeRedirects: { proxy: [Function: beforeRedirect] },
                hostname: 'accounts.spotify.com',
                port: 443,
                agent: undefined,
                nativeProtocols: <ref *5> {
                  'http:': {
                    _connectionListener: [Function: connectionListener],
                    METHODS: [
                      'ACL',         'BIND',       'CHECKOUT',
                      'CONNECT',     'COPY',       'DELETE',
                      'GET',         'HEAD',       'LINK',
                      'LOCK',        'M-SEARCH',   'MERGE',
                      'MKACTIVITY',  'MKCALENDAR', 'MKCOL',
                      'MOVE',        'NOTIFY',     'OPTIONS',
                      'PATCH',       'POST',       'PROPFIND',
                      'PROPPATCH',   'PURGE',      'PUT',
                      'REBIND',      'REPORT',     'SEARCH',
                      'SOURCE',      'SUBSCRIBE',  'TRACE',
                      'UNBIND',      'UNLINK',     'UNLOCK',
                      'UNSUBSCRIBE'
                    ],
                    STATUS_CODES: {
                      '100': 'Continue',
                      '101': 'Switching Protocols',
                      '102': 'Processing',
                      '103': 'Early Hints',
                      '200': 'OK',
                      '201': 'Created',
                      '202': 'Accepted',
                      '203': 'Non-Authoritative Information',
                      '204': 'No Content',
                      '205': 'Reset Content',
                      '206': 'Partial Content',
                      '207': 'Multi-Status',
                      '208': 'Already Reported',
                      '226': 'IM Used',
                      '300': 'Multiple Choices',
                      '301': 'Moved Permanently',
                      '302': 'Found',
                      '303': 'See Other',
                      '304': 'Not Modified',
                      '305': 'Use Proxy',
                      '307': 'Temporary Redirect',
                      '308': 'Permanent Redirect',
                      '400': 'Bad Request',
                      '401': 'Unauthorized',
                      '402': 'Payment Required',
                      '403': 'Forbidden',
                      '404': 'Not Found',
                      '405': 'Method Not Allowed',
                      '406': 'Not Acceptable',
                      '407': 'Proxy Authentication Required',
                      '408': 'Request Timeout',
                      '409': 'Conflict',
                      '410': 'Gone',
                      '411': 'Length Required',
                      '412': 'Precondition Failed',
                      '413': 'Payload Too Large',
                      '414': 'URI Too Long',
                      '415': 'Unsupported Media Type',
                      '416': 'Range Not Satisfiable',
                      '417': 'Expectation Failed',
                      '418': "I'm a Teapot",
                      '421': 'Misdirected Request',
                      '422': 'Unprocessable Entity',
                      '423': 'Locked',
                      '424': 'Failed Dependency',
                      '425': 'Too Early',
                      '426': 'Upgrade Required',
                      '428': 'Precondition Required',
                      '429': 'Too Many Requests',
                      '431': 'Request Header Fields Too Large',
                      '451': 'Unavailable For Legal Reasons',
                      '500': 'Internal Server Error',
                      '501': 'Not Implemented',
                      '502': 'Bad Gateway',
                      '503': 'Service Unavailable',
                      '504': 'Gateway Timeout',
                      '505': 'HTTP Version Not Supported',
                      '506': 'Variant Also Negotiates',
                      '507': 'Insufficient Storage',
                      '508': 'Loop Detected',
                      '509': 'Bandwidth Limit Exceeded',
                      '510': 'Not Extended',
                      '511': 'Network Authentication Required'
                    },
                    Agent: [Function: Agent] { defaultMaxSockets: Infinity },
                    ClientRequest: [Function: ClientRequest],
                    IncomingMessage: [Function: IncomingMessage],
                    OutgoingMessage: [Function: OutgoingMessage],
                    Server: [Function: Server],
                    ServerResponse: [Function: ServerResponse],
                    createServer: [Function: createServer],
                    validateHeaderName: [Function: __node_internal_],
                    validateHeaderValue: [Function: __node_internal_],
                    get: [Function: get],
                    request: [Function: request],
                    setMaxIdleHTTPParsers: [Function: setMaxIdleHTTPParsers],
                    maxHeaderSize: [Getter],
                    globalAgent: [Getter/Setter]
                  },
                  'https:': {
                    Agent: [Function: Agent],
                    globalAgent: [Circular *3],
                    Server: [Function: Server],
                    createServer: [Function: createServer],
                    get: [Function: get],
                    request: [Function: request]
                  }
                },
                pathname: '/api/token',
                _defaultAgent: [Circular *3],
                host: 'accounts.spotify.com',
                noDelay: true,
                servername: 'accounts.spotify.com',
                _agentKey: 'accounts.spotify.com:443:::::::::::::::::::::',
                encoding: null,
                singleUse: true
              }
            }
          ]
        },
        freeSockets: [Object: null prototype] {},
        keepAliveMsecs: 1000,
        keepAlive: false,
        maxSockets: Infinity,
        maxFreeSockets: 256,
        scheduling: 'lifo',
        maxTotalSockets: Infinity,
        totalSocketCount: 1,
        maxCachedSessions: 100,
        _sessionCache: {
          map: {
            'www.wikidata.org:443:::::::::::::::::::::': <Buffer 30 82 08 7d 02 01 01 02 02 03 04 04 02 13 02 04 20 49 81 10 e3 ea 7d 84 9b e4 63 a1 f3 bf 02 aa db cd 63 84 bf 4f 51 15 cc 96 ff a3 1c ef 0f 60 a7 04 ... 2127 more bytes>
          },
          list: [ 'www.wikidata.org:443:::::::::::::::::::::' ]
        },
        [Symbol(kCapture)]: false
      },
      socketPath: undefined,
      method: 'POST',
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      joinDuplicateHeaders: undefined,
      path: '/w/rest.php/oauth2/access_token',
      _ended: true,
      res: IncomingMessage {
        _readableState: ReadableState {
          objectMode: false,
          highWaterMark: 16384,
          buffer: BufferList { head: null, tail: null, length: 0 },
          length: 0,
          pipes: [],
          flowing: false,
          ended: true,
          endEmitted: true,
          reading: false,
          constructed: true,
          sync: true,
          needReadable: false,
          emittedReadable: false,
          readableListening: false,
          resumeScheduled: false,
          errorEmitted: false,
          emitClose: true,
          autoDestroy: true,
          destroyed: true,
          errored: null,
          closed: true,
          closeEmitted: true,
          defaultEncoding: 'utf8',
          awaitDrainWriters: null,
          multiAwaitDrain: false,
          readingMore: true,
          dataEmitted: true,
          decoder: null,
          encoding: null,
          [Symbol(kPaused)]: true
        },
        _events: [Object: null prototype] {
          end: [
            [Function: responseOnEnd],
            [Function: onend],
            [Function: onend]
          ],
          close: [
            [Function (anonymous)],
            [Function: onclose],
            [Function: onclose]
          ],
          finish: [ [Function: onfinish], [Function: onfinish] ],
          error: [
            [Function: onerror],
            [Function: onError],
            [Function: onerror]
          ]
        },
        _eventsCount: 4,
        _maxListeners: undefined,
        socket: TLSSocket {
          _tlsOptions: {
            allowHalfOpen: undefined,
            pipe: false,
            secureContext: SecureContext { context: SecureContext {} },
            isServer: false,
            requestCert: true,
            rejectUnauthorized: true,
            session: undefined,
            ALPNProtocols: undefined,
            requestOCSP: undefined,
            enableTrace: undefined,
            pskCallback: undefined,
            highWaterMark: undefined,
            onread: undefined,
            signal: undefined
          },
          _secureEstablished: true,
          _securePending: false,
          _newSessionPending: false,
          _controlReleased: true,
          secureConnecting: false,
          _SNICallback: null,
          servername: 'www.wikidata.org',
          alpnProtocol: false,
          authorized: true,
          authorizationError: null,
          encrypted: true,
          _events: [Object: null prototype] {
            close: [
              [Function: onSocketCloseDestroySSL],
              [Function: onClose],
              [Function: socketCloseListener]
            ],
            end: [Function: onReadableStreamEnd],
            newListener: [Function: keylogNewListener],
            secure: [Function: onConnectSecure],
            session: [Function (anonymous)],
            free: [Function: onFree],
            timeout: [Function: onTimeout],
            agentRemove: [Function: onRemove],
            error: [Function: socketErrorListener]
          },
          _eventsCount: 9,
          connecting: false,
          _hadError: false,
          _parent: null,
          _host: 'www.wikidata.org',
          _closeAfterHandlingError: false,
          _readableState: ReadableState {
            objectMode: false,
            highWaterMark: 16384,
            buffer: BufferList { head: null, tail: null, length: 0 },
            length: 0,
            pipes: [],
            flowing: true,
            ended: true,
            endEmitted: true,
            reading: false,
            constructed: true,
            sync: false,
            needReadable: false,
            emittedReadable: false,
            readableListening: false,
            resumeScheduled: false,
            errorEmitted: false,
            emitClose: false,
            autoDestroy: true,
            destroyed: true,
            errored: null,
            closed: true,
            closeEmitted: true,
            defaultEncoding: 'utf8',
            awaitDrainWriters: null,
            multiAwaitDrain: false,
            readingMore: false,
            dataEmitted: true,
            decoder: null,
            encoding: null,
            [Symbol(kPaused)]: false
          },
          _maxListeners: undefined,
          _writableState: WritableState {
            objectMode: false,
            highWaterMark: 16384,
            finalCalled: true,
            needDrain: false,
            ending: true,
            ended: true,
            finished: true,
            destroyed: true,
            decodeStrings: false,
            defaultEncoding: 'utf8',
            length: 0,
            writing: false,
            corked: 0,
            sync: false,
            bufferProcessing: false,
            onwrite: [Function: bound onwrite],
            writecb: null,
            writelen: 0,
            afterWriteTickInfo: null,
            buffered: [],
            bufferedIndex: 0,
            allBuffers: true,
            allNoop: true,
            pendingcb: 0,
            constructed: true,
            prefinished: true,
            errorEmitted: false,
            emitClose: false,
            autoDestroy: true,
            errored: null,
            closed: true,
            closeEmitted: true,
            [Symbol(kOnFinished)]: []
          },
          allowHalfOpen: false,
          _sockname: null,
          _pendingData: null,
          _pendingEncoding: '',
          server: undefined,
          _server: null,
          ssl: null,
          _requestCert: true,
          _rejectUnauthorized: true,
          parser: null,
          _httpMessage: [Circular *1],
          write: [Function: writeAfterFIN],
          [Symbol(res)]: null,
          [Symbol(verified)]: true,
          [Symbol(pendingSession)]: null,
          [Symbol(async_id_symbol)]: 35,
          [Symbol(kHandle)]: null,
          [Symbol(lastWriteQueueSize)]: 0,
          [Symbol(timeout)]: null,
          [Symbol(kBuffer)]: null,
          [Symbol(kBufferCb)]: null,
          [Symbol(kBufferGen)]: null,
          [Symbol(kCapture)]: false,
          [Symbol(kSetNoDelay)]: false,
          [Symbol(kSetKeepAlive)]: true,
          [Symbol(kSetKeepAliveInitialDelay)]: 60,
          [Symbol(kBytesRead)]: 1442,
          [Symbol(kBytesWritten)]: 400,
          [Symbol(connect-options)]: {
            rejectUnauthorized: true,
            ciphers: 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
            checkServerIdentity: [Function: checkServerIdentity],
            minDHSize: 1024,
            maxRedirects: 21,
            maxBodyLength: Infinity,
            protocol: 'https:',
            path: null,
            method: 'POST',
            headers: [Object: null prototype] {
              Accept: 'application/json, text/plain, */*',
              'Content-Type': 'application/json',
              'User-Agent': 'axios/1.6.8',
              'Content-Length': '141',
              'Accept-Encoding': 'gzip, compress, deflate, br'
            },
            agents: { http: undefined, https: undefined },
            auth: undefined,
            family: undefined,
            beforeRedirect: [Function: dispatchBeforeRedirect],
            beforeRedirects: { proxy: [Function: beforeRedirect] },
            hostname: 'www.wikidata.org',
            port: 443,
            agent: undefined,
            nativeProtocols: <ref *5> {
              'http:': {
                _connectionListener: [Function: connectionListener],
                METHODS: [
                  'ACL',         'BIND',       'CHECKOUT',
                  'CONNECT',     'COPY',       'DELETE',
                  'GET',         'HEAD',       'LINK',
                  'LOCK',        'M-SEARCH',   'MERGE',
                  'MKACTIVITY',  'MKCALENDAR', 'MKCOL',
                  'MOVE',        'NOTIFY',     'OPTIONS',
                  'PATCH',       'POST',       'PROPFIND',
                  'PROPPATCH',   'PURGE',      'PUT',
                  'REBIND',      'REPORT',     'SEARCH',
                  'SOURCE',      'SUBSCRIBE',  'TRACE',
                  'UNBIND',      'UNLINK',     'UNLOCK',
                  'UNSUBSCRIBE'
                ],
                STATUS_CODES: {
                  '100': 'Continue',
                  '101': 'Switching Protocols',
                  '102': 'Processing',
                  '103': 'Early Hints',
                  '200': 'OK',
                  '201': 'Created',
                  '202': 'Accepted',
                  '203': 'Non-Authoritative Information',
                  '204': 'No Content',
                  '205': 'Reset Content',
                  '206': 'Partial Content',
                  '207': 'Multi-Status',
                  '208': 'Already Reported',
                  '226': 'IM Used',
                  '300': 'Multiple Choices',
                  '301': 'Moved Permanently',
                  '302': 'Found',
                  '303': 'See Other',
                  '304': 'Not Modified',
                  '305': 'Use Proxy',
                  '307': 'Temporary Redirect',
                  '308': 'Permanent Redirect',
                  '400': 'Bad Request',
                  '401': 'Unauthorized',
                  '402': 'Payment Required',
                  '403': 'Forbidden',
                  '404': 'Not Found',
                  '405': 'Method Not Allowed',
                  '406': 'Not Acceptable',
                  '407': 'Proxy Authentication Required',
                  '408': 'Request Timeout',
                  '409': 'Conflict',
                  '410': 'Gone',
                  '411': 'Length Required',
                  '412': 'Precondition Failed',
                  '413': 'Payload Too Large',
                  '414': 'URI Too Long',
                  '415': 'Unsupported Media Type',
                  '416': 'Range Not Satisfiable',
                  '417': 'Expectation Failed',
                  '418': "I'm a Teapot",
                  '421': 'Misdirected Request',
                  '422': 'Unprocessable Entity',
                  '423': 'Locked',
                  '424': 'Failed Dependency',
                  '425': 'Too Early',
                  '426': 'Upgrade Required',
                  '428': 'Precondition Required',
                  '429': 'Too Many Requests',
                  '431': 'Request Header Fields Too Large',
                  '451': 'Unavailable For Legal Reasons',
                  '500': 'Internal Server Error',
                  '501': 'Not Implemented',
                  '502': 'Bad Gateway',
                  '503': 'Service Unavailable',
                  '504': 'Gateway Timeout',
                  '505': 'HTTP Version Not Supported',
                  '506': 'Variant Also Negotiates',
                  '507': 'Insufficient Storage',
                  '508': 'Loop Detected',
                  '509': 'Bandwidth Limit Exceeded',
                  '510': 'Not Extended',
                  '511': 'Network Authentication Required'
                },
                Agent: [Function: Agent] { defaultMaxSockets: Infinity },
                ClientRequest: [Function: ClientRequest],
                IncomingMessage: [Function: IncomingMessage],
                OutgoingMessage: [Function: OutgoingMessage],
                Server: [Function: Server],
                ServerResponse: [Function: ServerResponse],
                createServer: [Function: createServer],
                validateHeaderName: [Function: __node_internal_],
                validateHeaderValue: [Function: __node_internal_],
                get: [Function: get],
                request: [Function: request],
                setMaxIdleHTTPParsers: [Function: setMaxIdleHTTPParsers],
                maxHeaderSize: [Getter],
                globalAgent: [Getter/Setter]
              },
              'https:': {
                Agent: [Function: Agent],
                globalAgent: <ref *3> Agent {
                  _events: [Object: null prototype] {
                    free: [Function (anonymous)],
                    newListener: [Function: maybeEnableKeylog]
                  },
                  _eventsCount: 2,
                  _maxListeners: undefined,
                  defaultPort: 443,
                  protocol: 'https:',
                  options: [Object: null prototype] {
                    noDelay: true,
                    path: null
                  },
                  requests: [Object: null prototype] {},
                  sockets: [Object: null prototype] {
                    'accounts.spotify.com:443:::::::::::::::::::::': [
                      <ref *2> TLSSocket {
                        _tlsOptions: {
                          allowHalfOpen: undefined,
                          pipe: false,
                          secureContext: SecureContext { context: SecureContext {} },
                          isServer: false,
                          requestCert: true,
                          rejectUnauthorized: true,
                          session: undefined,
                          ALPNProtocols: undefined,
                          requestOCSP: undefined,
                          enableTrace: undefined,
                          pskCallback: undefined,
                          highWaterMark: undefined,
                          onread: undefined,
                          signal: undefined
                        },
                        _secureEstablished: false,
                        _securePending: false,
                        _newSessionPending: false,
                        _controlReleased: true,
                        secureConnecting: true,
                        _SNICallback: null,
                        servername: null,
                        alpnProtocol: null,
                        authorized: false,
                        authorizationError: null,
                        encrypted: true,
                        _events: [Object: null prototype] {
                          close: [
                            [Function: onSocketCloseDestroySSL],
                            [Function: bound onceWrapper] {
                              listener: [Function (anonymous)]
                            },
                            [Function: onClose],
                            [Function: socketCloseListener],
                            [Function: bound onceWrapper] {
                              listener: [Function: onClose]
                            }
                          ],
                          end: [
                            [Function: onConnectEnd],
                            [Function: onReadableStreamEnd],
                            [Function: socketOnEnd]
                          ],
                          newListener: [Function: keylogNewListener],
                          connect: [
                            [Function: bound onceWrapper] {
                              listener: [Function (anonymous)]
                            },
                            [Function: bound onceWrapper] {
                              listener: [Function (anonymous)]
                            },
                            [Function: bound onceWrapper] {
                              listener: [Function: connect]
                            }
                          ],
                          secure: [Function: onConnectSecure],
                          session: [Function (anonymous)],
                          free: [Function: onFree],
                          timeout: [Function: onTimeout],
                          agentRemove: [Function: onRemove],
                          error: [Function: socketErrorListener],
                          data: [Function: socketOnData],
                          drain: [Function: ondrain]
                        },
                        _eventsCount: 12,
                        connecting: true,
                        _hadError: false,
                        _parent: null,
                        _host: 'accounts.spotify.com',
                        _closeAfterHandlingError: false,
                        _readableState: ReadableState {
                          objectMode: false,
                          highWaterMark: 16384,
                          buffer: BufferList { head: null, tail: null, length: 0 },
                          length: 0,
                          pipes: [],
                          flowing: true,
                          ended: false,
                          endEmitted: false,
                          reading: true,
                          constructed: true,
                          sync: false,
                          needReadable: true,
                          emittedReadable: false,
                          readableListening: false,
                          resumeScheduled: false,
                          errorEmitted: false,
                          emitClose: false,
                          autoDestroy: true,
                          destroyed: false,
                          errored: null,
                          closed: false,
                          closeEmitted: false,
                          defaultEncoding: 'utf8',
                          awaitDrainWriters: null,
                          multiAwaitDrain: false,
                          readingMore: false,
                          dataEmitted: false,
                          decoder: null,
                          encoding: null,
                          [Symbol(kPaused)]: false
                        },
                        _maxListeners: undefined,
                        _writableState: WritableState {
                          objectMode: false,
                          highWaterMark: 16384,
                          finalCalled: false,
                          needDrain: false,
                          ending: false,
                          ended: false,
                          finished: false,
                          destroyed: false,
                          decodeStrings: false,
                          defaultEncoding: 'utf8',
                          length: 378,
                          writing: true,
                          corked: 0,
                          sync: false,
                          bufferProcessing: false,
                          onwrite: [Function: bound onwrite],
                          writecb: [Function (anonymous)],
                          writelen: 378,
                          afterWriteTickInfo: null,
                          buffered: [],
                          bufferedIndex: 0,
                          allBuffers: true,
                          allNoop: true,
                          pendingcb: 1,
                          constructed: true,
                          prefinished: false,
                          errorEmitted: false,
                          emitClose: false,
                          autoDestroy: true,
                          errored: null,
                          closed: false,
                          closeEmitted: false,
                          [Symbol(kOnFinished)]: []
                        },
                        allowHalfOpen: false,
                        _sockname: null,
                        _pendingData: [
                          {
                            chunk: 'POST /api/token HTTP/1.1\r\n' +
                              'Accept: application/json, text/plain, */*\r\n' +
                              'Content-Type: application/x-www-form-urlencoded\r\n' +
                              'User-Agent: axios/1.6.8\r\n' +
                              'Content-Length: 119\r\n' +
                              'Accept-Encoding: gzip, compress, deflate, br\r\n' +
                              'Host: accounts.spotify.com\r\n' +
                              'Connection: close\r\n' +
                              '\r\n',
                            encoding: 'latin1',
                            callback: [Function: nop]
                          },
                          {
                            chunk: <Buffer 67 72 61 6e 74 5f 74 79 70 65 3d 63 6c 69 65 6e 74 5f 63 72 65 64 65 6e 74 69 61 6c 73 26 63 6c 69 65 6e 74 5f 69 64 3d 65 62 63 63 39 39 31 32 34 30 ... 69 more bytes>,
                            encoding: 'buffer',
                            callback: [Function (anonymous)]
                          },
                          allBuffers: false
                        ],
                        _pendingEncoding: '',
                        server: undefined,
                        _server: null,
                        ssl: TLSWrap {
                          _parent: TCP {
                            reading: [Getter/Setter],
                            onconnection: null,
                            [Symbol(owner_symbol)]: [Circular *2]
                          },
                          _parentWrap: undefined,
                          _secureContext: SecureContext { context: SecureContext {} },
                          reading: false,
                          onkeylog: [Function: onkeylog],
                          onhandshakestart: {},
                          onhandshakedone: [Function (anonymous)],
                          onocspresponse: [Function: onocspresponse],
                          onnewsession: [Function: onnewsessionclient],
                          onerror: [Function: onerror],
                          [Symbol(owner_symbol)]: [Circular *2]
                        },
                        _requestCert: true,
                        _rejectUnauthorized: true,
                        parser: <ref *4> HTTPParser {
                          '0': null,
                          '1': [Function: parserOnHeaders],
                          '2': [Function: parserOnHeadersComplete],
                          '3': [Function: parserOnBody],
                          '4': [Function: parserOnMessageComplete],
                          '5': null,
                          '6': null,
                          _headers: [],
                          _url: '',
                          socket: [Circular *2],
                          incoming: null,
                          outgoing: <ref *6> ClientRequest {
                            _events: [Object: null prototype] {
                              response: [Function: bound onceWrapper] {
                                listener: [Function (anonymous)]
                              },
                              abort: [Function (anonymous)],
                              aborted: [Function (anonymous)],
                              connect: [Function (anonymous)],
                              error: [Function (anonymous)],
                              socket: [Function (anonymous)],
                              timeout: [Function (anonymous)]
                            },
                            _eventsCount: 7,
                            _maxListeners: undefined,
                            outputData: [],
                            outputSize: 0,
                            writable: true,
                            destroyed: false,
                            _last: true,
                            chunkedEncoding: false,
                            shouldKeepAlive: false,
                            maxRequestsOnConnectionReached: false,
                            _defaultKeepAlive: true,
                            useChunkedEncodingByDefault: true,
                            sendDate: false,
                            _removedConnection: false,
                            _removedContLen: false,
                            _removedTE: false,
                            strictContentLength: false,
                            _contentLength: '119',
                            _hasBody: true,
                            _trailer: '',
                            finished: false,
                            _headerSent: true,
                            _closed: false,
                            socket: [Circular *2],
                            _header: 'POST /api/token HTTP/1.1\r\n' +
                              'Accept: application/json, text/plain, */*\r\n' +
                              'Content-Type: application/x-www-form-urlencoded\r\n' +
                              'User-Agent: axios/1.6.8\r\n' +
                              'Content-Length: 119\r\n' +
                              'Accept-Encoding: gzip, compress, deflate, br\r\n' +
                              'Host: accounts.spotify.com\r\n' +
                              'Connection: close\r\n' +
                              '\r\n',
                            _keepAliveTimeout: 0,
                            _onPendingData: [Function: nop],
                            agent: [Circular *3],
                            socketPath: undefined,
                            method: 'POST',
                            maxHeaderSize: undefined,
                            insecureHTTPParser: undefined,
                            joinDuplicateHeaders: undefined,
                            path: '/api/token',
                            _ended: false,
                            res: null,
                            aborted: false,
                            timeoutCb: null,
                            upgradeOrConnect: false,
                            parser: [Circular *4],
                            maxHeadersCount: null,
                            reusedSocket: false,
                            host: 'accounts.spotify.com',
                            protocol: 'https:',
                            _redirectable: Writable {
                              _writableState: WritableState {
                                objectMode: false,
                                highWaterMark: 16384,
                                finalCalled: false,
                                needDrain: false,
                                ending: false,
                                ended: false,
                                finished: false,
                                destroyed: false,
                                decodeStrings: true,
                                defaultEncoding: 'utf8',
                                length: 0,
                                writing: false,
                                corked: 0,
                                sync: true,
                                bufferProcessing: false,
                                onwrite: [Function: bound onwrite],
                                writecb: null,
                                writelen: 0,
                                afterWriteTickInfo: null,
                                buffered: [],
                                bufferedIndex: 0,
                                allBuffers: true,
                                allNoop: true,
                                pendingcb: 0,
                                constructed: true,
                                prefinished: false,
                                errorEmitted: false,
                                emitClose: true,
                                autoDestroy: true,
                                errored: null,
                                closed: false,
                                closeEmitted: false,
                                [Symbol(kOnFinished)]: []
                              },
                              _events: [Object: null prototype] {
                                response: [Function: handleResponse],
                                error: [Function: handleRequestError],
                                socket: [Function: handleRequestSocket]
                              },
                              _eventsCount: 3,
                              _maxListeners: undefined,
                              _options: {
                                maxRedirects: 21,
                                maxBodyLength: Infinity,
                                protocol: 'https:',
                                path: '/api/token',
                                method: 'POST',
                                headers: [Object: null prototype] {
                                  Accept: 'application/json, text/plain, */*',
                                  'Content-Type': 'application/x-www-form-urlencoded',
                                  'User-Agent': 'axios/1.6.8',
                                  'Content-Length': '119',
                                  'Accept-Encoding': 'gzip, compress, deflate, br'
                                },
                                agents: { http: undefined, https: undefined },
                                auth: undefined,
                                family: undefined,
                                beforeRedirect: [Function: dispatchBeforeRedirect],
                                beforeRedirects: { proxy: [Function: beforeRedirect] },
                                hostname: 'accounts.spotify.com',
                                port: '',
                                agent: undefined,
                                nativeProtocols: [Circular *5],
                                pathname: '/api/token'
                              },
                              _ended: false,
                              _ending: true,
                              _redirectCount: 0,
                              _redirects: [],
                              _requestBodyLength: 119,
                              _requestBodyBuffers: [
                                {
                                  data: <Buffer 67 72 61 6e 74 5f 74 79 70 65 3d 63 6c 69 65 6e 74 5f 63 72 65 64 65 6e 74 69 61 6c 73 26 63 6c 69 65 6e 74 5f 69 64 3d 65 62 63 63 39 39 31 32 34 30 ... 69 more bytes>,
                                  encoding: undefined
                                }
                              ],
                              _onNativeResponse: [Function (anonymous)],
                              _currentRequest: [Circular *6],
                              _currentUrl: 'https://accounts.spotify.com/api/token',
                              [Symbol(kCapture)]: false
                            },
                            [Symbol(kCapture)]: false,
                            [Symbol(kBytesWritten)]: 0,
                            [Symbol(kEndCalled)]: false,
                            [Symbol(kNeedDrain)]: false,
                            [Symbol(corked)]: 0,
                            [Symbol(kOutHeaders)]: [Object: null prototype] {
                              accept: [
                                'Accept',
                                'application/json, text/plain, */*'
                              ],
                              'content-type': [
                                'Content-Type',
                                'application/x-www-form-urlencoded'
                              ],
                              'user-agent': [ 'User-Agent', 'axios/1.6.8' ],
                              'content-length': [ 'Content-Length', '119' ],
                              'accept-encoding': [
                                'Accept-Encoding',
                                'gzip, compress, deflate, br'
                              ],
                              host: [ 'Host', 'accounts.spotify.com' ]
                            },
                            [Symbol(errored)]: null,
                            [Symbol(kUniqueHeaders)]: null
                          },
                          maxHeaderPairs: 2000,
                          _consumed: false,
                          onIncoming: [Function: parserOnIncomingClient],
                          joinDuplicateHeaders: undefined,
                          [Symbol(resource_symbol)]: HTTPClientAsyncResource {
                            type: 'HTTPINCOMINGMESSAGE',
                            req: <ref *6> ClientRequest {
                              _events: [Object: null prototype] {
                                response: [Function: bound onceWrapper] {
                                  listener: [Function (anonymous)]
                                },
                                abort: [Function (anonymous)],
                                aborted: [Function (anonymous)],
                                connect: [Function (anonymous)],
                                error: [Function (anonymous)],
                                socket: [Function (anonymous)],
                                timeout: [Function (anonymous)]
                              },
                              _eventsCount: 7,
                              _maxListeners: undefined,
                              outputData: [],
                              outputSize: 0,
                              writable: true,
                              destroyed: false,
                              _last: true,
                              chunkedEncoding: false,
                              shouldKeepAlive: false,
                              maxRequestsOnConnectionReached: false,
                              _defaultKeepAlive: true,
                              useChunkedEncodingByDefault: true,
                              sendDate: false,
                              _removedConnection: false,
                              _removedContLen: false,
                              _removedTE: false,
                              strictContentLength: false,
                              _contentLength: '119',
                              _hasBody: true,
                              _trailer: '',
                              finished: false,
                              _headerSent: true,
                              _closed: false,
                              socket: [Circular *2],
                              _header: 'POST /api/token HTTP/1.1\r\n' +
                                'Accept: application/json, text/plain, */*\r\n' +
                                'Content-Type: application/x-www-form-urlencoded\r\n' +
                                'User-Agent: axios/1.6.8\r\n' +
                                'Content-Length: 119\r\n' +
                                'Accept-Encoding: gzip, compress, deflate, br\r\n' +
                                'Host: accounts.spotify.com\r\n' +
                                'Connection: close\r\n' +
                                '\r\n',
                              _keepAliveTimeout: 0,
                              _onPendingData: [Function: nop],
                              agent: [Circular *3],
                              socketPath: undefined,
                              method: 'POST',
                              maxHeaderSize: undefined,
                              insecureHTTPParser: undefined,
                              joinDuplicateHeaders: undefined,
                              path: '/api/token',
                              _ended: false,
                              res: null,
                              aborted: false,
                              timeoutCb: null,
                              upgradeOrConnect: false,
                              parser: [Circular *4],
                              maxHeadersCount: null,
                              reusedSocket: false,
                              host: 'accounts.spotify.com',
                              protocol: 'https:',
                              _redirectable: Writable {
                                _writableState: WritableState {
                                  objectMode: false,
                                  highWaterMark: 16384,
                                  finalCalled: false,
                                  needDrain: false,
                                  ending: false,
                                  ended: false,
                                  finished: false,
                                  destroyed: false,
                                  decodeStrings: true,
                                  defaultEncoding: 'utf8',
                                  length: 0,
                                  writing: false,
                                  corked: 0,
                                  sync: true,
                                  bufferProcessing: false,
                                  onwrite: [Function: bound onwrite],
                                  writecb: null,
                                  writelen: 0,
                                  afterWriteTickInfo: null,
                                  buffered: [],
                                  bufferedIndex: 0,
                                  allBuffers: true,
                                  allNoop: true,
                                  pendingcb: 0,
                                  constructed: true,
                                  prefinished: false,
                                  errorEmitted: false,
                                  emitClose: true,
                                  autoDestroy: true,
                                  errored: null,
                                  closed: false,
                                  closeEmitted: false,
                                  [Symbol(kOnFinished)]: []
                                },
                                _events: [Object: null prototype] {
                                  response: [Function: handleResponse],
                                  error: [Function: handleRequestError],
                                  socket: [Function: handleRequestSocket]
                                },
                                _eventsCount: 3,
                                _maxListeners: undefined,
                                _options: {
                                  maxRedirects: 21,
                                  maxBodyLength: Infinity,
                                  protocol: 'https:',
                                  path: '/api/token',
                                  method: 'POST',
                                  headers: [Object: null prototype] {
                                    Accept: 'application/json, text/plain, */*',
                                    'Content-Type': 'application/x-www-form-urlencoded',
                                    'User-Agent': 'axios/1.6.8',
                                    'Content-Length': '119',
                                    'Accept-Encoding': 'gzip, compress, deflate, br'
                                  },
                                  agents: { http: undefined, https: undefined },
                                  auth: undefined,
                                  family: undefined,
                                  beforeRedirect: [Function: dispatchBeforeRedirect],
                                  beforeRedirects: { proxy: [Function: beforeRedirect] },
                                  hostname: 'accounts.spotify.com',
                                  port: '',
                                  agent: undefined,
                                  nativeProtocols: [Circular *5],
                                  pathname: '/api/token'
                                },
                                _ended: false,
                                _ending: true,
                                _redirectCount: 0,
                                _redirects: [],
                                _requestBodyLength: 119,
                                _requestBodyBuffers: [
                                  {
                                    data: <Buffer 67 72 61 6e 74 5f 74 79 70 65 3d 63 6c 69 65 6e 74 5f 63 72 65 64 65 6e 74 69 61 6c 73 26 63 6c 69 65 6e 74 5f 69 64 3d 65 62 63 63 39 39 31 32 34 30 ... 69 more bytes>,
                                    encoding: undefined
                                  }
                                ],
                                _onNativeResponse: [Function (anonymous)],
                                _currentRequest: [Circular *6],
                                _currentUrl: 'https://accounts.spotify.com/api/token',
                                [Symbol(kCapture)]: false
                              },
                              [Symbol(kCapture)]: false,
                              [Symbol(kBytesWritten)]: 0,
                              [Symbol(kEndCalled)]: false,
                              [Symbol(kNeedDrain)]: false,
                              [Symbol(corked)]: 0,
                              [Symbol(kOutHeaders)]: [Object: null prototype] {
                                accept: [
                                  'Accept',
                                  'application/json, text/plain, */*'
                                ],
                                'content-type': [
                                  'Content-Type',
                                  'application/x-www-form-urlencoded'
                                ],
                                'user-agent': [ 'User-Agent', 'axios/1.6.8' ],
                                'content-length': [ 'Content-Length', '119' ],
                                'accept-encoding': [
                                  'Accept-Encoding',
                                  'gzip, compress, deflate, br'
                                ],
                                host: [ 'Host', 'accounts.spotify.com' ]
                              },
                              [Symbol(errored)]: null,
                              [Symbol(kUniqueHeaders)]: null
                            }
                          }
                        },
                        _httpMessage: <ref *6> ClientRequest {
                          _events: [Object: null prototype] {
                            response: [Function: bound onceWrapper] {
                              listener: [Function (anonymous)]
                            },
                            abort: [Function (anonymous)],
                            aborted: [Function (anonymous)],
                            connect: [Function (anonymous)],
                            error: [Function (anonymous)],
                            socket: [Function (anonymous)],
                            timeout: [Function (anonymous)]
                          },
                          _eventsCount: 7,
                          _maxListeners: undefined,
                          outputData: [],
                          outputSize: 0,
                          writable: true,
                          destroyed: false,
                          _last: true,
                          chunkedEncoding: false,
                          shouldKeepAlive: false,
                          maxRequestsOnConnectionReached: false,
                          _defaultKeepAlive: true,
                          useChunkedEncodingByDefault: true,
                          sendDate: false,
                          _removedConnection: false,
                          _removedContLen: false,
                          _removedTE: false,
                          strictContentLength: false,
                          _contentLength: '119',
                          _hasBody: true,
                          _trailer: '',
                          finished: false,
                          _headerSent: true,
                          _closed: false,
                          socket: [Circular *2],
                          _header: 'POST /api/token HTTP/1.1\r\n' +
                            'Accept: application/json, text/plain, */*\r\n' +
                            'Content-Type: application/x-www-form-urlencoded\r\n' +
                            'User-Agent: axios/1.6.8\r\n' +
                            'Content-Length: 119\r\n' +
                            'Accept-Encoding: gzip, compress, deflate, br\r\n' +
                            'Host: accounts.spotify.com\r\n' +
                            'Connection: close\r\n' +
                            '\r\n',
                          _keepAliveTimeout: 0,
                          _onPendingData: [Function: nop],
                          agent: [Circular *3],
                          socketPath: undefined,
                          method: 'POST',
                          maxHeaderSize: undefined,
                          insecureHTTPParser: undefined,
                          joinDuplicateHeaders: undefined,
                          path: '/api/token',
                          _ended: false,
                          res: null,
                          aborted: false,
                          timeoutCb: null,
                          upgradeOrConnect: false,
                          parser: <ref *4> HTTPParser {
                            '0': null,
                            '1': [Function: parserOnHeaders],
                            '2': [Function: parserOnHeadersComplete],
                            '3': [Function: parserOnBody],
                            '4': [Function: parserOnMessageComplete],
                            '5': null,
                            '6': null,
                            _headers: [],
                            _url: '',
                            socket: [Circular *2],
                            incoming: null,
                            outgoing: [Circular *6],
                            maxHeaderPairs: 2000,
                            _consumed: false,
                            onIncoming: [Function: parserOnIncomingClient],
                            joinDuplicateHeaders: undefined,
                            [Symbol(resource_symbol)]: HTTPClientAsyncResource {
                              type: 'HTTPINCOMINGMESSAGE',
                              req: [Circular *6]
                            }
                          },
                          maxHeadersCount: null,
                          reusedSocket: false,
                          host: 'accounts.spotify.com',
                          protocol: 'https:',
                          _redirectable: Writable {
                            _writableState: WritableState {
                              objectMode: false,
                              highWaterMark: 16384,
                              finalCalled: false,
                              needDrain: false,
                              ending: false,
                              ended: false,
                              finished: false,
                              destroyed: false,
                              decodeStrings: true,
                              defaultEncoding: 'utf8',
                              length: 0,
                              writing: false,
                              corked: 0,
                              sync: true,
                              bufferProcessing: false,
                              onwrite: [Function: bound onwrite],
                              writecb: null,
                              writelen: 0,
                              afterWriteTickInfo: null,
                              buffered: [],
                              bufferedIndex: 0,
                              allBuffers: true,
                              allNoop: true,
                              pendingcb: 0,
                              constructed: true,
                              prefinished: false,
                              errorEmitted: false,
                              emitClose: true,
                              autoDestroy: true,
                              errored: null,
                              closed: false,
                              closeEmitted: false,
                              [Symbol(kOnFinished)]: []
                            },
                            _events: [Object: null prototype] {
                              response: [Function: handleResponse],
                              error: [Function: handleRequestError],
                              socket: [Function: handleRequestSocket]
                            },
                            _eventsCount: 3,
                            _maxListeners: undefined,
                            _options: {
                              maxRedirects: 21,
                              maxBodyLength: Infinity,
                              protocol: 'https:',
                              path: '/api/token',
                              method: 'POST',
                              headers: [Object: null prototype] {
                                Accept: 'application/json, text/plain, */*',
                                'Content-Type': 'application/x-www-form-urlencoded',
                                'User-Agent': 'axios/1.6.8',
                                'Content-Length': '119',
                                'Accept-Encoding': 'gzip, compress, deflate, br'
                              },
                              agents: { http: undefined, https: undefined },
                              auth: undefined,
                              family: undefined,
                              beforeRedirect: [Function: dispatchBeforeRedirect],
                              beforeRedirects: { proxy: [Function: beforeRedirect] },
                              hostname: 'accounts.spotify.com',
                              port: '',
                              agent: undefined,
                              nativeProtocols: [Circular *5],
                              pathname: '/api/token'
                            },
                            _ended: false,
                            _ending: true,
                            _redirectCount: 0,
                            _redirects: [],
                            _requestBodyLength: 119,
                            _requestBodyBuffers: [
                              {
                                data: <Buffer 67 72 61 6e 74 5f 74 79 70 65 3d 63 6c 69 65 6e 74 5f 63 72 65 64 65 6e 74 69 61 6c 73 26 63 6c 69 65 6e 74 5f 69 64 3d 65 62 63 63 39 39 31 32 34 30 ... 69 more bytes>,
                                encoding: undefined
                              }
                            ],
                            _onNativeResponse: [Function (anonymous)],
                            _currentRequest: [Circular *6],
                            _currentUrl: 'https://accounts.spotify.com/api/token',
                            [Symbol(kCapture)]: false
                          },
                          [Symbol(kCapture)]: false,
                          [Symbol(kBytesWritten)]: 0,
                          [Symbol(kEndCalled)]: false,
                          [Symbol(kNeedDrain)]: false,
                          [Symbol(corked)]: 0,
                          [Symbol(kOutHeaders)]: [Object: null prototype] {
                            accept: [
                              'Accept',
                              'application/json, text/plain, */*'
                            ],
                            'content-type': [
                              'Content-Type',
                              'application/x-www-form-urlencoded'
                            ],
                            'user-agent': [ 'User-Agent', 'axios/1.6.8' ],
                            'content-length': [ 'Content-Length', '119' ],
                            'accept-encoding': [
                              'Accept-Encoding',
                              'gzip, compress, deflate, br'
                            ],
                            host: [ 'Host', 'accounts.spotify.com' ]
                          },
                          [Symbol(errored)]: null,
                          [Symbol(kUniqueHeaders)]: null
                        },
                        [Symbol(res)]: TLSWrap {
                          _parent: TCP {
                            reading: [Getter/Setter],
                            onconnection: null,
                            [Symbol(owner_symbol)]: [Circular *2]
                          },
                          _parentWrap: undefined,
                          _secureContext: SecureContext { context: SecureContext {} },
                          reading: false,
                          onkeylog: [Function: onkeylog],
                          onhandshakestart: {},
                          onhandshakedone: [Function (anonymous)],
                          onocspresponse: [Function: onocspresponse],
                          onnewsession: [Function: onnewsessionclient],
                          onerror: [Function: onerror],
                          [Symbol(owner_symbol)]: [Circular *2]
                        },
                        [Symbol(verified)]: false,
                        [Symbol(pendingSession)]: null,
                        [Symbol(async_id_symbol)]: 6,
                        [Symbol(kHandle)]: TLSWrap {
                          _parent: TCP {
                            reading: [Getter/Setter],
                            onconnection: null,
                            [Symbol(owner_symbol)]: [Circular *2]
                          },
                          _parentWrap: undefined,
                          _secureContext: SecureContext { context: SecureContext {} },
                          reading: false,
                          onkeylog: [Function: onkeylog],
                          onhandshakestart: {},
                          onhandshakedone: [Function (anonymous)],
                          onocspresponse: [Function: onocspresponse],
                          onnewsession: [Function: onnewsessionclient],
                          onerror: [Function: onerror],
                          [Symbol(owner_symbol)]: [Circular *2]
                        },
                        [Symbol(lastWriteQueueSize)]: 0,
                        [Symbol(timeout)]: null,
                        [Symbol(kBuffer)]: null,
                        [Symbol(kBufferCb)]: null,
                        [Symbol(kBufferGen)]: null,
                        [Symbol(kCapture)]: false,
                        [Symbol(kSetNoDelay)]: false,
                        [Symbol(kSetKeepAlive)]: true,
                        [Symbol(kSetKeepAliveInitialDelay)]: 60,
                        [Symbol(kBytesRead)]: 0,
                        [Symbol(kBytesWritten)]: 0,
                        [Symbol(connect-options)]: {
                          rejectUnauthorized: true,
                          ciphers: 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
                          checkServerIdentity: [Function: checkServerIdentity],
                          minDHSize: 1024,
                          maxRedirects: 21,
                          maxBodyLength: Infinity,
                          protocol: 'https:',
                          path: null,
                          method: 'POST',
                          headers: [Object: null prototype] {
                            Accept: 'application/json, text/plain, */*',
                            'Content-Type': 'application/x-www-form-urlencoded',
                            'User-Agent': 'axios/1.6.8',
                            'Content-Length': '119',
                            'Accept-Encoding': 'gzip, compress, deflate, br'
                          },
                          agents: { http: undefined, https: undefined },
                          auth: undefined,
                          family: undefined,
                          beforeRedirect: [Function: dispatchBeforeRedirect],
                          beforeRedirects: { proxy: [Function: beforeRedirect] },
                          hostname: 'accounts.spotify.com',
                          port: 443,
                          agent: undefined,
                          nativeProtocols: [Circular *5],
                          pathname: '/api/token',
                          _defaultAgent: [Circular *3],
                          host: 'accounts.spotify.com',
                          noDelay: true,
                          servername: 'accounts.spotify.com',
                          _agentKey: 'accounts.spotify.com:443:::::::::::::::::::::',
                          encoding: null,
                          singleUse: true
                        }
                      }
                    ]
                  },
                  freeSockets: [Object: null prototype] {},
                  keepAliveMsecs: 1000,
                  keepAlive: false,
                  maxSockets: Infinity,
                  maxFreeSockets: 256,
                  scheduling: 'lifo',
                  maxTotalSockets: Infinity,
                  totalSocketCount: 1,
                  maxCachedSessions: 100,
                  _sessionCache: {
                    map: {
                      'www.wikidata.org:443:::::::::::::::::::::': <Buffer 30 82 08 7d 02 01 01 02 02 03 04 04 02 13 02 04 20 49 81 10 e3 ea 7d 84 9b e4 63 a1 f3 bf 02 aa db cd 63 84 bf 4f 51 15 cc 96 ff a3 1c ef 0f 60 a7 04 ... 2127 more bytes>
                    },
                    list: [ 'www.wikidata.org:443:::::::::::::::::::::' ]
                  },
                  [Symbol(kCapture)]: false
                },
                Server: [Function: Server],
                createServer: [Function: createServer],
                get: [Function: get],
                request: [Function: request]
              }
            },
            pathname: '/w/rest.php/oauth2/access_token',
            _defaultAgent: <ref *3> Agent {
              _events: [Object: null prototype] {
                free: [Function (anonymous)],
                newListener: [Function: maybeEnableKeylog]
              },
              _eventsCount: 2,
              _maxListeners: undefined,
              defaultPort: 443,
              protocol: 'https:',
              options: [Object: null prototype] { noDelay: true, path: null },
              requests: [Object: null prototype] {},
              sockets: [Object: null prototype] {
                'accounts.spotify.com:443:::::::::::::::::::::': [
                  <ref *2> TLSSocket {
                    _tlsOptions: {
                      allowHalfOpen: undefined,
                      pipe: false,
                      secureContext: SecureContext { context: SecureContext {} },
                      isServer: false,
                      requestCert: true,
                      rejectUnauthorized: true,
                      session: undefined,
                      ALPNProtocols: undefined,
                      requestOCSP: undefined,
                      enableTrace: undefined,
                      pskCallback: undefined,
                      highWaterMark: undefined,
                      onread: undefined,
                      signal: undefined
                    },
                    _secureEstablished: false,
                    _securePending: false,
                    _newSessionPending: false,
                    _controlReleased: true,
                    secureConnecting: true,
                    _SNICallback: null,
                    servername: null,
                    alpnProtocol: null,
                    authorized: false,
                    authorizationError: null,
                    encrypted: true,
                    _events: [Object: null prototype] {
                      close: [
                        [Function: onSocketCloseDestroySSL],
                        [Function: bound onceWrapper] {
                          listener: [Function (anonymous)]
                        },
                        [Function: onClose],
                        [Function: socketCloseListener],
                        [Function: bound onceWrapper] {
                          listener: [Function: onClose]
                        }
                      ],
                      end: [
                        [Function: onConnectEnd],
                        [Function: onReadableStreamEnd],
                        [Function: socketOnEnd]
                      ],
                      newListener: [Function: keylogNewListener],
                      connect: [
                        [Function: bound onceWrapper] {
                          listener: [Function (anonymous)]
                        },
                        [Function: bound onceWrapper] {
                          listener: [Function (anonymous)]
                        },
                        [Function: bound onceWrapper] {
                          listener: [Function: connect]
                        }
                      ],
                      secure: [Function: onConnectSecure],
                      session: [Function (anonymous)],
                      free: [Function: onFree],
                      timeout: [Function: onTimeout],
                      agentRemove: [Function: onRemove],
                      error: [Function: socketErrorListener],
                      data: [Function: socketOnData],
                      drain: [Function: ondrain]
                    },
                    _eventsCount: 12,
                    connecting: true,
                    _hadError: false,
                    _parent: null,
                    _host: 'accounts.spotify.com',
                    _closeAfterHandlingError: false,
                    _readableState: ReadableState {
                      objectMode: false,
                      highWaterMark: 16384,
                      buffer: BufferList { head: null, tail: null, length: 0 },
                      length: 0,
                      pipes: [],
                      flowing: true,
                      ended: false,
                      endEmitted: false,
                      reading: true,
                      constructed: true,
                      sync: false,
                      needReadable: true,
                      emittedReadable: false,
                      readableListening: false,
                      resumeScheduled: false,
                      errorEmitted: false,
                      emitClose: false,
                      autoDestroy: true,
                      destroyed: false,
                      errored: null,
                      closed: false,
                      closeEmitted: false,
                      defaultEncoding: 'utf8',
                      awaitDrainWriters: null,
                      multiAwaitDrain: false,
                      readingMore: false,
                      dataEmitted: false,
                      decoder: null,
                      encoding: null,
                      [Symbol(kPaused)]: false
                    },
                    _maxListeners: undefined,
                    _writableState: WritableState {
                      objectMode: false,
                      highWaterMark: 16384,
                      finalCalled: false,
                      needDrain: false,
                      ending: false,
                      ended: false,
                      finished: false,
                      destroyed: false,
                      decodeStrings: false,
                      defaultEncoding: 'utf8',
                      length: 378,
                      writing: true,
                      corked: 0,
                      sync: false,
                      bufferProcessing: false,
                      onwrite: [Function: bound onwrite],
                      writecb: [Function (anonymous)],
                      writelen: 378,
                      afterWriteTickInfo: null,
                      buffered: [],
                      bufferedIndex: 0,
                      allBuffers: true,
                      allNoop: true,
                      pendingcb: 1,
                      constructed: true,
                      prefinished: false,
                      errorEmitted: false,
                      emitClose: false,
                      autoDestroy: true,
                      errored: null,
                      closed: false,
                      closeEmitted: false,
                      [Symbol(kOnFinished)]: []
                    },
                    allowHalfOpen: false,
                    _sockname: null,
                    _pendingData: [
                      {
                        chunk: 'POST /api/token HTTP/1.1\r\n' +
                          'Accept: application/json, text/plain, */*\r\n' +
                          'Content-Type: application/x-www-form-urlencoded\r\n' +
                          'User-Agent: axios/1.6.8\r\n' +
                          'Content-Length: 119\r\n' +
                          'Accept-Encoding: gzip, compress, deflate, br\r\n' +
                          'Host: accounts.spotify.com\r\n' +
                          'Connection: close\r\n' +
                          '\r\n',
                        encoding: 'latin1',
                        callback: [Function: nop]
                      },
                      {
                        chunk: <Buffer 67 72 61 6e 74 5f 74 79 70 65 3d 63 6c 69 65 6e 74 5f 63 72 65 64 65 6e 74 69 61 6c 73 26 63 6c 69 65 6e 74 5f 69 64 3d 65 62 63 63 39 39 31 32 34 30 ... 69 more bytes>,
                        encoding: 'buffer',
                        callback: [Function (anonymous)]
                      },
                      allBuffers: false
                    ],
                    _pendingEncoding: '',
                    server: undefined,
                    _server: null,
                    ssl: TLSWrap {
                      _parent: TCP {
                        reading: [Getter/Setter],
                        onconnection: null,
                        [Symbol(owner_symbol)]: [Circular *2]
                      },
                      _parentWrap: undefined,
                      _secureContext: SecureContext { context: SecureContext {} },
                      reading: false,
                      onkeylog: [Function: onkeylog],
                      onhandshakestart: {},
                      onhandshakedone: [Function (anonymous)],
                      onocspresponse: [Function: onocspresponse],
                      onnewsession: [Function: onnewsessionclient],
                      onerror: [Function: onerror],
                      [Symbol(owner_symbol)]: [Circular *2]
                    },
                    _requestCert: true,
                    _rejectUnauthorized: true,
                    parser: <ref *4> HTTPParser {
                      '0': null,
                      '1': [Function: parserOnHeaders],
                      '2': [Function: parserOnHeadersComplete],
                      '3': [Function: parserOnBody],
                      '4': [Function: parserOnMessageComplete],
                      '5': null,
                      '6': null,
                      _headers: [],
                      _url: '',
                      socket: [Circular *2],
                      incoming: null,
                      outgoing: <ref *6> ClientRequest {
                        _events: [Object: null prototype] {
                          response: [Function: bound onceWrapper] {
                            listener: [Function (anonymous)]
                          },
                          abort: [Function (anonymous)],
                          aborted: [Function (anonymous)],
                          connect: [Function (anonymous)],
                          error: [Function (anonymous)],
                          socket: [Function (anonymous)],
                          timeout: [Function (anonymous)]
                        },
                        _eventsCount: 7,
                        _maxListeners: undefined,
                        outputData: [],
                        outputSize: 0,
                        writable: true,
                        destroyed: false,
                        _last: true,
                        chunkedEncoding: false,
                        shouldKeepAlive: false,
                        maxRequestsOnConnectionReached: false,
                        _defaultKeepAlive: true,
                        useChunkedEncodingByDefault: true,
                        sendDate: false,
                        _removedConnection: false,
                        _removedContLen: false,
                        _removedTE: false,
                        strictContentLength: false,
                        _contentLength: '119',
                        _hasBody: true,
                        _trailer: '',
                        finished: false,
                        _headerSent: true,
                        _closed: false,
                        socket: [Circular *2],
                        _header: 'POST /api/token HTTP/1.1\r\n' +
                          'Accept: application/json, text/plain, */*\r\n' +
                          'Content-Type: application/x-www-form-urlencoded\r\n' +
                          'User-Agent: axios/1.6.8\r\n' +
                          'Content-Length: 119\r\n' +
                          'Accept-Encoding: gzip, compress, deflate, br\r\n' +
                          'Host: accounts.spotify.com\r\n' +
                          'Connection: close\r\n' +
                          '\r\n',
                        _keepAliveTimeout: 0,
                        _onPendingData: [Function: nop],
                        agent: [Circular *3],
                        socketPath: undefined,
                        method: 'POST',
                        maxHeaderSize: undefined,
                        insecureHTTPParser: undefined,
                        joinDuplicateHeaders: undefined,
                        path: '/api/token',
                        _ended: false,
                        res: null,
                        aborted: false,
                        timeoutCb: null,
                        upgradeOrConnect: false,
                        parser: [Circular *4],
                        maxHeadersCount: null,
                        reusedSocket: false,
                        host: 'accounts.spotify.com',
                        protocol: 'https:',
                        _redirectable: Writable {
                          _writableState: WritableState {
                            objectMode: false,
                            highWaterMark: 16384,
                            finalCalled: false,
                            needDrain: false,
                            ending: false,
                            ended: false,
                            finished: false,
                            destroyed: false,
                            decodeStrings: true,
                            defaultEncoding: 'utf8',
                            length: 0,
                            writing: false,
                            corked: 0,
                            sync: true,
                            bufferProcessing: false,
                            onwrite: [Function: bound onwrite],
                            writecb: null,
                            writelen: 0,
                            afterWriteTickInfo: null,
                            buffered: [],
                            bufferedIndex: 0,
                            allBuffers: true,
                            allNoop: true,
                            pendingcb: 0,
                            constructed: true,
                            prefinished: false,
                            errorEmitted: false,
                            emitClose: true,
                            autoDestroy: true,
                            errored: null,
                            closed: false,
                            closeEmitted: false,
                            [Symbol(kOnFinished)]: []
                          },
                          _events: [Object: null prototype] {
                            response: [Function: handleResponse],
                            error: [Function: handleRequestError],
                            socket: [Function: handleRequestSocket]
                          },
                          _eventsCount: 3,
                          _maxListeners: undefined,
                          _options: {
                            maxRedirects: 21,
                            maxBodyLength: Infinity,
                            protocol: 'https:',
                            path: '/api/token',
                            method: 'POST',
                            headers: [Object: null prototype] {
                              Accept: 'application/json, text/plain, */*',
                              'Content-Type': 'application/x-www-form-urlencoded',
                              'User-Agent': 'axios/1.6.8',
                              'Content-Length': '119',
                              'Accept-Encoding': 'gzip, compress, deflate, br'
                            },
                            agents: { http: undefined, https: undefined },
                            auth: undefined,
                            family: undefined,
                            beforeRedirect: [Function: dispatchBeforeRedirect],
                            beforeRedirects: { proxy: [Function: beforeRedirect] },
                            hostname: 'accounts.spotify.com',
                            port: '',
                            agent: undefined,
                            nativeProtocols: <ref *5> {
                              'http:': {
                                _connectionListener: [Function: connectionListener],
                                METHODS: [
                                  'ACL',         'BIND',       'CHECKOUT',
                                  'CONNECT',     'COPY',       'DELETE',
                                  'GET',         'HEAD',       'LINK',
                                  'LOCK',        'M-SEARCH',   'MERGE',
                                  'MKACTIVITY',  'MKCALENDAR', 'MKCOL',
                                  'MOVE',        'NOTIFY',     'OPTIONS',
                                  'PATCH',       'POST',       'PROPFIND',
                                  'PROPPATCH',   'PURGE',      'PUT',
                                  'REBIND',      'REPORT',     'SEARCH',
                                  'SOURCE',      'SUBSCRIBE',  'TRACE',
                                  'UNBIND',      'UNLINK',     'UNLOCK',
                                  'UNSUBSCRIBE'
                                ],
                                STATUS_CODES: {
                                  '100': 'Continue',
                                  '101': 'Switching Protocols',
                                  '102': 'Processing',
                                  '103': 'Early Hints',
                                  '200': 'OK',
                                  '201': 'Created',
                                  '202': 'Accepted',
                                  '203': 'Non-Authoritative Information',
                                  '204': 'No Content',
                                  '205': 'Reset Content',
                                  '206': 'Partial Content',
                                  '207': 'Multi-Status',
                                  '208': 'Already Reported',
                                  '226': 'IM Used',
                                  '300': 'Multiple Choices',
                                  '301': 'Moved Permanently',
                                  '302': 'Found',
                                  '303': 'See Other',
                                  '304': 'Not Modified',
                                  '305': 'Use Proxy',
                                  '307': 'Temporary Redirect',
                                  '308': 'Permanent Redirect',
                                  '400': 'Bad Request',
                                  '401': 'Unauthorized',
                                  '402': 'Payment Required',
                                  '403': 'Forbidden',
                                  '404': 'Not Found',
                                  '405': 'Method Not Allowed',
                                  '406': 'Not Acceptable',
                                  '407': 'Proxy Authentication Required',
                                  '408': 'Request Timeout',
                                  '409': 'Conflict',
                                  '410': 'Gone',
                                  '411': 'Length Required',
                                  '412': 'Precondition Failed',
                                  '413': 'Payload Too Large',
                                  '414': 'URI Too Long',
                                  '415': 'Unsupported Media Type',
                                  '416': 'Range Not Satisfiable',
                                  '417': 'Expectation Failed',
                                  '418': "I'm a Teapot",
                                  '421': 'Misdirected Request',
                                  '422': 'Unprocessable Entity',
                                  '423': 'Locked',
                                  '424': 'Failed Dependency',
                                  '425': 'Too Early',
                                  '426': 'Upgrade Required',
                                  '428': 'Precondition Required',
                                  '429': 'Too Many Requests',
                                  '431': 'Request Header Fields Too Large',
                                  '451': 'Unavailable For Legal Reasons',
                                  '500': 'Internal Server Error',
                                  '501': 'Not Implemented',
                                  '502': 'Bad Gateway',
                                  '503': 'Service Unavailable',
                                  '504': 'Gateway Timeout',
                                  '505': 'HTTP Version Not Supported',
                                  '506': 'Variant Also Negotiates',
                                  '507': 'Insufficient Storage',
                                  '508': 'Loop Detected',
                                  '509': 'Bandwidth Limit Exceeded',
                                  '510': 'Not Extended',
                                  '511': 'Network Authentication Required'
                                },
                                Agent: [Function: Agent] {
                                  defaultMaxSockets: Infinity
                                },
                                ClientRequest: [Function: ClientRequest],
                                IncomingMessage: [Function: IncomingMessage],
                                OutgoingMessage: [Function: OutgoingMessage],
                                Server: [Function: Server],
                                ServerResponse: [Function: ServerResponse],
                                createServer: [Function: createServer],
                                validateHeaderName: [Function: __node_internal_],
                                validateHeaderValue: [Function: __node_internal_],
                                get: [Function: get],
                                request: [Function: request],
                                setMaxIdleHTTPParsers: [Function: setMaxIdleHTTPParsers],
                                maxHeaderSize: [Getter],
                                globalAgent: [Getter/Setter]
                              },
                              'https:': {
                                Agent: [Function: Agent],
                                globalAgent: [Circular *3],
                                Server: [Function: Server],
                                createServer: [Function: createServer],
                                get: [Function: get],
                                request: [Function: request]
                              }
                            },
                            pathname: '/api/token'
                          },
                          _ended: false,
                          _ending: true,
                          _redirectCount: 0,
                          _redirects: [],
                          _requestBodyLength: 119,
                          _requestBodyBuffers: [
                            {
                              data: <Buffer 67 72 61 6e 74 5f 74 79 70 65 3d 63 6c 69 65 6e 74 5f 63 72 65 64 65 6e 74 69 61 6c 73 26 63 6c 69 65 6e 74 5f 69 64 3d 65 62 63 63 39 39 31 32 34 30 ... 69 more bytes>,
                              encoding: undefined
                            }
                          ],
                          _onNativeResponse: [Function (anonymous)],
                          _currentRequest: [Circular *6],
                          _currentUrl: 'https://accounts.spotify.com/api/token',
                          [Symbol(kCapture)]: false
                        },
                        [Symbol(kCapture)]: false,
                        [Symbol(kBytesWritten)]: 0,
                        [Symbol(kEndCalled)]: false,
                        [Symbol(kNeedDrain)]: false,
                        [Symbol(corked)]: 0,
                        [Symbol(kOutHeaders)]: [Object: null prototype] {
                          accept: [
                            'Accept',
                            'application/json, text/plain, */*'
                          ],
                          'content-type': [
                            'Content-Type',
                            'application/x-www-form-urlencoded'
                          ],
                          'user-agent': [ 'User-Agent', 'axios/1.6.8' ],
                          'content-length': [ 'Content-Length', '119' ],
                          'accept-encoding': [
                            'Accept-Encoding',
                            'gzip, compress, deflate, br'
                          ],
                          host: [ 'Host', 'accounts.spotify.com' ]
                        },
                        [Symbol(errored)]: null,
                        [Symbol(kUniqueHeaders)]: null
                      },
                      maxHeaderPairs: 2000,
                      _consumed: false,
                      onIncoming: [Function: parserOnIncomingClient],
                      joinDuplicateHeaders: undefined,
                      [Symbol(resource_symbol)]: HTTPClientAsyncResource {
                        type: 'HTTPINCOMINGMESSAGE',
                        req: <ref *6> ClientRequest {
                          _events: [Object: null prototype] {
                            response: [Function: bound onceWrapper] {
                              listener: [Function (anonymous)]
                            },
                            abort: [Function (anonymous)],
                            aborted: [Function (anonymous)],
                            connect: [Function (anonymous)],
                            error: [Function (anonymous)],
                            socket: [Function (anonymous)],
                            timeout: [Function (anonymous)]
                          },
                          _eventsCount: 7,
                          _maxListeners: undefined,
                          outputData: [],
                          outputSize: 0,
                          writable: true,
                          destroyed: false,
                          _last: true,
                          chunkedEncoding: false,
                          shouldKeepAlive: false,
                          maxRequestsOnConnectionReached: false,
                          _defaultKeepAlive: true,
                          useChunkedEncodingByDefault: true,
                          sendDate: false,
                          _removedConnection: false,
                          _removedContLen: false,
                          _removedTE: false,
                          strictContentLength: false,
                          _contentLength: '119',
                          _hasBody: true,
                          _trailer: '',
                          finished: false,
                          _headerSent: true,
                          _closed: false,
                          socket: [Circular *2],
                          _header: 'POST /api/token HTTP/1.1\r\n' +
                            'Accept: application/json, text/plain, */*\r\n' +
                            'Content-Type: application/x-www-form-urlencoded\r\n' +
                            'User-Agent: axios/1.6.8\r\n' +
                            'Content-Length: 119\r\n' +
                            'Accept-Encoding: gzip, compress, deflate, br\r\n' +
                            'Host: accounts.spotify.com\r\n' +
                            'Connection: close\r\n' +
                            '\r\n',
                          _keepAliveTimeout: 0,
                          _onPendingData: [Function: nop],
                          agent: [Circular *3],
                          socketPath: undefined,
                          method: 'POST',
                          maxHeaderSize: undefined,
                          insecureHTTPParser: undefined,
                          joinDuplicateHeaders: undefined,
                          path: '/api/token',
                          _ended: false,
                          res: null,
                          aborted: false,
                          timeoutCb: null,
                          upgradeOrConnect: false,
                          parser: [Circular *4],
                          maxHeadersCount: null,
                          reusedSocket: false,
                          host: 'accounts.spotify.com',
                          protocol: 'https:',
                          _redirectable: Writable {
                            _writableState: WritableState {
                              objectMode: false,
                              highWaterMark: 16384,
                              finalCalled: false,
                              needDrain: false,
                              ending: false,
                              ended: false,
                              finished: false,
                              destroyed: false,
                              decodeStrings: true,
                              defaultEncoding: 'utf8',
                              length: 0,
                              writing: false,
                              corked: 0,
                              sync: true,
                              bufferProcessing: false,
                              onwrite: [Function: bound onwrite],
                              writecb: null,
                              writelen: 0,
                              afterWriteTickInfo: null,
                              buffered: [],
                              bufferedIndex: 0,
                              allBuffers: true,
                              allNoop: true,
                              pendingcb: 0,
                              constructed: true,
                              prefinished: false,
                              errorEmitted: false,
                              emitClose: true,
                              autoDestroy: true,
                              errored: null,
                              closed: false,
                              closeEmitted: false,
                              [Symbol(kOnFinished)]: []
                            },
                            _events: [Object: null prototype] {
                              response: [Function: handleResponse],
                              error: [Function: handleRequestError],
                              socket: [Function: handleRequestSocket]
                            },
                            _eventsCount: 3,
                            _maxListeners: undefined,
                            _options: {
                              maxRedirects: 21,
                              maxBodyLength: Infinity,
                              protocol: 'https:',
                              path: '/api/token',
                              method: 'POST',
                              headers: [Object: null prototype] {
                                Accept: 'application/json, text/plain, */*',
                                'Content-Type': 'application/x-www-form-urlencoded',
                                'User-Agent': 'axios/1.6.8',
                                'Content-Length': '119',
                                'Accept-Encoding': 'gzip, compress, deflate, br'
                              },
                              agents: { http: undefined, https: undefined },
                              auth: undefined,
                              family: undefined,
                              beforeRedirect: [Function: dispatchBeforeRedirect],
                              beforeRedirects: { proxy: [Function: beforeRedirect] },
                              hostname: 'accounts.spotify.com',
                              port: '',
                              agent: undefined,
                              nativeProtocols: <ref *5> {
                                'http:': {
                                  _connectionListener: [Function: connectionListener],
                                  METHODS: [
                                    'ACL',         'BIND',       'CHECKOUT',
                                    'CONNECT',     'COPY',       'DELETE',
                                    'GET',         'HEAD',       'LINK',
                                    'LOCK',        'M-SEARCH',   'MERGE',
                                    'MKACTIVITY',  'MKCALENDAR', 'MKCOL',
                                    'MOVE',        'NOTIFY',     'OPTIONS',
                                    'PATCH',       'POST',       'PROPFIND',
                                    'PROPPATCH',   'PURGE',      'PUT',
                                    'REBIND',      'REPORT',     'SEARCH',
                                    'SOURCE',      'SUBSCRIBE',  'TRACE',
                                    'UNBIND',      'UNLINK',     'UNLOCK',
                                    'UNSUBSCRIBE'
                                  ],
                                  STATUS_CODES: {
                                    '100': 'Continue',
                                    '101': 'Switching Protocols',
                                    '102': 'Processing',
                                    '103': 'Early Hints',
                                    '200': 'OK',
                                    '201': 'Created',
                                    '202': 'Accepted',
                                    '203': 'Non-Authoritative Information',
                                    '204': 'No Content',
                                    '205': 'Reset Content',
                                    '206': 'Partial Content',
                                    '207': 'Multi-Status',
                                    '208': 'Already Reported',
                                    '226': 'IM Used',
                                    '300': 'Multiple Choices',
                                    '301': 'Moved Permanently',
                                    '302': 'Found',
                                    '303': 'See Other',
                                    '304': 'Not Modified',
                                    '305': 'Use Proxy',
                                    '307': 'Temporary Redirect',
                                    '308': 'Permanent Redirect',
                                    '400': 'Bad Request',
                                    '401': 'Unauthorized',
                                    '402': 'Payment Required',
                                    '403': 'Forbidden',
                                    '404': 'Not Found',
                                    '405': 'Method Not Allowed',
                                    '406': 'Not Acceptable',
                                    '407': 'Proxy Authentication Required',
                                    '408': 'Request Timeout',
                                    '409': 'Conflict',
                                    '410': 'Gone',
                                    '411': 'Length Required',
                                    '412': 'Precondition Failed',
                                    '413': 'Payload Too Large',
                                    '414': 'URI Too Long',
                                    '415': 'Unsupported Media Type',
                                    '416': 'Range Not Satisfiable',
                                    '417': 'Expectation Failed',
                                    '418': "I'm a Teapot",
                                    '421': 'Misdirected Request',
                                    '422': 'Unprocessable Entity',
                                    '423': 'Locked',
                                    '424': 'Failed Dependency',
                                    '425': 'Too Early',
                                    '426': 'Upgrade Required',
                                    '428': 'Precondition Required',
                                    '429': 'Too Many Requests',
                                    '431': 'Request Header Fields Too Large',
                                    '451': 'Unavailable For Legal Reasons',
                                    '500': 'Internal Server Error',
                                    '501': 'Not Implemented',
                                    '502': 'Bad Gateway',
                                    '503': 'Service Unavailable',
                                    '504': 'Gateway Timeout',
                                    '505': 'HTTP Version Not Supported',
                                    '506': 'Variant Also Negotiates',
                                    '507': 'Insufficient Storage',
                                    '508': 'Loop Detected',
                                    '509': 'Bandwidth Limit Exceeded',
                                    '510': 'Not Extended',
                                    '511': 'Network Authentication Required'
                                  },
                                  Agent: [Function: Agent] {
                                    defaultMaxSockets: Infinity
                                  },
                                  ClientRequest: [Function: ClientRequest],
                                  IncomingMessage: [Function: IncomingMessage],
                                  OutgoingMessage: [Function: OutgoingMessage],
                                  Server: [Function: Server],
                                  ServerResponse: [Function: ServerResponse],
                                  createServer: [Function: createServer],
                                  validateHeaderName: [Function: __node_internal_],
                                  validateHeaderValue: [Function: __node_internal_],
                                  get: [Function: get],
                                  request: [Function: request],
                                  setMaxIdleHTTPParsers: [Function: setMaxIdleHTTPParsers],
                                  maxHeaderSize: [Getter],
                                  globalAgent: [Getter/Setter]
                                },
                                'https:': {
                                  Agent: [Function: Agent],
                                  globalAgent: [Circular *3],
                                  Server: [Function: Server],
                                  createServer: [Function: createServer],
                                  get: [Function: get],
                                  request: [Function: request]
                                }
                              },
                              pathname: '/api/token'
                            },
                            _ended: false,
                            _ending: true,
                            _redirectCount: 0,
                            _redirects: [],
                            _requestBodyLength: 119,
                            _requestBodyBuffers: [
                              {
                                data: <Buffer 67 72 61 6e 74 5f 74 79 70 65 3d 63 6c 69 65 6e 74 5f 63 72 65 64 65 6e 74 69 61 6c 73 26 63 6c 69 65 6e 74 5f 69 64 3d 65 62 63 63 39 39 31 32 34 30 ... 69 more bytes>,
                                encoding: undefined
                              }
                            ],
                            _onNativeResponse: [Function (anonymous)],
                            _currentRequest: [Circular *6],
                            _currentUrl: 'https://accounts.spotify.com/api/token',
                            [Symbol(kCapture)]: false
                          },
                          [Symbol(kCapture)]: false,
                          [Symbol(kBytesWritten)]: 0,
                          [Symbol(kEndCalled)]: false,
                          [Symbol(kNeedDrain)]: false,
                          [Symbol(corked)]: 0,
                          [Symbol(kOutHeaders)]: [Object: null prototype] {
                            accept: [
                              'Accept',
                              'application/json, text/plain, */*'
                            ],
                            'content-type': [
                              'Content-Type',
                              'application/x-www-form-urlencoded'
                            ],
                            'user-agent': [ 'User-Agent', 'axios/1.6.8' ],
                            'content-length': [ 'Content-Length', '119' ],
                            'accept-encoding': [
                              'Accept-Encoding',
                              'gzip, compress, deflate, br'
                            ],
                            host: [ 'Host', 'accounts.spotify.com' ]
                          },
                          [Symbol(errored)]: null,
                          [Symbol(kUniqueHeaders)]: null
                        }
                      }
                    },
                    _httpMessage: <ref *6> ClientRequest {
                      _events: [Object: null prototype] {
                        response: [Function: bound onceWrapper] {
                          listener: [Function (anonymous)]
                        },
                        abort: [Function (anonymous)],
                        aborted: [Function (anonymous)],
                        connect: [Function (anonymous)],
                        error: [Function (anonymous)],
                        socket: [Function (anonymous)],
                        timeout: [Function (anonymous)]
                      },
                      _eventsCount: 7,
                      _maxListeners: undefined,
                      outputData: [],
                      outputSize: 0,
                      writable: true,
                      destroyed: false,
                      _last: true,
                      chunkedEncoding: false,
                      shouldKeepAlive: false,
                      maxRequestsOnConnectionReached: false,
                      _defaultKeepAlive: true,
                      useChunkedEncodingByDefault: true,
                      sendDate: false,
                      _removedConnection: false,
                      _removedContLen: false,
                      _removedTE: false,
                      strictContentLength: false,
                      _contentLength: '119',
                      _hasBody: true,
                      _trailer: '',
                      finished: false,
                      _headerSent: true,
                      _closed: false,
                      socket: [Circular *2],
                      _header: 'POST /api/token HTTP/1.1\r\n' +
                        'Accept: application/json, text/plain, */*\r\n' +
                        'Content-Type: application/x-www-form-urlencoded\r\n' +
                        'User-Agent: axios/1.6.8\r\n' +
                        'Content-Length: 119\r\n' +
                        'Accept-Encoding: gzip, compress, deflate, br\r\n' +
                        'Host: accounts.spotify.com\r\n' +
                        'Connection: close\r\n' +
                        '\r\n',
                      _keepAliveTimeout: 0,
                      _onPendingData: [Function: nop],
                      agent: [Circular *3],
                      socketPath: undefined,
                      method: 'POST',
                      maxHeaderSize: undefined,
                      insecureHTTPParser: undefined,
                      joinDuplicateHeaders: undefined,
                      path: '/api/token',
                      _ended: false,
                      res: null,
                      aborted: false,
                      timeoutCb: null,
                      upgradeOrConnect: false,
                      parser: <ref *4> HTTPParser {
                        '0': null,
                        '1': [Function: parserOnHeaders],
                        '2': [Function: parserOnHeadersComplete],
                        '3': [Function: parserOnBody],
                        '4': [Function: parserOnMessageComplete],
                        '5': null,
                        '6': null,
                        _headers: [],
                        _url: '',
                        socket: [Circular *2],
                        incoming: null,
                        outgoing: [Circular *6],
                        maxHeaderPairs: 2000,
                        _consumed: false,
                        onIncoming: [Function: parserOnIncomingClient],
                        joinDuplicateHeaders: undefined,
                        [Symbol(resource_symbol)]: HTTPClientAsyncResource {
                          type: 'HTTPINCOMINGMESSAGE',
                          req: [Circular *6]
                        }
                      },
                      maxHeadersCount: null,
                      reusedSocket: false,
                      host: 'accounts.spotify.com',
                      protocol: 'https:',
                      _redirectable: Writable {
                        _writableState: WritableState {
                          objectMode: false,
                          highWaterMark: 16384,
                          finalCalled: false,
                          needDrain: false,
                          ending: false,
                          ended: false,
                          finished: false,
                          destroyed: false,
                          decodeStrings: true,
                          defaultEncoding: 'utf8',
                          length: 0,
                          writing: false,
                          corked: 0,
                          sync: true,
                          bufferProcessing: false,
                          onwrite: [Function: bound onwrite],
                          writecb: null,
                          writelen: 0,
                          afterWriteTickInfo: null,
                          buffered: [],
                          bufferedIndex: 0,
                          allBuffers: true,
                          allNoop: true,
                          pendingcb: 0,
                          constructed: true,
                          prefinished: false,
                          errorEmitted: false,
                          emitClose: true,
                          autoDestroy: true,
                          errored: null,
                          closed: false,
                          closeEmitted: false,
                          [Symbol(kOnFinished)]: []
                        },
                        _events: [Object: null prototype] {
                          response: [Function: handleResponse],
                          error: [Function: handleRequestError],
                          socket: [Function: handleRequestSocket]
                        },
                        _eventsCount: 3,
                        _maxListeners: undefined,
                        _options: {
                          maxRedirects: 21,
                          maxBodyLength: Infinity,
                          protocol: 'https:',
                          path: '/api/token',
                          method: 'POST',
                          headers: [Object: null prototype] {
                            Accept: 'application/json, text/plain, */*',
                            'Content-Type': 'application/x-www-form-urlencoded',
                            'User-Agent': 'axios/1.6.8',
                            'Content-Length': '119',
                            'Accept-Encoding': 'gzip, compress, deflate, br'
                          },
                          agents: { http: undefined, https: undefined },
                          auth: undefined,
                          family: undefined,
                          beforeRedirect: [Function: dispatchBeforeRedirect],
                          beforeRedirects: { proxy: [Function: beforeRedirect] },
                          hostname: 'accounts.spotify.com',
                          port: '',
                          agent: undefined,
                          nativeProtocols: <ref *5> {
                            'http:': {
                              _connectionListener: [Function: connectionListener],
                              METHODS: [
                                'ACL',         'BIND',       'CHECKOUT',
                                'CONNECT',     'COPY',       'DELETE',
                                'GET',         'HEAD',       'LINK',
                                'LOCK',        'M-SEARCH',   'MERGE',
                                'MKACTIVITY',  'MKCALENDAR', 'MKCOL',
                                'MOVE',        'NOTIFY',     'OPTIONS',
                                'PATCH',       'POST',       'PROPFIND',
                                'PROPPATCH',   'PURGE',      'PUT',
                                'REBIND',      'REPORT',     'SEARCH',
                                'SOURCE',      'SUBSCRIBE',  'TRACE',
                                'UNBIND',      'UNLINK',     'UNLOCK',
                                'UNSUBSCRIBE'
                              ],
                              STATUS_CODES: {
                                '100': 'Continue',
                                '101': 'Switching Protocols',
                                '102': 'Processing',
                                '103': 'Early Hints',
                                '200': 'OK',
                                '201': 'Created',
                                '202': 'Accepted',
                                '203': 'Non-Authoritative Information',
                                '204': 'No Content',
                                '205': 'Reset Content',
                                '206': 'Partial Content',
                                '207': 'Multi-Status',
                                '208': 'Already Reported',
                                '226': 'IM Used',
                                '300': 'Multiple Choices',
                                '301': 'Moved Permanently',
                                '302': 'Found',
                                '303': 'See Other',
                                '304': 'Not Modified',
                                '305': 'Use Proxy',
                                '307': 'Temporary Redirect',
                                '308': 'Permanent Redirect',
                                '400': 'Bad Request',
                                '401': 'Unauthorized',
                                '402': 'Payment Required',
                                '403': 'Forbidden',
                                '404': 'Not Found',
                                '405': 'Method Not Allowed',
                                '406': 'Not Acceptable',
                                '407': 'Proxy Authentication Required',
                                '408': 'Request Timeout',
                                '409': 'Conflict',
                                '410': 'Gone',
                                '411': 'Length Required',
                                '412': 'Precondition Failed',
                                '413': 'Payload Too Large',
                                '414': 'URI Too Long',
                                '415': 'Unsupported Media Type',
                                '416': 'Range Not Satisfiable',
                                '417': 'Expectation Failed',
                                '418': "I'm a Teapot",
                                '421': 'Misdirected Request',
                                '422': 'Unprocessable Entity',
                                '423': 'Locked',
                                '424': 'Failed Dependency',
                                '425': 'Too Early',
                                '426': 'Upgrade Required',
                                '428': 'Precondition Required',
                                '429': 'Too Many Requests',
                                '431': 'Request Header Fields Too Large',
                                '451': 'Unavailable For Legal Reasons',
                                '500': 'Internal Server Error',
                                '501': 'Not Implemented',
                                '502': 'Bad Gateway',
                                '503': 'Service Unavailable',
                                '504': 'Gateway Timeout',
                                '505': 'HTTP Version Not Supported',
                                '506': 'Variant Also Negotiates',
                                '507': 'Insufficient Storage',
                                '508': 'Loop Detected',
                                '509': 'Bandwidth Limit Exceeded',
                                '510': 'Not Extended',
                                '511': 'Network Authentication Required'
                              },
                              Agent: [Function: Agent] {
                                defaultMaxSockets: Infinity
                              },
                              ClientRequest: [Function: ClientRequest],
                              IncomingMessage: [Function: IncomingMessage],
                              OutgoingMessage: [Function: OutgoingMessage],
                              Server: [Function: Server],
                              ServerResponse: [Function: ServerResponse],
                              createServer: [Function: createServer],
                              validateHeaderName: [Function: __node_internal_],
                              validateHeaderValue: [Function: __node_internal_],
                              get: [Function: get],
                              request: [Function: request],
                              setMaxIdleHTTPParsers: [Function: setMaxIdleHTTPParsers],
                              maxHeaderSize: [Getter],
                              globalAgent: [Getter/Setter]
                            },
                            'https:': {
                              Agent: [Function: Agent],
                              globalAgent: [Circular *3],
                              Server: [Function: Server],
                              createServer: [Function: createServer],
                              get: [Function: get],
                              request: [Function: request]
                            }
                          },
                          pathname: '/api/token'
                        },
                        _ended: false,
                        _ending: true,
                        _redirectCount: 0,
                        _redirects: [],
                        _requestBodyLength: 119,
                        _requestBodyBuffers: [
                          {
                            data: <Buffer 67 72 61 6e 74 5f 74 79 70 65 3d 63 6c 69 65 6e 74 5f 63 72 65 64 65 6e 74 69 61 6c 73 26 63 6c 69 65 6e 74 5f 69 64 3d 65 62 63 63 39 39 31 32 34 30 ... 69 more bytes>,
                            encoding: undefined
                          }
                        ],
                        _onNativeResponse: [Function (anonymous)],
                        _currentRequest: [Circular *6],
                        _currentUrl: 'https://accounts.spotify.com/api/token',
                        [Symbol(kCapture)]: false
                      },
                      [Symbol(kCapture)]: false,
                      [Symbol(kBytesWritten)]: 0,
                      [Symbol(kEndCalled)]: false,
                      [Symbol(kNeedDrain)]: false,
                      [Symbol(corked)]: 0,
                      [Symbol(kOutHeaders)]: [Object: null prototype] {
                        accept: [
                          'Accept',
                          'application/json, text/plain, */*'
                        ],
                        'content-type': [
                          'Content-Type',
                          'application/x-www-form-urlencoded'
                        ],
                        'user-agent': [ 'User-Agent', 'axios/1.6.8' ],
                        'content-length': [ 'Content-Length', '119' ],
                        'accept-encoding': [
                          'Accept-Encoding',
                          'gzip, compress, deflate, br'
                        ],
                        host: [ 'Host', 'accounts.spotify.com' ]
                      },
                      [Symbol(errored)]: null,
                      [Symbol(kUniqueHeaders)]: null
                    },
                    [Symbol(res)]: TLSWrap {
                      _parent: TCP {
                        reading: [Getter/Setter],
                        onconnection: null,
                        [Symbol(owner_symbol)]: [Circular *2]
                      },
                      _parentWrap: undefined,
                      _secureContext: SecureContext { context: SecureContext {} },
                      reading: false,
                      onkeylog: [Function: onkeylog],
                      onhandshakestart: {},
                      onhandshakedone: [Function (anonymous)],
                      onocspresponse: [Function: onocspresponse],
                      onnewsession: [Function: onnewsessionclient],
                      onerror: [Function: onerror],
                      [Symbol(owner_symbol)]: [Circular *2]
                    },
                    [Symbol(verified)]: false,
                    [Symbol(pendingSession)]: null,
                    [Symbol(async_id_symbol)]: 6,
                    [Symbol(kHandle)]: TLSWrap {
                      _parent: TCP {
                        reading: [Getter/Setter],
                        onconnection: null,
                        [Symbol(owner_symbol)]: [Circular *2]
                      },
                      _parentWrap: undefined,
                      _secureContext: SecureContext { context: SecureContext {} },
                      reading: false,
                      onkeylog: [Function: onkeylog],
                      onhandshakestart: {},
                      onhandshakedone: [Function (anonymous)],
                      onocspresponse: [Function: onocspresponse],
                      onnewsession: [Function: onnewsessionclient],
                      onerror: [Function: onerror],
                      [Symbol(owner_symbol)]: [Circular *2]
                    },
                    [Symbol(lastWriteQueueSize)]: 0,
                    [Symbol(timeout)]: null,
                    [Symbol(kBuffer)]: null,
                    [Symbol(kBufferCb)]: null,
                    [Symbol(kBufferGen)]: null,
                    [Symbol(kCapture)]: false,
                    [Symbol(kSetNoDelay)]: false,
                    [Symbol(kSetKeepAlive)]: true,
                    [Symbol(kSetKeepAliveInitialDelay)]: 60,
                    [Symbol(kBytesRead)]: 0,
                    [Symbol(kBytesWritten)]: 0,
                    [Symbol(connect-options)]: {
                      rejectUnauthorized: true,
                      ciphers: 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
                      checkServerIdentity: [Function: checkServerIdentity],
                      minDHSize: 1024,
                      maxRedirects: 21,
                      maxBodyLength: Infinity,
                      protocol: 'https:',
                      path: null,
                      method: 'POST',
                      headers: [Object: null prototype] {
                        Accept: 'application/json, text/plain, */*',
                        'Content-Type': 'application/x-www-form-urlencoded',
                        'User-Agent': 'axios/1.6.8',
                        'Content-Length': '119',
                        'Accept-Encoding': 'gzip, compress, deflate, br'
                      },
                      agents: { http: undefined, https: undefined },
                      auth: undefined,
                      family: undefined,
                      beforeRedirect: [Function: dispatchBeforeRedirect],
                      beforeRedirects: { proxy: [Function: beforeRedirect] },
                      hostname: 'accounts.spotify.com',
                      port: 443,
                      agent: undefined,
                      nativeProtocols: <ref *5> {
                        'http:': {
                          _connectionListener: [Function: connectionListener],
                          METHODS: [
                            'ACL',         'BIND',       'CHECKOUT',
                            'CONNECT',     'COPY',       'DELETE',
                            'GET',         'HEAD',       'LINK',
                            'LOCK',        'M-SEARCH',   'MERGE',
                            'MKACTIVITY',  'MKCALENDAR', 'MKCOL',
                            'MOVE',        'NOTIFY',     'OPTIONS',
                            'PATCH',       'POST',       'PROPFIND',
                            'PROPPATCH',   'PURGE',      'PUT',
                            'REBIND',      'REPORT',     'SEARCH',
                            'SOURCE',      'SUBSCRIBE',  'TRACE',
                            'UNBIND',      'UNLINK',     'UNLOCK',
                            'UNSUBSCRIBE'
                          ],
                          STATUS_CODES: {
                            '100': 'Continue',
                            '101': 'Switching Protocols',
                            '102': 'Processing',
                            '103': 'Early Hints',
                            '200': 'OK',
                            '201': 'Created',
                            '202': 'Accepted',
                            '203': 'Non-Authoritative Information',
                            '204': 'No Content',
                            '205': 'Reset Content',
                            '206': 'Partial Content',
                            '207': 'Multi-Status',
                            '208': 'Already Reported',
                            '226': 'IM Used',
                            '300': 'Multiple Choices',
                            '301': 'Moved Permanently',
                            '302': 'Found',
                            '303': 'See Other',
                            '304': 'Not Modified',
                            '305': 'Use Proxy',
                            '307': 'Temporary Redirect',
                            '308': 'Permanent Redirect',
                            '400': 'Bad Request',
                            '401': 'Unauthorized',
                            '402': 'Payment Required',
                            '403': 'Forbidden',
                            '404': 'Not Found',
                            '405': 'Method Not Allowed',
                            '406': 'Not Acceptable',
                            '407': 'Proxy Authentication Required',
                            '408': 'Request Timeout',
                            '409': 'Conflict',
                            '410': 'Gone',
                            '411': 'Length Required',
                            '412': 'Precondition Failed',
                            '413': 'Payload Too Large',
                            '414': 'URI Too Long',
                            '415': 'Unsupported Media Type',
                            '416': 'Range Not Satisfiable',
                            '417': 'Expectation Failed',
                            '418': "I'm a Teapot",
                            '421': 'Misdirected Request',
                            '422': 'Unprocessable Entity',
                            '423': 'Locked',
                            '424': 'Failed Dependency',
                            '425': 'Too Early',
                            '426': 'Upgrade Required',
                            '428': 'Precondition Required',
                            '429': 'Too Many Requests',
                            '431': 'Request Header Fields Too Large',
                            '451': 'Unavailable For Legal Reasons',
                            '500': 'Internal Server Error',
                            '501': 'Not Implemented',
                            '502': 'Bad Gateway',
                            '503': 'Service Unavailable',
                            '504': 'Gateway Timeout',
                            '505': 'HTTP Version Not Supported',
                            '506': 'Variant Also Negotiates',
                            '507': 'Insufficient Storage',
                            '508': 'Loop Detected',
                            '509': 'Bandwidth Limit Exceeded',
                            '510': 'Not Extended',
                            '511': 'Network Authentication Required'
                          },
                          Agent: [Function: Agent] {
                            defaultMaxSockets: Infinity
                          },
                          ClientRequest: [Function: ClientRequest],
                          IncomingMessage: [Function: IncomingMessage],
                          OutgoingMessage: [Function: OutgoingMessage],
                          Server: [Function: Server],
                          ServerResponse: [Function: ServerResponse],
                          createServer: [Function: createServer],
                          validateHeaderName: [Function: __node_internal_],
                          validateHeaderValue: [Function: __node_internal_],
                          get: [Function: get],
                          request: [Function: request],
                          setMaxIdleHTTPParsers: [Function: setMaxIdleHTTPParsers],
                          maxHeaderSize: [Getter],
                          globalAgent: [Getter/Setter]
                        },
                        'https:': {
                          Agent: [Function: Agent],
                          globalAgent: [Circular *3],
                          Server: [Function: Server],
                          createServer: [Function: createServer],
                          get: [Function: get],
                          request: [Function: request]
                        }
                      },
                      pathname: '/api/token',
                      _defaultAgent: [Circular *3],
                      host: 'accounts.spotify.com',
                      noDelay: true,
                      servername: 'accounts.spotify.com',
                      _agentKey: 'accounts.spotify.com:443:::::::::::::::::::::',
                      encoding: null,
                      singleUse: true
                    }
                  }
                ]
              },
              freeSockets: [Object: null prototype] {},
              keepAliveMsecs: 1000,
              keepAlive: false,
              maxSockets: Infinity,
              maxFreeSockets: 256,
              scheduling: 'lifo',
              maxTotalSockets: Infinity,
              totalSocketCount: 1,
              maxCachedSessions: 100,
              _sessionCache: {
                map: {
                  'www.wikidata.org:443:::::::::::::::::::::': <Buffer 30 82 08 7d 02 01 01 02 02 03 04 04 02 13 02 04 20 49 81 10 e3 ea 7d 84 9b e4 63 a1 f3 bf 02 aa db cd 63 84 bf 4f 51 15 cc 96 ff a3 1c ef 0f 60 a7 04 ... 2127 more bytes>
                },
                list: [ 'www.wikidata.org:443:::::::::::::::::::::' ]
              },
              [Symbol(kCapture)]: false
            },
            host: 'www.wikidata.org',
            noDelay: true,
            servername: 'www.wikidata.org',
            _agentKey: 'www.wikidata.org:443:::::::::::::::::::::',
            encoding: null,
            singleUse: true
          }
        },
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        rawHeaders: [
          'date',
          'Wed, 01 May 2024 17:15:27 GMT',
          'server',
          'mw-api-ext.eqiad.main-6568d96485-7z7s5',
          'x-content-type-options',
          'nosniff',
          'cache-control',
          'private,no-cache,s-maxage=0',
          'access-control-allow-origin',
          '*',
          'vary',
          'Accept-Encoding',
          'content-type',
          'application/json',
          'content-encoding',
          'gzip',
          'age',
          '0',
          'x-cache',
          'cp1104 miss, cp1104 pass',
          'x-cache-status',
          'pass',
          'server-timing',
          'cache;desc="pass", host;desc="cp1104"',
          'strict-transport-security',
          'max-age=106384710; includeSubDomains; preload',
          'report-to',
          '{ "group": "wm_nel", "max_age": 604800, "endpoints": [{ "url": "https://intake-logging.wikimedia.org/v1/events?stream=w3c.reportingapi.network_error&schema_uri=/w3c/reportingapi/network_error/1.0.0" }] }',
          'nel',
          '{ "report_to": "wm_nel", "max_age": 604800, "failure_fraction": 0.05, "success_fraction": 0.0}',
          'set-cookie',
          'WMF-Last-Access=01-May-2024;Path=/;HttpOnly;secure;Expires=Sun, 02 Jun 2024 12:00:00 GMT',
          'set-cookie',
          'WMF-Last-Access-Global=01-May-2024;Path=/;Domain=.wikidata.org;HttpOnly;secure;Expires=Sun, 02 Jun 2024 12:00:00 GMT',
          'x-client-ip',
          '186.219.185.78',
          'set-cookie',
          'GeoIP=BR:PR:Curitiba:-25.50:-49.29:v4; Path=/; secure; Domain=.wikidata.org',
          'set-cookie',
          'NetworkProbeLimit=0.001;Path=/;Secure;Max-Age=3600',
          'content-length',
          '177',
          'connection',
          'close'
        ],
        rawTrailers: [],
        joinDuplicateHeaders: undefined,
        aborted: false,
        upgrade: false,
        url: '',
        method: null,
        statusCode: 400,
        statusMessage: 'Bad Request',
        client: TLSSocket {
          _tlsOptions: {
            allowHalfOpen: undefined,
            pipe: false,
            secureContext: SecureContext { context: SecureContext {} },
            isServer: false,
            requestCert: true,
            rejectUnauthorized: true,
            session: undefined,
            ALPNProtocols: undefined,
            requestOCSP: undefined,
            enableTrace: undefined,
            pskCallback: undefined,
            highWaterMark: undefined,
            onread: undefined,
            signal: undefined
          },
          _secureEstablished: true,
          _securePending: false,
          _newSessionPending: false,
          _controlReleased: true,
          secureConnecting: false,
          _SNICallback: null,
          servername: 'www.wikidata.org',
          alpnProtocol: false,
          authorized: true,
          authorizationError: null,
          encrypted: true,
          _events: [Object: null prototype] {
            close: [
              [Function: onSocketCloseDestroySSL],
              [Function: onClose],
              [Function: socketCloseListener]
            ],
            end: [Function: onReadableStreamEnd],
            newListener: [Function: keylogNewListener],
            secure: [Function: onConnectSecure],
            session: [Function (anonymous)],
            free: [Function: onFree],
            timeout: [Function: onTimeout],
            agentRemove: [Function: onRemove],
            error: [Function: socketErrorListener]
          },
          _eventsCount: 9,
          connecting: false,
          _hadError: false,
          _parent: null,
          _host: 'www.wikidata.org',
          _closeAfterHandlingError: false,
          _readableState: ReadableState {
            objectMode: false,
            highWaterMark: 16384,
            buffer: BufferList { head: null, tail: null, length: 0 },
            length: 0,
            pipes: [],
            flowing: true,
            ended: true,
            endEmitted: true,
            reading: false,
            constructed: true,
            sync: false,
            needReadable: false,
            emittedReadable: false,
            readableListening: false,
            resumeScheduled: false,
            errorEmitted: false,
            emitClose: false,
            autoDestroy: true,
            destroyed: true,
            errored: null,
            closed: true,
            closeEmitted: true,
            defaultEncoding: 'utf8',
            awaitDrainWriters: null,
            multiAwaitDrain: false,
            readingMore: false,
            dataEmitted: true,
            decoder: null,
            encoding: null,
            [Symbol(kPaused)]: false
          },
          _maxListeners: undefined,
          _writableState: WritableState {
            objectMode: false,
            highWaterMark: 16384,
            finalCalled: true,
            needDrain: false,
            ending: true,
            ended: true,
            finished: true,
            destroyed: true,
            decodeStrings: false,
            defaultEncoding: 'utf8',
            length: 0,
            writing: false,
            corked: 0,
            sync: false,
            bufferProcessing: false,
            onwrite: [Function: bound onwrite],
            writecb: null,
            writelen: 0,
            afterWriteTickInfo: null,
            buffered: [],
            bufferedIndex: 0,
            allBuffers: true,
            allNoop: true,
            pendingcb: 0,
            constructed: true,
            prefinished: true,
            errorEmitted: false,
            emitClose: false,
            autoDestroy: true,
            errored: null,
            closed: true,
            closeEmitted: true,
            [Symbol(kOnFinished)]: []
          },
          allowHalfOpen: false,
          _sockname: null,
          _pendingData: null,
          _pendingEncoding: '',
          server: undefined,
          _server: null,
          ssl: null,
          _requestCert: true,
          _rejectUnauthorized: true,
          parser: null,
          _httpMessage: [Circular *1],
          write: [Function: writeAfterFIN],
          [Symbol(res)]: null,
          [Symbol(verified)]: true,
          [Symbol(pendingSession)]: null,
          [Symbol(async_id_symbol)]: 35,
          [Symbol(kHandle)]: null,
          [Symbol(lastWriteQueueSize)]: 0,
          [Symbol(timeout)]: null,
          [Symbol(kBuffer)]: null,
          [Symbol(kBufferCb)]: null,
          [Symbol(kBufferGen)]: null,
          [Symbol(kCapture)]: false,
          [Symbol(kSetNoDelay)]: false,
          [Symbol(kSetKeepAlive)]: true,
          [Symbol(kSetKeepAliveInitialDelay)]: 60,
          [Symbol(kBytesRead)]: 1442,
          [Symbol(kBytesWritten)]: 400,
          [Symbol(connect-options)]: {
            rejectUnauthorized: true,
            ciphers: 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
            checkServerIdentity: [Function: checkServerIdentity],
            minDHSize: 1024,
            maxRedirects: 21,
            maxBodyLength: Infinity,
            protocol: 'https:',
            path: null,
            method: 'POST',
            headers: [Object: null prototype] {
              Accept: 'application/json, text/plain, */*',
              'Content-Type': 'application/json',
              'User-Agent': 'axios/1.6.8',
              'Content-Length': '141',
              'Accept-Encoding': 'gzip, compress, deflate, br'
            },
            agents: { http: undefined, https: undefined },
            auth: undefined,
            family: undefined,
            beforeRedirect: [Function: dispatchBeforeRedirect],
            beforeRedirects: { proxy: [Function: beforeRedirect] },
            hostname: 'www.wikidata.org',
            port: 443,
            agent: undefined,
            nativeProtocols: <ref *5> {
              'http:': {
                _connectionListener: [Function: connectionListener],
                METHODS: [
                  'ACL',         'BIND',       'CHECKOUT',
                  'CONNECT',     'COPY',       'DELETE',
                  'GET',         'HEAD',       'LINK',
                  'LOCK',        'M-SEARCH',   'MERGE',
                  'MKACTIVITY',  'MKCALENDAR', 'MKCOL',
                  'MOVE',        'NOTIFY',     'OPTIONS',
                  'PATCH',       'POST',       'PROPFIND',
                  'PROPPATCH',   'PURGE',      'PUT',
                  'REBIND',      'REPORT',     'SEARCH',
                  'SOURCE',      'SUBSCRIBE',  'TRACE',
                  'UNBIND',      'UNLINK',     'UNLOCK',
                  'UNSUBSCRIBE'
                ],
                STATUS_CODES: {
                  '100': 'Continue',
                  '101': 'Switching Protocols',
                  '102': 'Processing',
                  '103': 'Early Hints',
                  '200': 'OK',
                  '201': 'Created',
                  '202': 'Accepted',
                  '203': 'Non-Authoritative Information',
                  '204': 'No Content',
                  '205': 'Reset Content',
                  '206': 'Partial Content',
                  '207': 'Multi-Status',
                  '208': 'Already Reported',
                  '226': 'IM Used',
                  '300': 'Multiple Choices',
                  '301': 'Moved Permanently',
                  '302': 'Found',
                  '303': 'See Other',
                  '304': 'Not Modified',
                  '305': 'Use Proxy',
                  '307': 'Temporary Redirect',
                  '308': 'Permanent Redirect',
                  '400': 'Bad Request',
                  '401': 'Unauthorized',
                  '402': 'Payment Required',
                  '403': 'Forbidden',
                  '404': 'Not Found',
                  '405': 'Method Not Allowed',
                  '406': 'Not Acceptable',
                  '407': 'Proxy Authentication Required',
                  '408': 'Request Timeout',
                  '409': 'Conflict',
                  '410': 'Gone',
                  '411': 'Length Required',
                  '412': 'Precondition Failed',
                  '413': 'Payload Too Large',
                  '414': 'URI Too Long',
                  '415': 'Unsupported Media Type',
                  '416': 'Range Not Satisfiable',
                  '417': 'Expectation Failed',
                  '418': "I'm a Teapot",
                  '421': 'Misdirected Request',
                  '422': 'Unprocessable Entity',
                  '423': 'Locked',
                  '424': 'Failed Dependency',
                  '425': 'Too Early',
                  '426': 'Upgrade Required',
                  '428': 'Precondition Required',
                  '429': 'Too Many Requests',
                  '431': 'Request Header Fields Too Large',
                  '451': 'Unavailable For Legal Reasons',
                  '500': 'Internal Server Error',
                  '501': 'Not Implemented',
                  '502': 'Bad Gateway',
                  '503': 'Service Unavailable',
                  '504': 'Gateway Timeout',
                  '505': 'HTTP Version Not Supported',
                  '506': 'Variant Also Negotiates',
                  '507': 'Insufficient Storage',
                  '508': 'Loop Detected',
                  '509': 'Bandwidth Limit Exceeded',
                  '510': 'Not Extended',
                  '511': 'Network Authentication Required'
                },
                Agent: [Function: Agent] { defaultMaxSockets: Infinity },
                ClientRequest: [Function: ClientRequest],
                IncomingMessage: [Function: IncomingMessage],
                OutgoingMessage: [Function: OutgoingMessage],
                Server: [Function: Server],
                ServerResponse: [Function: ServerResponse],
                createServer: [Function: createServer],
                validateHeaderName: [Function: __node_internal_],
                validateHeaderValue: [Function: __node_internal_],
                get: [Function: get],
                request: [Function: request],
                setMaxIdleHTTPParsers: [Function: setMaxIdleHTTPParsers],
                maxHeaderSize: [Getter],
                globalAgent: [Getter/Setter]
              },
              'https:': {
                Agent: [Function: Agent],
                globalAgent: <ref *3> Agent {
                  _events: [Object: null prototype] {
                    free: [Function (anonymous)],
                    newListener: [Function: maybeEnableKeylog]
                  },
                  _eventsCount: 2,
                  _maxListeners: undefined,
                  defaultPort: 443,
                  protocol: 'https:',
                  options: [Object: null prototype] {
                    noDelay: true,
                    path: null
                  },
                  requests: [Object: null prototype] {},
                  sockets: [Object: null prototype] {
                    'accounts.spotify.com:443:::::::::::::::::::::': [
                      <ref *2> TLSSocket {
                        _tlsOptions: {
                          allowHalfOpen: undefined,
                          pipe: false,
                          secureContext: SecureContext { context: SecureContext {} },
                          isServer: false,
                          requestCert: true,
                          rejectUnauthorized: true,
                          session: undefined,
                          ALPNProtocols: undefined,
                          requestOCSP: undefined,
                          enableTrace: undefined,
                          pskCallback: undefined,
                          highWaterMark: undefined,
                          onread: undefined,
                          signal: undefined
                        },
                        _secureEstablished: false,
                        _securePending: false,
                        _newSessionPending: false,
                        _controlReleased: true,
                        secureConnecting: true,
                        _SNICallback: null,
                        servername: null,
                        alpnProtocol: null,
                        authorized: false,
                        authorizationError: null,
                        encrypted: true,
                        _events: [Object: null prototype] {
                          close: [
                            [Function: onSocketCloseDestroySSL],
                            [Function: bound onceWrapper] {
                              listener: [Function (anonymous)]
                            },
                            [Function: onClose],
                            [Function: socketCloseListener],
                            [Function: bound onceWrapper] {
                              listener: [Function: onClose]
                            }
                          ],
                          end: [
                            [Function: onConnectEnd],
                            [Function: onReadableStreamEnd],
                            [Function: socketOnEnd]
                          ],
                          newListener: [Function: keylogNewListener],
                          connect: [
                            [Function: bound onceWrapper] {
                              listener: [Function (anonymous)]
                            },
                            [Function: bound onceWrapper] {
                              listener: [Function (anonymous)]
                            },
                            [Function: bound onceWrapper] {
                              listener: [Function: connect]
                            }
                          ],
                          secure: [Function: onConnectSecure],
                          session: [Function (anonymous)],
                          free: [Function: onFree],
                          timeout: [Function: onTimeout],
                          agentRemove: [Function: onRemove],
                          error: [Function: socketErrorListener],
                          data: [Function: socketOnData],
                          drain: [Function: ondrain]
                        },
                        _eventsCount: 12,
                        connecting: true,
                        _hadError: false,
                        _parent: null,
                        _host: 'accounts.spotify.com',
                        _closeAfterHandlingError: false,
                        _readableState: ReadableState {
                          objectMode: false,
                          highWaterMark: 16384,
                          buffer: BufferList { head: null, tail: null, length: 0 },
                          length: 0,
                          pipes: [],
                          flowing: true,
                          ended: false,
                          endEmitted: false,
                          reading: true,
                          constructed: true,
                          sync: false,
                          needReadable: true,
                          emittedReadable: false,
                          readableListening: false,
                          resumeScheduled: false,
                          errorEmitted: false,
                          emitClose: false,
                          autoDestroy: true,
                          destroyed: false,
                          errored: null,
                          closed: false,
                          closeEmitted: false,
                          defaultEncoding: 'utf8',
                          awaitDrainWriters: null,
                          multiAwaitDrain: false,
                          readingMore: false,
                          dataEmitted: false,
                          decoder: null,
                          encoding: null,
                          [Symbol(kPaused)]: false
                        },
                        _maxListeners: undefined,
                        _writableState: WritableState {
                          objectMode: false,
                          highWaterMark: 16384,
                          finalCalled: false,
                          needDrain: false,
                          ending: false,
                          ended: false,
                          finished: false,
                          destroyed: false,
                          decodeStrings: false,
                          defaultEncoding: 'utf8',
                          length: 378,
                          writing: true,
                          corked: 0,
                          sync: false,
                          bufferProcessing: false,
                          onwrite: [Function: bound onwrite],
                          writecb: [Function (anonymous)],
                          writelen: 378,
                          afterWriteTickInfo: null,
                          buffered: [],
                          bufferedIndex: 0,
                          allBuffers: true,
                          allNoop: true,
                          pendingcb: 1,
                          constructed: true,
                          prefinished: false,
                          errorEmitted: false,
                          emitClose: false,
                          autoDestroy: true,
                          errored: null,
                          closed: false,
                          closeEmitted: false,
                          [Symbol(kOnFinished)]: []
                        },
                        allowHalfOpen: false,
                        _sockname: null,
                        _pendingData: [
                          {
                            chunk: 'POST /api/token HTTP/1.1\r\n' +
                              'Accept: application/json, text/plain, */*\r\n' +
                              'Content-Type: application/x-www-form-urlencoded\r\n' +
                              'User-Agent: axios/1.6.8\r\n' +
                              'Content-Length: 119\r\n' +
                              'Accept-Encoding: gzip, compress, deflate, br\r\n' +
                              'Host: accounts.spotify.com\r\n' +
                              'Connection: close\r\n' +
                              '\r\n',
                            encoding: 'latin1',
                            callback: [Function: nop]
                          },
                          {
                            chunk: <Buffer 67 72 61 6e 74 5f 74 79 70 65 3d 63 6c 69 65 6e 74 5f 63 72 65 64 65 6e 74 69 61 6c 73 26 63 6c 69 65 6e 74 5f 69 64 3d 65 62 63 63 39 39 31 32 34 30 ... 69 more bytes>,
                            encoding: 'buffer',
                            callback: [Function (anonymous)]
                          },
                          allBuffers: false
                        ],
                        _pendingEncoding: '',
                        server: undefined,
                        _server: null,
                        ssl: TLSWrap {
                          _parent: TCP {
                            reading: [Getter/Setter],
                            onconnection: null,
                            [Symbol(owner_symbol)]: [Circular *2]
                          },
                          _parentWrap: undefined,
                          _secureContext: SecureContext { context: SecureContext {} },
                          reading: false,
                          onkeylog: [Function: onkeylog],
                          onhandshakestart: {},
                          onhandshakedone: [Function (anonymous)],
                          onocspresponse: [Function: onocspresponse],
                          onnewsession: [Function: onnewsessionclient],
                          onerror: [Function: onerror],
                          [Symbol(owner_symbol)]: [Circular *2]
                        },
                        _requestCert: true,
                        _rejectUnauthorized: true,
                        parser: <ref *4> HTTPParser {
                          '0': null,
                          '1': [Function: parserOnHeaders],
                          '2': [Function: parserOnHeadersComplete],
                          '3': [Function: parserOnBody],
                          '4': [Function: parserOnMessageComplete],
                          '5': null,
                          '6': null,
                          _headers: [],
                          _url: '',
                          socket: [Circular *2],
                          incoming: null,
                          outgoing: <ref *6> ClientRequest {
                            _events: [Object: null prototype] {
                              response: [Function: bound onceWrapper] {
                                listener: [Function (anonymous)]
                              },
                              abort: [Function (anonymous)],
                              aborted: [Function (anonymous)],
                              connect: [Function (anonymous)],
                              error: [Function (anonymous)],
                              socket: [Function (anonymous)],
                              timeout: [Function (anonymous)]
                            },
                            _eventsCount: 7,
                            _maxListeners: undefined,
                            outputData: [],
                            outputSize: 0,
                            writable: true,
                            destroyed: false,
                            _last: true,
                            chunkedEncoding: false,
                            shouldKeepAlive: false,
                            maxRequestsOnConnectionReached: false,
                            _defaultKeepAlive: true,
                            useChunkedEncodingByDefault: true,
                            sendDate: false,
                            _removedConnection: false,
                            _removedContLen: false,
                            _removedTE: false,
                            strictContentLength: false,
                            _contentLength: '119',
                            _hasBody: true,
                            _trailer: '',
                            finished: false,
                            _headerSent: true,
                            _closed: false,
                            socket: [Circular *2],
                            _header: 'POST /api/token HTTP/1.1\r\n' +
                              'Accept: application/json, text/plain, */*\r\n' +
                              'Content-Type: application/x-www-form-urlencoded\r\n' +
                              'User-Agent: axios/1.6.8\r\n' +
                              'Content-Length: 119\r\n' +
                              'Accept-Encoding: gzip, compress, deflate, br\r\n' +
                              'Host: accounts.spotify.com\r\n' +
                              'Connection: close\r\n' +
                              '\r\n',
                            _keepAliveTimeout: 0,
                            _onPendingData: [Function: nop],
                            agent: [Circular *3],
                            socketPath: undefined,
                            method: 'POST',
                            maxHeaderSize: undefined,
                            insecureHTTPParser: undefined,
                            joinDuplicateHeaders: undefined,
                            path: '/api/token',
                            _ended: false,
                            res: null,
                            aborted: false,
                            timeoutCb: null,
                            upgradeOrConnect: false,
                            parser: [Circular *4],
                            maxHeadersCount: null,
                            reusedSocket: false,
                            host: 'accounts.spotify.com',
                            protocol: 'https:',
                            _redirectable: Writable {
                              _writableState: WritableState {
                                objectMode: false,
                                highWaterMark: 16384,
                                finalCalled: false,
                                needDrain: false,
                                ending: false,
                                ended: false,
                                finished: false,
                                destroyed: false,
                                decodeStrings: true,
                                defaultEncoding: 'utf8',
                                length: 0,
                                writing: false,
                                corked: 0,
                                sync: true,
                                bufferProcessing: false,
                                onwrite: [Function: bound onwrite],
                                writecb: null,
                                writelen: 0,
                                afterWriteTickInfo: null,
                                buffered: [],
                                bufferedIndex: 0,
                                allBuffers: true,
                                allNoop: true,
                                pendingcb: 0,
                                constructed: true,
                                prefinished: false,
                                errorEmitted: false,
                                emitClose: true,
                                autoDestroy: true,
                                errored: null,
                                closed: false,
                                closeEmitted: false,
                                [Symbol(kOnFinished)]: []
                              },
                              _events: [Object: null prototype] {
                                response: [Function: handleResponse],
                                error: [Function: handleRequestError],
                                socket: [Function: handleRequestSocket]
                              },
                              _eventsCount: 3,
                              _maxListeners: undefined,
                              _options: {
                                maxRedirects: 21,
                                maxBodyLength: Infinity,
                                protocol: 'https:',
                                path: '/api/token',
                                method: 'POST',
                                headers: [Object: null prototype] {
                                  Accept: 'application/json, text/plain, */*',
                                  'Content-Type': 'application/x-www-form-urlencoded',
                                  'User-Agent': 'axios/1.6.8',
                                  'Content-Length': '119',
                                  'Accept-Encoding': 'gzip, compress, deflate, br'
                                },
                                agents: { http: undefined, https: undefined },
                                auth: undefined,
                                family: undefined,
                                beforeRedirect: [Function: dispatchBeforeRedirect],
                                beforeRedirects: { proxy: [Function: beforeRedirect] },
                                hostname: 'accounts.spotify.com',
                                port: '',
                                agent: undefined,
                                nativeProtocols: [Circular *5],
                                pathname: '/api/token'
                              },
                              _ended: false,
                              _ending: true,
                              _redirectCount: 0,
                              _redirects: [],
                              _requestBodyLength: 119,
                              _requestBodyBuffers: [
                                {
                                  data: <Buffer 67 72 61 6e 74 5f 74 79 70 65 3d 63 6c 69 65 6e 74 5f 63 72 65 64 65 6e 74 69 61 6c 73 26 63 6c 69 65 6e 74 5f 69 64 3d 65 62 63 63 39 39 31 32 34 30 ... 69 more bytes>,
                                  encoding: undefined
                                }
                              ],
                              _onNativeResponse: [Function (anonymous)],
                              _currentRequest: [Circular *6],
                              _currentUrl: 'https://accounts.spotify.com/api/token',
                              [Symbol(kCapture)]: false
                            },
                            [Symbol(kCapture)]: false,
                            [Symbol(kBytesWritten)]: 0,
                            [Symbol(kEndCalled)]: false,
                            [Symbol(kNeedDrain)]: false,
                            [Symbol(corked)]: 0,
                            [Symbol(kOutHeaders)]: [Object: null prototype] {
                              accept: [
                                'Accept',
                                'application/json, text/plain, */*'
                              ],
                              'content-type': [
                                'Content-Type',
                                'application/x-www-form-urlencoded'
                              ],
                              'user-agent': [ 'User-Agent', 'axios/1.6.8' ],
                              'content-length': [ 'Content-Length', '119' ],
                              'accept-encoding': [
                                'Accept-Encoding',
                                'gzip, compress, deflate, br'
                              ],
                              host: [ 'Host', 'accounts.spotify.com' ]
                            },
                            [Symbol(errored)]: null,
                            [Symbol(kUniqueHeaders)]: null
                          },
                          maxHeaderPairs: 2000,
                          _consumed: false,
                          onIncoming: [Function: parserOnIncomingClient],
                          joinDuplicateHeaders: undefined,
                          [Symbol(resource_symbol)]: HTTPClientAsyncResource {
                            type: 'HTTPINCOMINGMESSAGE',
                            req: <ref *6> ClientRequest {
                              _events: [Object: null prototype] {
                                response: [Function: bound onceWrapper] {
                                  listener: [Function (anonymous)]
                                },
                                abort: [Function (anonymous)],
                                aborted: [Function (anonymous)],
                                connect: [Function (anonymous)],
                                error: [Function (anonymous)],
                                socket: [Function (anonymous)],
                                timeout: [Function (anonymous)]
                              },
                              _eventsCount: 7,
                              _maxListeners: undefined,
                              outputData: [],
                              outputSize: 0,
                              writable: true,
                              destroyed: false,
                              _last: true,
                              chunkedEncoding: false,
                              shouldKeepAlive: false,
                              maxRequestsOnConnectionReached: false,
                              _defaultKeepAlive: true,
                              useChunkedEncodingByDefault: true,
                              sendDate: false,
                              _removedConnection: false,
                              _removedContLen: false,
                              _removedTE: false,
                              strictContentLength: false,
                              _contentLength: '119',
                              _hasBody: true,
                              _trailer: '',
                              finished: false,
                              _headerSent: true,
                              _closed: false,
                              socket: [Circular *2],
                              _header: 'POST /api/token HTTP/1.1\r\n' +
                                'Accept: application/json, text/plain, */*\r\n' +
                                'Content-Type: application/x-www-form-urlencoded\r\n' +
                                'User-Agent: axios/1.6.8\r\n' +
                                'Content-Length: 119\r\n' +
                                'Accept-Encoding: gzip, compress, deflate, br\r\n' +
                                'Host: accounts.spotify.com\r\n' +
                                'Connection: close\r\n' +
                                '\r\n',
                              _keepAliveTimeout: 0,
                              _onPendingData: [Function: nop],
                              agent: [Circular *3],
                              socketPath: undefined,
                              method: 'POST',
                              maxHeaderSize: undefined,
                              insecureHTTPParser: undefined,
                              joinDuplicateHeaders: undefined,
                              path: '/api/token',
                              _ended: false,
                              res: null,
                              aborted: false,
                              timeoutCb: null,
                              upgradeOrConnect: false,
                              parser: [Circular *4],
                              maxHeadersCount: null,
                              reusedSocket: false,
                              host: 'accounts.spotify.com',
                              protocol: 'https:',
                              _redirectable: Writable {
                                _writableState: WritableState {
                                  objectMode: false,
                                  highWaterMark: 16384,
                                  finalCalled: false,
                                  needDrain: false,
                                  ending: false,
                                  ended: false,
                                  finished: false,
                                  destroyed: false,
                                  decodeStrings: true,
                                  defaultEncoding: 'utf8',
                                  length: 0,
                                  writing: false,
                                  corked: 0,
                                  sync: true,
                                  bufferProcessing: false,
                                  onwrite: [Function: bound onwrite],
                                  writecb: null,
                                  writelen: 0,
                                  afterWriteTickInfo: null,
                                  buffered: [],
                                  bufferedIndex: 0,
                                  allBuffers: true,
                                  allNoop: true,
                                  pendingcb: 0,
                                  constructed: true,
                                  prefinished: false,
                                  errorEmitted: false,
                                  emitClose: true,
                                  autoDestroy: true,
                                  errored: null,
                                  closed: false,
                                  closeEmitted: false,
                                  [Symbol(kOnFinished)]: []
                                },
                                _events: [Object: null prototype] {
                                  response: [Function: handleResponse],
                                  error: [Function: handleRequestError],
                                  socket: [Function: handleRequestSocket]
                                },
                                _eventsCount: 3,
                                _maxListeners: undefined,
                                _options: {
                                  maxRedirects: 21,
                                  maxBodyLength: Infinity,
                                  protocol: 'https:',
                                  path: '/api/token',
                                  method: 'POST',
                                  headers: [Object: null prototype] {
                                    Accept: 'application/json, text/plain, */*',
                                    'Content-Type': 'application/x-www-form-urlencoded',
                                    'User-Agent': 'axios/1.6.8',
                                    'Content-Length': '119',
                                    'Accept-Encoding': 'gzip, compress, deflate, br'
                                  },
                                  agents: { http: undefined, https: undefined },
                                  auth: undefined,
                                  family: undefined,
                                  beforeRedirect: [Function: dispatchBeforeRedirect],
                                  beforeRedirects: { proxy: [Function: beforeRedirect] },
                                  hostname: 'accounts.spotify.com',
                                  port: '',
                                  agent: undefined,
                                  nativeProtocols: [Circular *5],
                                  pathname: '/api/token'
                                },
                                _ended: false,
                                _ending: true,
                                _redirectCount: 0,
                                _redirects: [],
                                _requestBodyLength: 119,
                                _requestBodyBuffers: [
                                  {
                                    data: <Buffer 67 72 61 6e 74 5f 74 79 70 65 3d 63 6c 69 65 6e 74 5f 63 72 65 64 65 6e 74 69 61 6c 73 26 63 6c 69 65 6e 74 5f 69 64 3d 65 62 63 63 39 39 31 32 34 30 ... 69 more bytes>,
                                    encoding: undefined
                                  }
                                ],
                                _onNativeResponse: [Function (anonymous)],
                                _currentRequest: [Circular *6],
                                _currentUrl: 'https://accounts.spotify.com/api/token',
                                [Symbol(kCapture)]: false
                              },
                              [Symbol(kCapture)]: false,
                              [Symbol(kBytesWritten)]: 0,
                              [Symbol(kEndCalled)]: false,
                              [Symbol(kNeedDrain)]: false,
                              [Symbol(corked)]: 0,
                              [Symbol(kOutHeaders)]: [Object: null prototype] {
                                accept: [
                                  'Accept',
                                  'application/json, text/plain, */*'
                                ],
                                'content-type': [
                                  'Content-Type',
                                  'application/x-www-form-urlencoded'
                                ],
                                'user-agent': [ 'User-Agent', 'axios/1.6.8' ],
                                'content-length': [ 'Content-Length', '119' ],
                                'accept-encoding': [
                                  'Accept-Encoding',
                                  'gzip, compress, deflate, br'
                                ],
                                host: [ 'Host', 'accounts.spotify.com' ]
                              },
                              [Symbol(errored)]: null,
                              [Symbol(kUniqueHeaders)]: null
                            }
                          }
                        },
                        _httpMessage: <ref *6> ClientRequest {
                          _events: [Object: null prototype] {
                            response: [Function: bound onceWrapper] {
                              listener: [Function (anonymous)]
                            },
                            abort: [Function (anonymous)],
                            aborted: [Function (anonymous)],
                            connect: [Function (anonymous)],
                            error: [Function (anonymous)],
                            socket: [Function (anonymous)],
                            timeout: [Function (anonymous)]
                          },
                          _eventsCount: 7,
                          _maxListeners: undefined,
                          outputData: [],
                          outputSize: 0,
                          writable: true,
                          destroyed: false,
                          _last: true,
                          chunkedEncoding: false,
                          shouldKeepAlive: false,
                          maxRequestsOnConnectionReached: false,
                          _defaultKeepAlive: true,
                          useChunkedEncodingByDefault: true,
                          sendDate: false,
                          _removedConnection: false,
                          _removedContLen: false,
                          _removedTE: false,
                          strictContentLength: false,
                          _contentLength: '119',
                          _hasBody: true,
                          _trailer: '',
                          finished: false,
                          _headerSent: true,
                          _closed: false,
                          socket: [Circular *2],
                          _header: 'POST /api/token HTTP/1.1\r\n' +
                            'Accept: application/json, text/plain, */*\r\n' +
                            'Content-Type: application/x-www-form-urlencoded\r\n' +
                            'User-Agent: axios/1.6.8\r\n' +
                            'Content-Length: 119\r\n' +
                            'Accept-Encoding: gzip, compress, deflate, br\r\n' +
                            'Host: accounts.spotify.com\r\n' +
                            'Connection: close\r\n' +
                            '\r\n',
                          _keepAliveTimeout: 0,
                          _onPendingData: [Function: nop],
                          agent: [Circular *3],
                          socketPath: undefined,
                          method: 'POST',
                          maxHeaderSize: undefined,
                          insecureHTTPParser: undefined,
                          joinDuplicateHeaders: undefined,
                          path: '/api/token',
                          _ended: false,
                          res: null,
                          aborted: false,
                          timeoutCb: null,
                          upgradeOrConnect: false,
                          parser: <ref *4> HTTPParser {
                            '0': null,
                            '1': [Function: parserOnHeaders],
                            '2': [Function: parserOnHeadersComplete],
                            '3': [Function: parserOnBody],
                            '4': [Function: parserOnMessageComplete],
                            '5': null,
                            '6': null,
                            _headers: [],
                            _url: '',
                            socket: [Circular *2],
                            incoming: null,
                            outgoing: [Circular *6],
                            maxHeaderPairs: 2000,
                            _consumed: false,
                            onIncoming: [Function: parserOnIncomingClient],
                            joinDuplicateHeaders: undefined,
                            [Symbol(resource_symbol)]: HTTPClientAsyncResource {
                              type: 'HTTPINCOMINGMESSAGE',
                              req: [Circular *6]
                            }
                          },
                          maxHeadersCount: null,
                          reusedSocket: false,
                          host: 'accounts.spotify.com',
                          protocol: 'https:',
                          _redirectable: Writable {
                            _writableState: WritableState {
                              objectMode: false,
                              highWaterMark: 16384,
                              finalCalled: false,
                              needDrain: false,
                              ending: false,
                              ended: false,
                              finished: false,
                              destroyed: false,
                              decodeStrings: true,
                              defaultEncoding: 'utf8',
                              length: 0,
                              writing: false,
                              corked: 0,
                              sync: true,
                              bufferProcessing: false,
                              onwrite: [Function: bound onwrite],
                              writecb: null,
                              writelen: 0,
                              afterWriteTickInfo: null,
                              buffered: [],
                              bufferedIndex: 0,
                              allBuffers: true,
                              allNoop: true,
                              pendingcb: 0,
                              constructed: true,
                              prefinished: false,
                              errorEmitted: false,
                              emitClose: true,
                              autoDestroy: true,
                              errored: null,
                              closed: false,
                              closeEmitted: false,
                              [Symbol(kOnFinished)]: []
                            },
                            _events: [Object: null prototype] {
                              response: [Function: handleResponse],
                              error: [Function: handleRequestError],
                              socket: [Function: handleRequestSocket]
                            },
                            _eventsCount: 3,
                            _maxListeners: undefined,
                            _options: {
                              maxRedirects: 21,
                              maxBodyLength: Infinity,
                              protocol: 'https:',
                              path: '/api/token',
                              method: 'POST',
                              headers: [Object: null prototype] {
                                Accept: 'application/json, text/plain, */*',
                                'Content-Type': 'application/x-www-form-urlencoded',
                                'User-Agent': 'axios/1.6.8',
                                'Content-Length': '119',
                                'Accept-Encoding': 'gzip, compress, deflate, br'
                              },
                              agents: { http: undefined, https: undefined },
                              auth: undefined,
                              family: undefined,
                              beforeRedirect: [Function: dispatchBeforeRedirect],
                              beforeRedirects: { proxy: [Function: beforeRedirect] },
                              hostname: 'accounts.spotify.com',
                              port: '',
                              agent: undefined,
                              nativeProtocols: [Circular *5],
                              pathname: '/api/token'
                            },
                            _ended: false,
                            _ending: true,
                            _redirectCount: 0,
                            _redirects: [],
                            _requestBodyLength: 119,
                            _requestBodyBuffers: [
                              {
                                data: <Buffer 67 72 61 6e 74 5f 74 79 70 65 3d 63 6c 69 65 6e 74 5f 63 72 65 64 65 6e 74 69 61 6c 73 26 63 6c 69 65 6e 74 5f 69 64 3d 65 62 63 63 39 39 31 32 34 30 ... 69 more bytes>,
                                encoding: undefined
                              }
                            ],
                            _onNativeResponse: [Function (anonymous)],
                            _currentRequest: [Circular *6],
                            _currentUrl: 'https://accounts.spotify.com/api/token',
                            [Symbol(kCapture)]: false
                          },
                          [Symbol(kCapture)]: false,
                          [Symbol(kBytesWritten)]: 0,
                          [Symbol(kEndCalled)]: false,
                          [Symbol(kNeedDrain)]: false,
                          [Symbol(corked)]: 0,
                          [Symbol(kOutHeaders)]: [Object: null prototype] {
                            accept: [
                              'Accept',
                              'application/json, text/plain, */*'
                            ],
                            'content-type': [
                              'Content-Type',
                              'application/x-www-form-urlencoded'
                            ],
                            'user-agent': [ 'User-Agent', 'axios/1.6.8' ],
                            'content-length': [ 'Content-Length', '119' ],
                            'accept-encoding': [
                              'Accept-Encoding',
                              'gzip, compress, deflate, br'
                            ],
                            host: [ 'Host', 'accounts.spotify.com' ]
                          },
                          [Symbol(errored)]: null,
                          [Symbol(kUniqueHeaders)]: null
                        },
                        [Symbol(res)]: TLSWrap {
                          _parent: TCP {
                            reading: [Getter/Setter],
                            onconnection: null,
                            [Symbol(owner_symbol)]: [Circular *2]
                          },
                          _parentWrap: undefined,
                          _secureContext: SecureContext { context: SecureContext {} },
                          reading: false,
                          onkeylog: [Function: onkeylog],
                          onhandshakestart: {},
                          onhandshakedone: [Function (anonymous)],
                          onocspresponse: [Function: onocspresponse],
                          onnewsession: [Function: onnewsessionclient],
                          onerror: [Function: onerror],
                          [Symbol(owner_symbol)]: [Circular *2]
                        },
                        [Symbol(verified)]: false,
                        [Symbol(pendingSession)]: null,
                        [Symbol(async_id_symbol)]: 6,
                        [Symbol(kHandle)]: TLSWrap {
                          _parent: TCP {
                            reading: [Getter/Setter],
                            onconnection: null,
                            [Symbol(owner_symbol)]: [Circular *2]
                          },
                          _parentWrap: undefined,
                          _secureContext: SecureContext { context: SecureContext {} },
                          reading: false,
                          onkeylog: [Function: onkeylog],
                          onhandshakestart: {},
                          onhandshakedone: [Function (anonymous)],
                          onocspresponse: [Function: onocspresponse],
                          onnewsession: [Function: onnewsessionclient],
                          onerror: [Function: onerror],
                          [Symbol(owner_symbol)]: [Circular *2]
                        },
                        [Symbol(lastWriteQueueSize)]: 0,
                        [Symbol(timeout)]: null,
                        [Symbol(kBuffer)]: null,
                        [Symbol(kBufferCb)]: null,
                        [Symbol(kBufferGen)]: null,
                        [Symbol(kCapture)]: false,
                        [Symbol(kSetNoDelay)]: false,
                        [Symbol(kSetKeepAlive)]: true,
                        [Symbol(kSetKeepAliveInitialDelay)]: 60,
                        [Symbol(kBytesRead)]: 0,
                        [Symbol(kBytesWritten)]: 0,
                        [Symbol(connect-options)]: {
                          rejectUnauthorized: true,
                          ciphers: 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
                          checkServerIdentity: [Function: checkServerIdentity],
                          minDHSize: 1024,
                          maxRedirects: 21,
                          maxBodyLength: Infinity,
                          protocol: 'https:',
                          path: null,
                          method: 'POST',
                          headers: [Object: null prototype] {
                            Accept: 'application/json, text/plain, */*',
                            'Content-Type': 'application/x-www-form-urlencoded',
                            'User-Agent': 'axios/1.6.8',
                            'Content-Length': '119',
                            'Accept-Encoding': 'gzip, compress, deflate, br'
                          },
                          agents: { http: undefined, https: undefined },
                          auth: undefined,
                          family: undefined,
                          beforeRedirect: [Function: dispatchBeforeRedirect],
                          beforeRedirects: { proxy: [Function: beforeRedirect] },
                          hostname: 'accounts.spotify.com',
                          port: 443,
                          agent: undefined,
                          nativeProtocols: [Circular *5],
                          pathname: '/api/token',
                          _defaultAgent: [Circular *3],
                          host: 'accounts.spotify.com',
                          noDelay: true,
                          servername: 'accounts.spotify.com',
                          _agentKey: 'accounts.spotify.com:443:::::::::::::::::::::',
                          encoding: null,
                          singleUse: true
                        }
                      }
                    ]
                  },
                  freeSockets: [Object: null prototype] {},
                  keepAliveMsecs: 1000,
                  keepAlive: false,
                  maxSockets: Infinity,
                  maxFreeSockets: 256,
                  scheduling: 'lifo',
                  maxTotalSockets: Infinity,
                  totalSocketCount: 1,
                  maxCachedSessions: 100,
                  _sessionCache: {
                    map: {
                      'www.wikidata.org:443:::::::::::::::::::::': <Buffer 30 82 08 7d 02 01 01 02 02 03 04 04 02 13 02 04 20 49 81 10 e3 ea 7d 84 9b e4 63 a1 f3 bf 02 aa db cd 63 84 bf 4f 51 15 cc 96 ff a3 1c ef 0f 60 a7 04 ... 2127 more bytes>
                    },
                    list: [ 'www.wikidata.org:443:::::::::::::::::::::' ]
                  },
                  [Symbol(kCapture)]: false
                },
                Server: [Function: Server],
                createServer: [Function: createServer],
                get: [Function: get],
                request: [Function: request]
              }
            },
            pathname: '/w/rest.php/oauth2/access_token',
            _defaultAgent: <ref *3> Agent {
              _events: [Object: null prototype] {
                free: [Function (anonymous)],
                newListener: [Function: maybeEnableKeylog]
              },
              _eventsCount: 2,
              _maxListeners: undefined,
              defaultPort: 443,
              protocol: 'https:',
              options: [Object: null prototype] { noDelay: true, path: null },
              requests: [Object: null prototype] {},
              sockets: [Object: null prototype] {
                'accounts.spotify.com:443:::::::::::::::::::::': [
                  <ref *2> TLSSocket {
                    _tlsOptions: {
                      allowHalfOpen: undefined,
                      pipe: false,
                      secureContext: SecureContext { context: SecureContext {} },
                      isServer: false,
                      requestCert: true,
                      rejectUnauthorized: true,
                      session: undefined,
                      ALPNProtocols: undefined,
                      requestOCSP: undefined,
                      enableTrace: undefined,
                      pskCallback: undefined,
                      highWaterMark: undefined,
                      onread: undefined,
                      signal: undefined
                    },
                    _secureEstablished: false,
                    _securePending: false,
                    _newSessionPending: false,
                    _controlReleased: true,
                    secureConnecting: true,
                    _SNICallback: null,
                    servername: null,
                    alpnProtocol: null,
                    authorized: false,
                    authorizationError: null,
                    encrypted: true,
                    _events: [Object: null prototype] {
                      close: [
                        [Function: onSocketCloseDestroySSL],
                        [Function: bound onceWrapper] {
                          listener: [Function (anonymous)]
                        },
                        [Function: onClose],
                        [Function: socketCloseListener],
                        [Function: bound onceWrapper] {
                          listener: [Function: onClose]
                        }
                      ],
                      end: [
                        [Function: onConnectEnd],
                        [Function: onReadableStreamEnd],
                        [Function: socketOnEnd]
                      ],
                      newListener: [Function: keylogNewListener],
                      connect: [
                        [Function: bound onceWrapper] {
                          listener: [Function (anonymous)]
                        },
                        [Function: bound onceWrapper] {
                          listener: [Function (anonymous)]
                        },
                        [Function: bound onceWrapper] {
                          listener: [Function: connect]
                        }
                      ],
                      secure: [Function: onConnectSecure],
                      session: [Function (anonymous)],
                      free: [Function: onFree],
                      timeout: [Function: onTimeout],
                      agentRemove: [Function: onRemove],
                      error: [Function: socketErrorListener],
                      data: [Function: socketOnData],
                      drain: [Function: ondrain]
                    },
                    _eventsCount: 12,
                    connecting: true,
                    _hadError: false,
                    _parent: null,
                    _host: 'accounts.spotify.com',
                    _closeAfterHandlingError: false,
                    _readableState: ReadableState {
                      objectMode: false,
                      highWaterMark: 16384,
                      buffer: BufferList { head: null, tail: null, length: 0 },
                      length: 0,
                      pipes: [],
                      flowing: true,
                      ended: false,
                      endEmitted: false,
                      reading: true,
                      constructed: true,
                      sync: false,
                      needReadable: true,
                      emittedReadable: false,
                      readableListening: false,
                      resumeScheduled: false,
                      errorEmitted: false,
                      emitClose: false,
                      autoDestroy: true,
                      destroyed: false,
                      errored: null,
                      closed: false,
                      closeEmitted: false,
                      defaultEncoding: 'utf8',
                      awaitDrainWriters: null,
                      multiAwaitDrain: false,
                      readingMore: false,
                      dataEmitted: false,
                      decoder: null,
                      encoding: null,
                      [Symbol(kPaused)]: false
                    },
                    _maxListeners: undefined,
                    _writableState: WritableState {
                      objectMode: false,
                      highWaterMark: 16384,
                      finalCalled: false,
                      needDrain: false,
                      ending: false,
                      ended: false,
                      finished: false,
                      destroyed: false,
                      decodeStrings: false,
                      defaultEncoding: 'utf8',
                      length: 378,
                      writing: true,
                      corked: 0,
                      sync: false,
                      bufferProcessing: false,
                      onwrite: [Function: bound onwrite],
                      writecb: [Function (anonymous)],
                      writelen: 378,
                      afterWriteTickInfo: null,
                      buffered: [],
                      bufferedIndex: 0,
                      allBuffers: true,
                      allNoop: true,
                      pendingcb: 1,
                      constructed: true,
                      prefinished: false,
                      errorEmitted: false,
                      emitClose: false,
                      autoDestroy: true,
                      errored: null,
                      closed: false,
                      closeEmitted: false,
                      [Symbol(kOnFinished)]: []
                    },
                    allowHalfOpen: false,
                    _sockname: null,
                    _pendingData: [
                      {
                        chunk: 'POST /api/token HTTP/1.1\r\n' +
                          'Accept: application/json, text/plain, */*\r\n' +
                          'Content-Type: application/x-www-form-urlencoded\r\n' +
                          'User-Agent: axios/1.6.8\r\n' +
                          'Content-Length: 119\r\n' +
                          'Accept-Encoding: gzip, compress, deflate, br\r\n' +
                          'Host: accounts.spotify.com\r\n' +
                          'Connection: close\r\n' +
                          '\r\n',
                        encoding: 'latin1',
                        callback: [Function: nop]
                      },
                      {
                        chunk: <Buffer 67 72 61 6e 74 5f 74 79 70 65 3d 63 6c 69 65 6e 74 5f 63 72 65 64 65 6e 74 69 61 6c 73 26 63 6c 69 65 6e 74 5f 69 64 3d 65 62 63 63 39 39 31 32 34 30 ... 69 more bytes>,
                        encoding: 'buffer',
                        callback: [Function (anonymous)]
                      },
                      allBuffers: false
                    ],
                    _pendingEncoding: '',
                    server: undefined,
                    _server: null,
                    ssl: TLSWrap {
                      _parent: TCP {
                        reading: [Getter/Setter],
                        onconnection: null,
                        [Symbol(owner_symbol)]: [Circular *2]
                      },
                      _parentWrap: undefined,
                      _secureContext: SecureContext { context: SecureContext {} },
                      reading: false,
                      onkeylog: [Function: onkeylog],
                      onhandshakestart: {},
                      onhandshakedone: [Function (anonymous)],
                      onocspresponse: [Function: onocspresponse],
                      onnewsession: [Function: onnewsessionclient],
                      onerror: [Function: onerror],
                      [Symbol(owner_symbol)]: [Circular *2]
                    },
                    _requestCert: true,
                    _rejectUnauthorized: true,
                    parser: <ref *4> HTTPParser {
                      '0': null,
                      '1': [Function: parserOnHeaders],
                      '2': [Function: parserOnHeadersComplete],
                      '3': [Function: parserOnBody],
                      '4': [Function: parserOnMessageComplete],
                      '5': null,
                      '6': null,
                      _headers: [],
                      _url: '',
                      socket: [Circular *2],
                      incoming: null,
                      outgoing: <ref *6> ClientRequest {
                        _events: [Object: null prototype] {
                          response: [Function: bound onceWrapper] {
                            listener: [Function (anonymous)]
                          },
                          abort: [Function (anonymous)],
                          aborted: [Function (anonymous)],
                          connect: [Function (anonymous)],
                          error: [Function (anonymous)],
                          socket: [Function (anonymous)],
                          timeout: [Function (anonymous)]
                        },
                        _eventsCount: 7,
                        _maxListeners: undefined,
                        outputData: [],
                        outputSize: 0,
                        writable: true,
                        destroyed: false,
                        _last: true,
                        chunkedEncoding: false,
                        shouldKeepAlive: false,
                        maxRequestsOnConnectionReached: false,
                        _defaultKeepAlive: true,
                        useChunkedEncodingByDefault: true,
                        sendDate: false,
                        _removedConnection: false,
                        _removedContLen: false,
                        _removedTE: false,
                        strictContentLength: false,
                        _contentLength: '119',
                        _hasBody: true,
                        _trailer: '',
                        finished: false,
                        _headerSent: true,
                        _closed: false,
                        socket: [Circular *2],
                        _header: 'POST /api/token HTTP/1.1\r\n' +
                          'Accept: application/json, text/plain, */*\r\n' +
                          'Content-Type: application/x-www-form-urlencoded\r\n' +
                          'User-Agent: axios/1.6.8\r\n' +
                          'Content-Length: 119\r\n' +
                          'Accept-Encoding: gzip, compress, deflate, br\r\n' +
                          'Host: accounts.spotify.com\r\n' +
                          'Connection: close\r\n' +
                          '\r\n',
                        _keepAliveTimeout: 0,
                        _onPendingData: [Function: nop],
                        agent: [Circular *3],
                        socketPath: undefined,
                        method: 'POST',
                        maxHeaderSize: undefined,
                        insecureHTTPParser: undefined,
                        joinDuplicateHeaders: undefined,
                        path: '/api/token',
                        _ended: false,
                        res: null,
                        aborted: false,
                        timeoutCb: null,
                        upgradeOrConnect: false,
                        parser: [Circular *4],
                        maxHeadersCount: null,
                        reusedSocket: false,
                        host: 'accounts.spotify.com',
                        protocol: 'https:',
                        _redirectable: Writable {
                          _writableState: WritableState {
                            objectMode: false,
                            highWaterMark: 16384,
                            finalCalled: false,
                            needDrain: false,
                            ending: false,
                            ended: false,
                            finished: false,
                            destroyed: false,
                            decodeStrings: true,
                            defaultEncoding: 'utf8',
                            length: 0,
                            writing: false,
                            corked: 0,
                            sync: true,
                            bufferProcessing: false,
                            onwrite: [Function: bound onwrite],
                            writecb: null,
                            writelen: 0,
                            afterWriteTickInfo: null,
                            buffered: [],
                            bufferedIndex: 0,
                            allBuffers: true,
                            allNoop: true,
                            pendingcb: 0,
                            constructed: true,
                            prefinished: false,
                            errorEmitted: false,
                            emitClose: true,
                            autoDestroy: true,
                            errored: null,
                            closed: false,
                            closeEmitted: false,
                            [Symbol(kOnFinished)]: []
                          },
                          _events: [Object: null prototype] {
                            response: [Function: handleResponse],
                            error: [Function: handleRequestError],
                            socket: [Function: handleRequestSocket]
                          },
                          _eventsCount: 3,
                          _maxListeners: undefined,
                          _options: {
                            maxRedirects: 21,
                            maxBodyLength: Infinity,
                            protocol: 'https:',
                            path: '/api/token',
                            method: 'POST',
                            headers: [Object: null prototype] {
                              Accept: 'application/json, text/plain, */*',
                              'Content-Type': 'application/x-www-form-urlencoded',
                              'User-Agent': 'axios/1.6.8',
                              'Content-Length': '119',
                              'Accept-Encoding': 'gzip, compress, deflate, br'
                            },
                            agents: { http: undefined, https: undefined },
                            auth: undefined,
                            family: undefined,
                            beforeRedirect: [Function: dispatchBeforeRedirect],
                            beforeRedirects: { proxy: [Function: beforeRedirect] },
                            hostname: 'accounts.spotify.com',
                            port: '',
                            agent: undefined,
                            nativeProtocols: <ref *5> {
                              'http:': {
                                _connectionListener: [Function: connectionListener],
                                METHODS: [
                                  'ACL',         'BIND',       'CHECKOUT',
                                  'CONNECT',     'COPY',       'DELETE',
                                  'GET',         'HEAD',       'LINK',
                                  'LOCK',        'M-SEARCH',   'MERGE',
                                  'MKACTIVITY',  'MKCALENDAR', 'MKCOL',
                                  'MOVE',        'NOTIFY',     'OPTIONS',
                                  'PATCH',       'POST',       'PROPFIND',
                                  'PROPPATCH',   'PURGE',      'PUT',
                                  'REBIND',      'REPORT',     'SEARCH',
                                  'SOURCE',      'SUBSCRIBE',  'TRACE',
                                  'UNBIND',      'UNLINK',     'UNLOCK',
                                  'UNSUBSCRIBE'
                                ],
                                STATUS_CODES: {
                                  '100': 'Continue',
                                  '101': 'Switching Protocols',
                                  '102': 'Processing',
                                  '103': 'Early Hints',
                                  '200': 'OK',
                                  '201': 'Created',
                                  '202': 'Accepted',
                                  '203': 'Non-Authoritative Information',
                                  '204': 'No Content',
                                  '205': 'Reset Content',
                                  '206': 'Partial Content',
                                  '207': 'Multi-Status',
                                  '208': 'Already Reported',
                                  '226': 'IM Used',
                                  '300': 'Multiple Choices',
                                  '301': 'Moved Permanently',
                                  '302': 'Found',
                                  '303': 'See Other',
                                  '304': 'Not Modified',
                                  '305': 'Use Proxy',
                                  '307': 'Temporary Redirect',
                                  '308': 'Permanent Redirect',
                                  '400': 'Bad Request',
                                  '401': 'Unauthorized',
                                  '402': 'Payment Required',
                                  '403': 'Forbidden',
                                  '404': 'Not Found',
                                  '405': 'Method Not Allowed',
                                  '406': 'Not Acceptable',
                                  '407': 'Proxy Authentication Required',
                                  '408': 'Request Timeout',
                                  '409': 'Conflict',
                                  '410': 'Gone',
                                  '411': 'Length Required',
                                  '412': 'Precondition Failed',
                                  '413': 'Payload Too Large',
                                  '414': 'URI Too Long',
                                  '415': 'Unsupported Media Type',
                                  '416': 'Range Not Satisfiable',
                                  '417': 'Expectation Failed',
                                  '418': "I'm a Teapot",
                                  '421': 'Misdirected Request',
                                  '422': 'Unprocessable Entity',
                                  '423': 'Locked',
                                  '424': 'Failed Dependency',
                                  '425': 'Too Early',
                                  '426': 'Upgrade Required',
                                  '428': 'Precondition Required',
                                  '429': 'Too Many Requests',
                                  '431': 'Request Header Fields Too Large',
                                  '451': 'Unavailable For Legal Reasons',
                                  '500': 'Internal Server Error',
                                  '501': 'Not Implemented',
                                  '502': 'Bad Gateway',
                                  '503': 'Service Unavailable',
                                  '504': 'Gateway Timeout',
                                  '505': 'HTTP Version Not Supported',
                                  '506': 'Variant Also Negotiates',
                                  '507': 'Insufficient Storage',
                                  '508': 'Loop Detected',
                                  '509': 'Bandwidth Limit Exceeded',
                                  '510': 'Not Extended',
                                  '511': 'Network Authentication Required'
                                },
                                Agent: [Function: Agent] {
                                  defaultMaxSockets: Infinity
                                },
                                ClientRequest: [Function: ClientRequest],
                                IncomingMessage: [Function: IncomingMessage],
                                OutgoingMessage: [Function: OutgoingMessage],
                                Server: [Function: Server],
                                ServerResponse: [Function: ServerResponse],
                                createServer: [Function: createServer],
                                validateHeaderName: [Function: __node_internal_],
                                validateHeaderValue: [Function: __node_internal_],
                                get: [Function: get],
                                request: [Function: request],
                                setMaxIdleHTTPParsers: [Function: setMaxIdleHTTPParsers],
                                maxHeaderSize: [Getter],
                                globalAgent: [Getter/Setter]
                              },
                              'https:': {
                                Agent: [Function: Agent],
                                globalAgent: [Circular *3],
                                Server: [Function: Server],
                                createServer: [Function: createServer],
                                get: [Function: get],
                                request: [Function: request]
                              }
                            },
                            pathname: '/api/token'
                          },
                          _ended: false,
                          _ending: true,
                          _redirectCount: 0,
                          _redirects: [],
                          _requestBodyLength: 119,
                          _requestBodyBuffers: [
                            {
                              data: <Buffer 67 72 61 6e 74 5f 74 79 70 65 3d 63 6c 69 65 6e 74 5f 63 72 65 64 65 6e 74 69 61 6c 73 26 63 6c 69 65 6e 74 5f 69 64 3d 65 62 63 63 39 39 31 32 34 30 ... 69 more bytes>,
                              encoding: undefined
                            }
                          ],
                          _onNativeResponse: [Function (anonymous)],
                          _currentRequest: [Circular *6],
                          _currentUrl: 'https://accounts.spotify.com/api/token',
                          [Symbol(kCapture)]: false
                        },
                        [Symbol(kCapture)]: false,
                        [Symbol(kBytesWritten)]: 0,
                        [Symbol(kEndCalled)]: false,
                        [Symbol(kNeedDrain)]: false,
                        [Symbol(corked)]: 0,
                        [Symbol(kOutHeaders)]: [Object: null prototype] {
                          accept: [
                            'Accept',
                            'application/json, text/plain, */*'
                          ],
                          'content-type': [
                            'Content-Type',
                            'application/x-www-form-urlencoded'
                          ],
                          'user-agent': [ 'User-Agent', 'axios/1.6.8' ],
                          'content-length': [ 'Content-Length', '119' ],
                          'accept-encoding': [
                            'Accept-Encoding',
                            'gzip, compress, deflate, br'
                          ],
                          host: [ 'Host', 'accounts.spotify.com' ]
                        },
                        [Symbol(errored)]: null,
                        [Symbol(kUniqueHeaders)]: null
                      },
                      maxHeaderPairs: 2000,
                      _consumed: false,
                      onIncoming: [Function: parserOnIncomingClient],
                      joinDuplicateHeaders: undefined,
                      [Symbol(resource_symbol)]: HTTPClientAsyncResource {
                        type: 'HTTPINCOMINGMESSAGE',
                        req: <ref *6> ClientRequest {
                          _events: [Object: null prototype] {
                            response: [Function: bound onceWrapper] {
                              listener: [Function (anonymous)]
                            },
                            abort: [Function (anonymous)],
                            aborted: [Function (anonymous)],
                            connect: [Function (anonymous)],
                            error: [Function (anonymous)],
                            socket: [Function (anonymous)],
                            timeout: [Function (anonymous)]
                          },
                          _eventsCount: 7,
                          _maxListeners: undefined,
                          outputData: [],
                          outputSize: 0,
                          writable: true,
                          destroyed: false,
                          _last: true,
                          chunkedEncoding: false,
                          shouldKeepAlive: false,
                          maxRequestsOnConnectionReached: false,
                          _defaultKeepAlive: true,
                          useChunkedEncodingByDefault: true,
                          sendDate: false,
                          _removedConnection: false,
                          _removedContLen: false,
                          _removedTE: false,
                          strictContentLength: false,
                          _contentLength: '119',
                          _hasBody: true,
                          _trailer: '',
                          finished: false,
                          _headerSent: true,
                          _closed: false,
                          socket: [Circular *2],
                          _header: 'POST /api/token HTTP/1.1\r\n' +
                            'Accept: application/json, text/plain, */*\r\n' +
                            'Content-Type: application/x-www-form-urlencoded\r\n' +
                            'User-Agent: axios/1.6.8\r\n' +
                            'Content-Length: 119\r\n' +
                            'Accept-Encoding: gzip, compress, deflate, br\r\n' +
                            'Host: accounts.spotify.com\r\n' +
                            'Connection: close\r\n' +
                            '\r\n',
                          _keepAliveTimeout: 0,
                          _onPendingData: [Function: nop],
                          agent: [Circular *3],
                          socketPath: undefined,
                          method: 'POST',
                          maxHeaderSize: undefined,
                          insecureHTTPParser: undefined,
                          joinDuplicateHeaders: undefined,
                          path: '/api/token',
                          _ended: false,
                          res: null,
                          aborted: false,
                          timeoutCb: null,
                          upgradeOrConnect: false,
                          parser: [Circular *4],
                          maxHeadersCount: null,
                          reusedSocket: false,
                          host: 'accounts.spotify.com',
                          protocol: 'https:',
                          _redirectable: Writable {
                            _writableState: WritableState {
                              objectMode: false,
                              highWaterMark: 16384,
                              finalCalled: false,
                              needDrain: false,
                              ending: false,
                              ended: false,
                              finished: false,
                              destroyed: false,
                              decodeStrings: true,
                              defaultEncoding: 'utf8',
                              length: 0,
                              writing: false,
                              corked: 0,
                              sync: true,
                              bufferProcessing: false,
                              onwrite: [Function: bound onwrite],
                              writecb: null,
                              writelen: 0,
                              afterWriteTickInfo: null,
                              buffered: [],
                              bufferedIndex: 0,
                              allBuffers: true,
                              allNoop: true,
                              pendingcb: 0,
                              constructed: true,
                              prefinished: false,
                              errorEmitted: false,
                              emitClose: true,
                              autoDestroy: true,
                              errored: null,
                              closed: false,
                              closeEmitted: false,
                              [Symbol(kOnFinished)]: []
                            },
                            _events: [Object: null prototype] {
                              response: [Function: handleResponse],
                              error: [Function: handleRequestError],
                              socket: [Function: handleRequestSocket]
                            },
                            _eventsCount: 3,
                            _maxListeners: undefined,
                            _options: {
                              maxRedirects: 21,
                              maxBodyLength: Infinity,
                              protocol: 'https:',
                              path: '/api/token',
                              method: 'POST',
                              headers: [Object: null prototype] {
                                Accept: 'application/json, text/plain, */*',
                                'Content-Type': 'application/x-www-form-urlencoded',
                                'User-Agent': 'axios/1.6.8',
                                'Content-Length': '119',
                                'Accept-Encoding': 'gzip, compress, deflate, br'
                              },
                              agents: { http: undefined, https: undefined },
                              auth: undefined,
                              family: undefined,
                              beforeRedirect: [Function: dispatchBeforeRedirect],
                              beforeRedirects: { proxy: [Function: beforeRedirect] },
                              hostname: 'accounts.spotify.com',
                              port: '',
                              agent: undefined,
                              nativeProtocols: <ref *5> {
                                'http:': {
                                  _connectionListener: [Function: connectionListener],
                                  METHODS: [
                                    'ACL',         'BIND',       'CHECKOUT',
                                    'CONNECT',     'COPY',       'DELETE',
                                    'GET',         'HEAD',       'LINK',
                                    'LOCK',        'M-SEARCH',   'MERGE',
                                    'MKACTIVITY',  'MKCALENDAR', 'MKCOL',
                                    'MOVE',        'NOTIFY',     'OPTIONS',
                                    'PATCH',       'POST',       'PROPFIND',
                                    'PROPPATCH',   'PURGE',      'PUT',
                                    'REBIND',      'REPORT',     'SEARCH',
                                    'SOURCE',      'SUBSCRIBE',  'TRACE',
                                    'UNBIND',      'UNLINK',     'UNLOCK',
                                    'UNSUBSCRIBE'
                                  ],
                                  STATUS_CODES: {
                                    '100': 'Continue',
                                    '101': 'Switching Protocols',
                                    '102': 'Processing',
                                    '103': 'Early Hints',
                                    '200': 'OK',
                                    '201': 'Created',
                                    '202': 'Accepted',
                                    '203': 'Non-Authoritative Information',
                                    '204': 'No Content',
                                    '205': 'Reset Content',
                                    '206': 'Partial Content',
                                    '207': 'Multi-Status',
                                    '208': 'Already Reported',
                                    '226': 'IM Used',
                                    '300': 'Multiple Choices',
                                    '301': 'Moved Permanently',
                                    '302': 'Found',
                                    '303': 'See Other',
                                    '304': 'Not Modified',
                                    '305': 'Use Proxy',
                                    '307': 'Temporary Redirect',
                                    '308': 'Permanent Redirect',
                                    '400': 'Bad Request',
                                    '401': 'Unauthorized',
                                    '402': 'Payment Required',
                                    '403': 'Forbidden',
                                    '404': 'Not Found',
                                    '405': 'Method Not Allowed',
                                    '406': 'Not Acceptable',
                                    '407': 'Proxy Authentication Required',
                                    '408': 'Request Timeout',
                                    '409': 'Conflict',
                                    '410': 'Gone',
                                    '411': 'Length Required',
                                    '412': 'Precondition Failed',
                                    '413': 'Payload Too Large',
                                    '414': 'URI Too Long',
                                    '415': 'Unsupported Media Type',
                                    '416': 'Range Not Satisfiable',
                                    '417': 'Expectation Failed',
                                    '418': "I'm a Teapot",
                                    '421': 'Misdirected Request',
                                    '422': 'Unprocessable Entity',
                                    '423': 'Locked',
                                    '424': 'Failed Dependency',
                                    '425': 'Too Early',
                                    '426': 'Upgrade Required',
                                    '428': 'Precondition Required',
                                    '429': 'Too Many Requests',
                                    '431': 'Request Header Fields Too Large',
                                    '451': 'Unavailable For Legal Reasons',
                                    '500': 'Internal Server Error',
                                    '501': 'Not Implemented',
                                    '502': 'Bad Gateway',
                                    '503': 'Service Unavailable',
                                    '504': 'Gateway Timeout',
                                    '505': 'HTTP Version Not Supported',
                                    '506': 'Variant Also Negotiates',
                                    '507': 'Insufficient Storage',
                                    '508': 'Loop Detected',
                                    '509': 'Bandwidth Limit Exceeded',
                                    '510': 'Not Extended',
                                    '511': 'Network Authentication Required'
                                  },
                                  Agent: [Function: Agent] {
                                    defaultMaxSockets: Infinity
                                  },
                                  ClientRequest: [Function: ClientRequest],
                                  IncomingMessage: [Function: IncomingMessage],
                                  OutgoingMessage: [Function: OutgoingMessage],
                                  Server: [Function: Server],
                                  ServerResponse: [Function: ServerResponse],
                                  createServer: [Function: createServer],
                                  validateHeaderName: [Function: __node_internal_],
                                  validateHeaderValue: [Function: __node_internal_],
                                  get: [Function: get],
                                  request: [Function: request],
                                  setMaxIdleHTTPParsers: [Function: setMaxIdleHTTPParsers],
                                  maxHeaderSize: [Getter],
                                  globalAgent: [Getter/Setter]
                                },
                                'https:': {
                                  Agent: [Function: Agent],
                                  globalAgent: [Circular *3],
                                  Server: [Function: Server],
                                  createServer: [Function: createServer],
                                  get: [Function: get],
                                  request: [Function: request]
                                }
                              },
                              pathname: '/api/token'
                            },
                            _ended: false,
                            _ending: true,
                            _redirectCount: 0,
                            _redirects: [],
                            _requestBodyLength: 119,
                            _requestBodyBuffers: [
                              {
                                data: <Buffer 67 72 61 6e 74 5f 74 79 70 65 3d 63 6c 69 65 6e 74 5f 63 72 65 64 65 6e 74 69 61 6c 73 26 63 6c 69 65 6e 74 5f 69 64 3d 65 62 63 63 39 39 31 32 34 30 ... 69 more bytes>,
                                encoding: undefined
                              }
                            ],
                            _onNativeResponse: [Function (anonymous)],
                            _currentRequest: [Circular *6],
                            _currentUrl: 'https://accounts.spotify.com/api/token',
                            [Symbol(kCapture)]: false
                          },
                          [Symbol(kCapture)]: false,
                          [Symbol(kBytesWritten)]: 0,
                          [Symbol(kEndCalled)]: false,
                          [Symbol(kNeedDrain)]: false,
                          [Symbol(corked)]: 0,
                          [Symbol(kOutHeaders)]: [Object: null prototype] {
                            accept: [
                              'Accept',
                              'application/json, text/plain, */*'
                            ],
                            'content-type': [
                              'Content-Type',
                              'application/x-www-form-urlencoded'
                            ],
                            'user-agent': [ 'User-Agent', 'axios/1.6.8' ],
                            'content-length': [ 'Content-Length', '119' ],
                            'accept-encoding': [
                              'Accept-Encoding',
                              'gzip, compress, deflate, br'
                            ],
                            host: [ 'Host', 'accounts.spotify.com' ]
                          },
                          [Symbol(errored)]: null,
                          [Symbol(kUniqueHeaders)]: null
                        }
                      }
                    },
                    _httpMessage: <ref *6> ClientRequest {
                      _events: [Object: null prototype] {
                        response: [Function: bound onceWrapper] {
                          listener: [Function (anonymous)]
                        },
                        abort: [Function (anonymous)],
                        aborted: [Function (anonymous)],
                        connect: [Function (anonymous)],
                        error: [Function (anonymous)],
                        socket: [Function (anonymous)],
                        timeout: [Function (anonymous)]
                      },
                      _eventsCount: 7,
                      _maxListeners: undefined,
                      outputData: [],
                      outputSize: 0,
                      writable: true,
                      destroyed: false,
                      _last: true,
                      chunkedEncoding: false,
                      shouldKeepAlive: false,
                      maxRequestsOnConnectionReached: false,
                      _defaultKeepAlive: true,
                      useChunkedEncodingByDefault: true,
                      sendDate: false,
                      _removedConnection: false,
                      _removedContLen: false,
                      _removedTE: false,
                      strictContentLength: false,
                      _contentLength: '119',
                      _hasBody: true,
                      _trailer: '',
                      finished: false,
                      _headerSent: true,
                      _closed: false,
                      socket: [Circular *2],
                      _header: 'POST /api/token HTTP/1.1\r\n' +
                        'Accept: application/json, text/plain, */*\r\n' +
                        'Content-Type: application/x-www-form-urlencoded\r\n' +
                        'User-Agent: axios/1.6.8\r\n' +
                        'Content-Length: 119\r\n' +
                        'Accept-Encoding: gzip, compress, deflate, br\r\n' +
                        'Host: accounts.spotify.com\r\n' +
                        'Connection: close\r\n' +
                        '\r\n',
                      _keepAliveTimeout: 0,
                      _onPendingData: [Function: nop],
                      agent: [Circular *3],
                      socketPath: undefined,
                      method: 'POST',
                      maxHeaderSize: undefined,
                      insecureHTTPParser: undefined,
                      joinDuplicateHeaders: undefined,
                      path: '/api/token',
                      _ended: false,
                      res: null,
                      aborted: false,
                      timeoutCb: null,
                      upgradeOrConnect: false,
                      parser: <ref *4> HTTPParser {
                        '0': null,
                        '1': [Function: parserOnHeaders],
                        '2': [Function: parserOnHeadersComplete],
                        '3': [Function: parserOnBody],
                        '4': [Function: parserOnMessageComplete],
                        '5': null,
                        '6': null,
                        _headers: [],
                        _url: '',
                        socket: [Circular *2],
                        incoming: null,
                        outgoing: [Circular *6],
                        maxHeaderPairs: 2000,
                        _consumed: false,
                        onIncoming: [Function: parserOnIncomingClient],
                        joinDuplicateHeaders: undefined,
                        [Symbol(resource_symbol)]: HTTPClientAsyncResource {
                          type: 'HTTPINCOMINGMESSAGE',
                          req: [Circular *6]
                        }
                      },
                      maxHeadersCount: null,
                      reusedSocket: false,
                      host: 'accounts.spotify.com',
                      protocol: 'https:',
                      _redirectable: Writable {
                        _writableState: WritableState {
                          objectMode: false,
                          highWaterMark: 16384,
                          finalCalled: false,
                          needDrain: false,
                          ending: false,
                          ended: false,
                          finished: false,
                          destroyed: false,
                          decodeStrings: true,
                          defaultEncoding: 'utf8',
                          length: 0,
                          writing: false,
                          corked: 0,
                          sync: true,
                          bufferProcessing: false,
                          onwrite: [Function: bound onwrite],
                          writecb: null,
                          writelen: 0,
                          afterWriteTickInfo: null,
                          buffered: [],
                          bufferedIndex: 0,
                          allBuffers: true,
                          allNoop: true,
                          pendingcb: 0,
                          constructed: true,
                          prefinished: false,
                          errorEmitted: false,
                          emitClose: true,
                          autoDestroy: true,
                          errored: null,
                          closed: false,
                          closeEmitted: false,
                          [Symbol(kOnFinished)]: []
                        },
                        _events: [Object: null prototype] {
                          response: [Function: handleResponse],
                          error: [Function: handleRequestError],
                          socket: [Function: handleRequestSocket]
                        },
                        _eventsCount: 3,
                        _maxListeners: undefined,
                        _options: {
                          maxRedirects: 21,
                          maxBodyLength: Infinity,
                          protocol: 'https:',
                          path: '/api/token',
                          method: 'POST',
                          headers: [Object: null prototype] {
                            Accept: 'application/json, text/plain, */*',
                            'Content-Type': 'application/x-www-form-urlencoded',
                            'User-Agent': 'axios/1.6.8',
                            'Content-Length': '119',
                            'Accept-Encoding': 'gzip, compress, deflate, br'
                          },
                          agents: { http: undefined, https: undefined },
                          auth: undefined,
                          family: undefined,
                          beforeRedirect: [Function: dispatchBeforeRedirect],
                          beforeRedirects: { proxy: [Function: beforeRedirect] },
                          hostname: 'accounts.spotify.com',
                          port: '',
                          agent: undefined,
                          nativeProtocols: <ref *5> {
                            'http:': {
                              _connectionListener: [Function: connectionListener],
                              METHODS: [
                                'ACL',         'BIND',       'CHECKOUT',
                                'CONNECT',     'COPY',       'DELETE',
                                'GET',         'HEAD',       'LINK',
                                'LOCK',        'M-SEARCH',   'MERGE',
                                'MKACTIVITY',  'MKCALENDAR', 'MKCOL',
                                'MOVE',        'NOTIFY',     'OPTIONS',
                                'PATCH',       'POST',       'PROPFIND',
                                'PROPPATCH',   'PURGE',      'PUT',
                                'REBIND',      'REPORT',     'SEARCH',
                                'SOURCE',      'SUBSCRIBE',  'TRACE',
                                'UNBIND',      'UNLINK',     'UNLOCK',
                                'UNSUBSCRIBE'
                              ],
                              STATUS_CODES: {
                                '100': 'Continue',
                                '101': 'Switching Protocols',
                                '102': 'Processing',
                                '103': 'Early Hints',
                                '200': 'OK',
                                '201': 'Created',
                                '202': 'Accepted',
                                '203': 'Non-Authoritative Information',
                                '204': 'No Content',
                                '205': 'Reset Content',
                                '206': 'Partial Content',
                                '207': 'Multi-Status',
                                '208': 'Already Reported',
                                '226': 'IM Used',
                                '300': 'Multiple Choices',
                                '301': 'Moved Permanently',
                                '302': 'Found',
                                '303': 'See Other',
                                '304': 'Not Modified',
                                '305': 'Use Proxy',
                                '307': 'Temporary Redirect',
                                '308': 'Permanent Redirect',
                                '400': 'Bad Request',
                                '401': 'Unauthorized',
                                '402': 'Payment Required',
                                '403': 'Forbidden',
                                '404': 'Not Found',
                                '405': 'Method Not Allowed',
                                '406': 'Not Acceptable',
                                '407': 'Proxy Authentication Required',
                                '408': 'Request Timeout',
                                '409': 'Conflict',
                                '410': 'Gone',
                                '411': 'Length Required',
                                '412': 'Precondition Failed',
                                '413': 'Payload Too Large',
                                '414': 'URI Too Long',
                                '415': 'Unsupported Media Type',
                                '416': 'Range Not Satisfiable',
                                '417': 'Expectation Failed',
                                '418': "I'm a Teapot",
                                '421': 'Misdirected Request',
                                '422': 'Unprocessable Entity',
                                '423': 'Locked',
                                '424': 'Failed Dependency',
                                '425': 'Too Early',
                                '426': 'Upgrade Required',
                                '428': 'Precondition Required',
                                '429': 'Too Many Requests',
                                '431': 'Request Header Fields Too Large',
                                '451': 'Unavailable For Legal Reasons',
                                '500': 'Internal Server Error',
                                '501': 'Not Implemented',
                                '502': 'Bad Gateway',
                                '503': 'Service Unavailable',
                                '504': 'Gateway Timeout',
                                '505': 'HTTP Version Not Supported',
                                '506': 'Variant Also Negotiates',
                                '507': 'Insufficient Storage',
                                '508': 'Loop Detected',
                                '509': 'Bandwidth Limit Exceeded',
                                '510': 'Not Extended',
                                '511': 'Network Authentication Required'
                              },
                              Agent: [Function: Agent] {
                                defaultMaxSockets: Infinity
                              },
                              ClientRequest: [Function: ClientRequest],
                              IncomingMessage: [Function: IncomingMessage],
                              OutgoingMessage: [Function: OutgoingMessage],
                              Server: [Function: Server],
                              ServerResponse: [Function: ServerResponse],
                              createServer: [Function: createServer],
                              validateHeaderName: [Function: __node_internal_],
                              validateHeaderValue: [Function: __node_internal_],
                              get: [Function: get],
                              request: [Function: request],
                              setMaxIdleHTTPParsers: [Function: setMaxIdleHTTPParsers],
                              maxHeaderSize: [Getter],
                              globalAgent: [Getter/Setter]
                            },
                            'https:': {
                              Agent: [Function: Agent],
                              globalAgent: [Circular *3],
                              Server: [Function: Server],
                              createServer: [Function: createServer],
                              get: [Function: get],
                              request: [Function: request]
                            }
                          },
                          pathname: '/api/token'
                        },
                        _ended: false,
                        _ending: true,
                        _redirectCount: 0,
                        _redirects: [],
                        _requestBodyLength: 119,
                        _requestBodyBuffers: [
                          {
                            data: <Buffer 67 72 61 6e 74 5f 74 79 70 65 3d 63 6c 69 65 6e 74 5f 63 72 65 64 65 6e 74 69 61 6c 73 26 63 6c 69 65 6e 74 5f 69 64 3d 65 62 63 63 39 39 31 32 34 30 ... 69 more bytes>,
                            encoding: undefined
                          }
                        ],
                        _onNativeResponse: [Function (anonymous)],
                        _currentRequest: [Circular *6],
                        _currentUrl: 'https://accounts.spotify.com/api/token',
                        [Symbol(kCapture)]: false
                      },
                      [Symbol(kCapture)]: false,
                      [Symbol(kBytesWritten)]: 0,
                      [Symbol(kEndCalled)]: false,
                      [Symbol(kNeedDrain)]: false,
                      [Symbol(corked)]: 0,
                      [Symbol(kOutHeaders)]: [Object: null prototype] {
                        accept: [
                          'Accept',
                          'application/json, text/plain, */*'
                        ],
                        'content-type': [
                          'Content-Type',
                          'application/x-www-form-urlencoded'
                        ],
                        'user-agent': [ 'User-Agent', 'axios/1.6.8' ],
                        'content-length': [ 'Content-Length', '119' ],
                        'accept-encoding': [
                          'Accept-Encoding',
                          'gzip, compress, deflate, br'
                        ],
                        host: [ 'Host', 'accounts.spotify.com' ]
                      },
                      [Symbol(errored)]: null,
                      [Symbol(kUniqueHeaders)]: null
                    },
                    [Symbol(res)]: TLSWrap {
                      _parent: TCP {
                        reading: [Getter/Setter],
                        onconnection: null,
                        [Symbol(owner_symbol)]: [Circular *2]
                      },
                      _parentWrap: undefined,
                      _secureContext: SecureContext { context: SecureContext {} },
                      reading: false,
                      onkeylog: [Function: onkeylog],
                      onhandshakestart: {},
                      onhandshakedone: [Function (anonymous)],
                      onocspresponse: [Function: onocspresponse],
                      onnewsession: [Function: onnewsessionclient],
                      onerror: [Function: onerror],
                      [Symbol(owner_symbol)]: [Circular *2]
                    },
                    [Symbol(verified)]: false,
                    [Symbol(pendingSession)]: null,
                    [Symbol(async_id_symbol)]: 6,
                    [Symbol(kHandle)]: TLSWrap {
                      _parent: TCP {
                        reading: [Getter/Setter],
                        onconnection: null,
                        [Symbol(owner_symbol)]: [Circular *2]
                      },
                      _parentWrap: undefined,
                      _secureContext: SecureContext { context: SecureContext {} },
                      reading: false,
                      onkeylog: [Function: onkeylog],
                      onhandshakestart: {},
                      onhandshakedone: [Function (anonymous)],
                      onocspresponse: [Function: onocspresponse],
                      onnewsession: [Function: onnewsessionclient],
                      onerror: [Function: onerror],
                      [Symbol(owner_symbol)]: [Circular *2]
                    },
                    [Symbol(lastWriteQueueSize)]: 0,
                    [Symbol(timeout)]: null,
                    [Symbol(kBuffer)]: null,
                    [Symbol(kBufferCb)]: null,
                    [Symbol(kBufferGen)]: null,
                    [Symbol(kCapture)]: false,
                    [Symbol(kSetNoDelay)]: false,
                    [Symbol(kSetKeepAlive)]: true,
                    [Symbol(kSetKeepAliveInitialDelay)]: 60,
                    [Symbol(kBytesRead)]: 0,
                    [Symbol(kBytesWritten)]: 0,
                    [Symbol(connect-options)]: {
                      rejectUnauthorized: true,
                      ciphers: 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
                      checkServerIdentity: [Function: checkServerIdentity],
                      minDHSize: 1024,
                      maxRedirects: 21,
                      maxBodyLength: Infinity,
                      protocol: 'https:',
                      path: null,
                      method: 'POST',
                      headers: [Object: null prototype] {
                        Accept: 'application/json, text/plain, */*',
                        'Content-Type': 'application/x-www-form-urlencoded',
                        'User-Agent': 'axios/1.6.8',
                        'Content-Length': '119',
                        'Accept-Encoding': 'gzip, compress, deflate, br'
                      },
                      agents: { http: undefined, https: undefined },
                      auth: undefined,
                      family: undefined,
                      beforeRedirect: [Function: dispatchBeforeRedirect],
                      beforeRedirects: { proxy: [Function: beforeRedirect] },
                      hostname: 'accounts.spotify.com',
                      port: 443,
                      agent: undefined,
                      nativeProtocols: <ref *5> {
                        'http:': {
                          _connectionListener: [Function: connectionListener],
                          METHODS: [
                            'ACL',         'BIND',       'CHECKOUT',
                            'CONNECT',     'COPY',       'DELETE',
                            'GET',         'HEAD',       'LINK',
                            'LOCK',        'M-SEARCH',   'MERGE',
                            'MKACTIVITY',  'MKCALENDAR', 'MKCOL',
                            'MOVE',        'NOTIFY',     'OPTIONS',
                            'PATCH',       'POST',       'PROPFIND',
                            'PROPPATCH',   'PURGE',      'PUT',
                            'REBIND',      'REPORT',     'SEARCH',
                            'SOURCE',      'SUBSCRIBE',  'TRACE',
                            'UNBIND',      'UNLINK',     'UNLOCK',
                            'UNSUBSCRIBE'
                          ],
                          STATUS_CODES: {
                            '100': 'Continue',
                            '101': 'Switching Protocols',
                            '102': 'Processing',
                            '103': 'Early Hints',
                            '200': 'OK',
                            '201': 'Created',
                            '202': 'Accepted',
                            '203': 'Non-Authoritative Information',
                            '204': 'No Content',
                            '205': 'Reset Content',
                            '206': 'Partial Content',
                            '207': 'Multi-Status',
                            '208': 'Already Reported',
                            '226': 'IM Used',
                            '300': 'Multiple Choices',
                            '301': 'Moved Permanently',
                            '302': 'Found',
                            '303': 'See Other',
                            '304': 'Not Modified',
                            '305': 'Use Proxy',
                            '307': 'Temporary Redirect',
                            '308': 'Permanent Redirect',
                            '400': 'Bad Request',
                            '401': 'Unauthorized',
                            '402': 'Payment Required',
                            '403': 'Forbidden',
                            '404': 'Not Found',
                            '405': 'Method Not Allowed',
                            '406': 'Not Acceptable',
                            '407': 'Proxy Authentication Required',
                            '408': 'Request Timeout',
                            '409': 'Conflict',
                            '410': 'Gone',
                            '411': 'Length Required',
                            '412': 'Precondition Failed',
                            '413': 'Payload Too Large',
                            '414': 'URI Too Long',
                            '415': 'Unsupported Media Type',
                            '416': 'Range Not Satisfiable',
                            '417': 'Expectation Failed',
                            '418': "I'm a Teapot",
                            '421': 'Misdirected Request',
                            '422': 'Unprocessable Entity',
                            '423': 'Locked',
                            '424': 'Failed Dependency',
                            '425': 'Too Early',
                            '426': 'Upgrade Required',
                            '428': 'Precondition Required',
                            '429': 'Too Many Requests',
                            '431': 'Request Header Fields Too Large',
                            '451': 'Unavailable For Legal Reasons',
                            '500': 'Internal Server Error',
                            '501': 'Not Implemented',
                            '502': 'Bad Gateway',
                            '503': 'Service Unavailable',
                            '504': 'Gateway Timeout',
                            '505': 'HTTP Version Not Supported',
                            '506': 'Variant Also Negotiates',
                            '507': 'Insufficient Storage',
                            '508': 'Loop Detected',
                            '509': 'Bandwidth Limit Exceeded',
                            '510': 'Not Extended',
                            '511': 'Network Authentication Required'
                          },
                          Agent: [Function: Agent] {
                            defaultMaxSockets: Infinity
                          },
                          ClientRequest: [Function: ClientRequest],
                          IncomingMessage: [Function: IncomingMessage],
                          OutgoingMessage: [Function: OutgoingMessage],
                          Server: [Function: Server],
                          ServerResponse: [Function: ServerResponse],
                          createServer: [Function: createServer],
                          validateHeaderName: [Function: __node_internal_],
                          validateHeaderValue: [Function: __node_internal_],
                          get: [Function: get],
                          request: [Function: request],
                          setMaxIdleHTTPParsers: [Function: setMaxIdleHTTPParsers],
                          maxHeaderSize: [Getter],
                          globalAgent: [Getter/Setter]
                        },
                        'https:': {
                          Agent: [Function: Agent],
                          globalAgent: [Circular *3],
                          Server: [Function: Server],
                          createServer: [Function: createServer],
                          get: [Function: get],
                          request: [Function: request]
                        }
                      },
                      pathname: '/api/token',
                      _defaultAgent: [Circular *3],
                      host: 'accounts.spotify.com',
                      noDelay: true,
                      servername: 'accounts.spotify.com',
                      _agentKey: 'accounts.spotify.com:443:::::::::::::::::::::',
                      encoding: null,
                      singleUse: true
                    }
                  }
                ]
              },
              freeSockets: [Object: null prototype] {},
              keepAliveMsecs: 1000,
              keepAlive: false,
              maxSockets: Infinity,
              maxFreeSockets: 256,
              scheduling: 'lifo',
              maxTotalSockets: Infinity,
              totalSocketCount: 1,
              maxCachedSessions: 100,
              _sessionCache: {
                map: {
                  'www.wikidata.org:443:::::::::::::::::::::': <Buffer 30 82 08 7d 02 01 01 02 02 03 04 04 02 13 02 04 20 49 81 10 e3 ea 7d 84 9b e4 63 a1 f3 bf 02 aa db cd 63 84 bf 4f 51 15 cc 96 ff a3 1c ef 0f 60 a7 04 ... 2127 more bytes>
                },
                list: [ 'www.wikidata.org:443:::::::::::::::::::::' ]
              },
              [Symbol(kCapture)]: false
            },
            host: 'www.wikidata.org',
            noDelay: true,
            servername: 'www.wikidata.org',
            _agentKey: 'www.wikidata.org:443:::::::::::::::::::::',
            encoding: null,
            singleUse: true
          }
        },
        _consuming: false,
        _dumped: false,
        req: [Circular *1],
        responseUrl: 'https://www.wikidata.org/w/rest.php/oauth2/access_token',
        redirects: [],
        [Symbol(kCapture)]: false,
        [Symbol(kHeaders)]: {
          date: 'Wed, 01 May 2024 17:15:27 GMT',
          server: 'mw-api-ext.eqiad.main-6568d96485-7z7s5',
          'x-content-type-options': 'nosniff',
          'cache-control': 'private,no-cache,s-maxage=0',
          'access-control-allow-origin': '*',
          vary: 'Accept-Encoding',
          'content-type': 'application/json',
          age: '0',
          'x-cache': 'cp1104 miss, cp1104 pass',
          'x-cache-status': 'pass',
          'server-timing': 'cache;desc="pass", host;desc="cp1104"',
          'strict-transport-security': 'max-age=106384710; includeSubDomains; preload',
          'report-to': '{ "group": "wm_nel", "max_age": 604800, "endpoints": [{ "url": "https://intake-logging.wikimedia.org/v1/events?stream=w3c.reportingapi.network_error&schema_uri=/w3c/reportingapi/network_error/1.0.0" }] }',
          nel: '{ "report_to": "wm_nel", "max_age": 604800, "failure_fraction": 0.05, "success_fraction": 0.0}',
          'set-cookie': [
            'WMF-Last-Access=01-May-2024;Path=/;HttpOnly;secure;Expires=Sun, 02 Jun 2024 12:00:00 GMT',
            'WMF-Last-Access-Global=01-May-2024;Path=/;Domain=.wikidata.org;HttpOnly;secure;Expires=Sun, 02 Jun 2024 12:00:00 GMT',
            'GeoIP=BR:PR:Curitiba:-25.50:-49.29:v4; Path=/; secure; Domain=.wikidata.org',
            'NetworkProbeLimit=0.001;Path=/;Secure;Max-Age=3600'
          ],
          'x-client-ip': '186.219.185.78',
          'content-length': '177',
          connection: 'close'
        },
        [Symbol(kHeadersCount)]: 44,
        [Symbol(kTrailers)]: null,
        [Symbol(kTrailersCount)]: 0
      },
      aborted: false,
      timeoutCb: null,
      upgradeOrConnect: false,
      parser: null,
      maxHeadersCount: null,
      reusedSocket: false,
      host: 'www.wikidata.org',
      protocol: 'https:',
      _redirectable: Writable {
        _writableState: WritableState {
          objectMode: false,
          highWaterMark: 16384,
          finalCalled: false,
          needDrain: false,
          ending: false,
          ended: false,
          finished: false,
          destroyed: false,
          decodeStrings: true,
          defaultEncoding: 'utf8',
          length: 0,
          writing: false,
          corked: 0,
          sync: true,
          bufferProcessing: false,
          onwrite: [Function: bound onwrite],
          writecb: null,
          writelen: 0,
          afterWriteTickInfo: null,
          buffered: [],
          bufferedIndex: 0,
          allBuffers: true,
          allNoop: true,
          pendingcb: 0,
          constructed: true,
          prefinished: false,
          errorEmitted: false,
          emitClose: true,
          autoDestroy: true,
          errored: null,
          closed: false,
          closeEmitted: false,
          [Symbol(kOnFinished)]: []
        },
        _events: [Object: null prototype] {
          response: [Function: handleResponse],
          error: [Function: handleRequestError],
          socket: [Function: handleRequestSocket]
        },
        _eventsCount: 3,
        _maxListeners: undefined,
        _options: {
          maxRedirects: 21,
          maxBodyLength: Infinity,
          protocol: 'https:',
          path: '/w/rest.php/oauth2/access_token',
          method: 'POST',
          headers: [Object: null prototype] {
            Accept: 'application/json, text/plain, */*',
            'Content-Type': 'application/json',
            'User-Agent': 'axios/1.6.8',
            'Content-Length': '141',
            'Accept-Encoding': 'gzip, compress, deflate, br'
          },
          agents: { http: undefined, https: undefined },
          auth: undefined,
          family: undefined,
          beforeRedirect: [Function: dispatchBeforeRedirect],
          beforeRedirects: { proxy: [Function: beforeRedirect] },
          hostname: 'www.wikidata.org',
          port: '',
          agent: undefined,
          nativeProtocols: <ref *5> {
            'http:': {
              _connectionListener: [Function: connectionListener],
              METHODS: [
                'ACL',         'BIND',       'CHECKOUT',
                'CONNECT',     'COPY',       'DELETE',
                'GET',         'HEAD',       'LINK',
                'LOCK',        'M-SEARCH',   'MERGE',
                'MKACTIVITY',  'MKCALENDAR', 'MKCOL',
                'MOVE',        'NOTIFY',     'OPTIONS',
                'PATCH',       'POST',       'PROPFIND',
                'PROPPATCH',   'PURGE',      'PUT',
                'REBIND',      'REPORT',     'SEARCH',
                'SOURCE',      'SUBSCRIBE',  'TRACE',
                'UNBIND',      'UNLINK',     'UNLOCK',
                'UNSUBSCRIBE'
              ],
              STATUS_CODES: {
                '100': 'Continue',
                '101': 'Switching Protocols',
                '102': 'Processing',
                '103': 'Early Hints',
                '200': 'OK',
                '201': 'Created',
                '202': 'Accepted',
                '203': 'Non-Authoritative Information',
                '204': 'No Content',
                '205': 'Reset Content',
                '206': 'Partial Content',
                '207': 'Multi-Status',
                '208': 'Already Reported',
                '226': 'IM Used',
                '300': 'Multiple Choices',
                '301': 'Moved Permanently',
                '302': 'Found',
                '303': 'See Other',
                '304': 'Not Modified',
                '305': 'Use Proxy',
                '307': 'Temporary Redirect',
                '308': 'Permanent Redirect',
                '400': 'Bad Request',
                '401': 'Unauthorized',
                '402': 'Payment Required',
                '403': 'Forbidden',
                '404': 'Not Found',
                '405': 'Method Not Allowed',
                '406': 'Not Acceptable',
                '407': 'Proxy Authentication Required',
                '408': 'Request Timeout',
                '409': 'Conflict',
                '410': 'Gone',
                '411': 'Length Required',
                '412': 'Precondition Failed',
                '413': 'Payload Too Large',
                '414': 'URI Too Long',
                '415': 'Unsupported Media Type',
                '416': 'Range Not Satisfiable',
                '417': 'Expectation Failed',
                '418': "I'm a Teapot",
                '421': 'Misdirected Request',
                '422': 'Unprocessable Entity',
                '423': 'Locked',
                '424': 'Failed Dependency',
                '425': 'Too Early',
                '426': 'Upgrade Required',
                '428': 'Precondition Required',
                '429': 'Too Many Requests',
                '431': 'Request Header Fields Too Large',
                '451': 'Unavailable For Legal Reasons',
                '500': 'Internal Server Error',
                '501': 'Not Implemented',
                '502': 'Bad Gateway',
                '503': 'Service Unavailable',
                '504': 'Gateway Timeout',
                '505': 'HTTP Version Not Supported',
                '506': 'Variant Also Negotiates',
                '507': 'Insufficient Storage',
                '508': 'Loop Detected',
                '509': 'Bandwidth Limit Exceeded',
                '510': 'Not Extended',
                '511': 'Network Authentication Required'
              },
              Agent: [Function: Agent] { defaultMaxSockets: Infinity },
              ClientRequest: [Function: ClientRequest],
              IncomingMessage: [Function: IncomingMessage],
              OutgoingMessage: [Function: OutgoingMessage],
              Server: [Function: Server],
              ServerResponse: [Function: ServerResponse],
              createServer: [Function: createServer],
              validateHeaderName: [Function: __node_internal_],
              validateHeaderValue: [Function: __node_internal_],
              get: [Function: get],
              request: [Function: request],
              setMaxIdleHTTPParsers: [Function: setMaxIdleHTTPParsers],
              maxHeaderSize: [Getter],
              globalAgent: [Getter/Setter]
            },
            'https:': {
              Agent: [Function: Agent],
              globalAgent: <ref *3> Agent {
                _events: [Object: null prototype] {
                  free: [Function (anonymous)],
                  newListener: [Function: maybeEnableKeylog]
                },
                _eventsCount: 2,
                _maxListeners: undefined,
                defaultPort: 443,
                protocol: 'https:',
                options: [Object: null prototype] { noDelay: true, path: null },
                requests: [Object: null prototype] {},
                sockets: [Object: null prototype] {
                  'accounts.spotify.com:443:::::::::::::::::::::': [
                    <ref *2> TLSSocket {
                      _tlsOptions: {
                        allowHalfOpen: undefined,
                        pipe: false,
                        secureContext: SecureContext { context: SecureContext {} },
                        isServer: false,
                        requestCert: true,
                        rejectUnauthorized: true,
                        session: undefined,
                        ALPNProtocols: undefined,
                        requestOCSP: undefined,
                        enableTrace: undefined,
                        pskCallback: undefined,
                        highWaterMark: undefined,
                        onread: undefined,
                        signal: undefined
                      },
                      _secureEstablished: false,
                      _securePending: false,
                      _newSessionPending: false,
                      _controlReleased: true,
                      secureConnecting: true,
                      _SNICallback: null,
                      servername: null,
                      alpnProtocol: null,
                      authorized: false,
                      authorizationError: null,
                      encrypted: true,
                      _events: [Object: null prototype] {
                        close: [
                          [Function: onSocketCloseDestroySSL],
                          [Function: bound onceWrapper] {
                            listener: [Function (anonymous)]
                          },
                          [Function: onClose],
                          [Function: socketCloseListener],
                          [Function: bound onceWrapper] {
                            listener: [Function: onClose]
                          }
                        ],
                        end: [
                          [Function: onConnectEnd],
                          [Function: onReadableStreamEnd],
                          [Function: socketOnEnd]
                        ],
                        newListener: [Function: keylogNewListener],
                        connect: [
                          [Function: bound onceWrapper] {
                            listener: [Function (anonymous)]
                          },
                          [Function: bound onceWrapper] {
                            listener: [Function (anonymous)]
                          },
                          [Function: bound onceWrapper] {
                            listener: [Function: connect]
                          }
                        ],
                        secure: [Function: onConnectSecure],
                        session: [Function (anonymous)],
                        free: [Function: onFree],
                        timeout: [Function: onTimeout],
                        agentRemove: [Function: onRemove],
                        error: [Function: socketErrorListener],
                        data: [Function: socketOnData],
                        drain: [Function: ondrain]
                      },
                      _eventsCount: 12,
                      connecting: true,
                      _hadError: false,
                      _parent: null,
                      _host: 'accounts.spotify.com',
                      _closeAfterHandlingError: false,
                      _readableState: ReadableState {
                        objectMode: false,
                        highWaterMark: 16384,
                        buffer: BufferList { head: null, tail: null, length: 0 },
                        length: 0,
                        pipes: [],
                        flowing: true,
                        ended: false,
                        endEmitted: false,
                        reading: true,
                        constructed: true,
                        sync: false,
                        needReadable: true,
                        emittedReadable: false,
                        readableListening: false,
                        resumeScheduled: false,
                        errorEmitted: false,
                        emitClose: false,
                        autoDestroy: true,
                        destroyed: false,
                        errored: null,
                        closed: false,
                        closeEmitted: false,
                        defaultEncoding: 'utf8',
                        awaitDrainWriters: null,
                        multiAwaitDrain: false,
                        readingMore: false,
                        dataEmitted: false,
                        decoder: null,
                        encoding: null,
                        [Symbol(kPaused)]: false
                      },
                      _maxListeners: undefined,
                      _writableState: WritableState {
                        objectMode: false,
                        highWaterMark: 16384,
                        finalCalled: false,
                        needDrain: false,
                        ending: false,
                        ended: false,
                        finished: false,
                        destroyed: false,
                        decodeStrings: false,
                        defaultEncoding: 'utf8',
                        length: 378,
                        writing: true,
                        corked: 0,
                        sync: false,
                        bufferProcessing: false,
                        onwrite: [Function: bound onwrite],
                        writecb: [Function (anonymous)],
                        writelen: 378,
                        afterWriteTickInfo: null,
                        buffered: [],
                        bufferedIndex: 0,
                        allBuffers: true,
                        allNoop: true,
                        pendingcb: 1,
                        constructed: true,
                        prefinished: false,
                        errorEmitted: false,
                        emitClose: false,
                        autoDestroy: true,
                        errored: null,
                        closed: false,
                        closeEmitted: false,
                        [Symbol(kOnFinished)]: []
                      },
                      allowHalfOpen: false,
                      _sockname: null,
                      _pendingData: [
                        {
                          chunk: 'POST /api/token HTTP/1.1\r\n' +
                            'Accept: application/json, text/plain, */*\r\n' +
                            'Content-Type: application/x-www-form-urlencoded\r\n' +
                            'User-Agent: axios/1.6.8\r\n' +
                            'Content-Length: 119\r\n' +
                            'Accept-Encoding: gzip, compress, deflate, br\r\n' +
                            'Host: accounts.spotify.com\r\n' +
                            'Connection: close\r\n' +
                            '\r\n',
                          encoding: 'latin1',
                          callback: [Function: nop]
                        },
                        {
                          chunk: <Buffer 67 72 61 6e 74 5f 74 79 70 65 3d 63 6c 69 65 6e 74 5f 63 72 65 64 65 6e 74 69 61 6c 73 26 63 6c 69 65 6e 74 5f 69 64 3d 65 62 63 63 39 39 31 32 34 30 ... 69 more bytes>,
                          encoding: 'buffer',
                          callback: [Function (anonymous)]
                        },
                        allBuffers: false
                      ],
                      _pendingEncoding: '',
                      server: undefined,
                      _server: null,
                      ssl: TLSWrap {
                        _parent: TCP {
                          reading: [Getter/Setter],
                          onconnection: null,
                          [Symbol(owner_symbol)]: [Circular *2]
                        },
                        _parentWrap: undefined,
                        _secureContext: SecureContext { context: SecureContext {} },
                        reading: false,
                        onkeylog: [Function: onkeylog],
                        onhandshakestart: {},
                        onhandshakedone: [Function (anonymous)],
                        onocspresponse: [Function: onocspresponse],
                        onnewsession: [Function: onnewsessionclient],
                        onerror: [Function: onerror],
                        [Symbol(owner_symbol)]: [Circular *2]
                      },
                      _requestCert: true,
                      _rejectUnauthorized: true,
                      parser: <ref *4> HTTPParser {
                        '0': null,
                        '1': [Function: parserOnHeaders],
                        '2': [Function: parserOnHeadersComplete],
                        '3': [Function: parserOnBody],
                        '4': [Function: parserOnMessageComplete],
                        '5': null,
                        '6': null,
                        _headers: [],
                        _url: '',
                        socket: [Circular *2],
                        incoming: null,
                        outgoing: <ref *6> ClientRequest {
                          _events: [Object: null prototype] {
                            response: [Function: bound onceWrapper] {
                              listener: [Function (anonymous)]
                            },
                            abort: [Function (anonymous)],
                            aborted: [Function (anonymous)],
                            connect: [Function (anonymous)],
                            error: [Function (anonymous)],
                            socket: [Function (anonymous)],
                            timeout: [Function (anonymous)]
                          },
                          _eventsCount: 7,
                          _maxListeners: undefined,
                          outputData: [],
                          outputSize: 0,
                          writable: true,
                          destroyed: false,
                          _last: true,
                          chunkedEncoding: false,
                          shouldKeepAlive: false,
                          maxRequestsOnConnectionReached: false,
                          _defaultKeepAlive: true,
                          useChunkedEncodingByDefault: true,
                          sendDate: false,
                          _removedConnection: false,
                          _removedContLen: false,
                          _removedTE: false,
                          strictContentLength: false,
                          _contentLength: '119',
                          _hasBody: true,
                          _trailer: '',
                          finished: false,
                          _headerSent: true,
                          _closed: false,
                          socket: [Circular *2],
                          _header: 'POST /api/token HTTP/1.1\r\n' +
                            'Accept: application/json, text/plain, */*\r\n' +
                            'Content-Type: application/x-www-form-urlencoded\r\n' +
                            'User-Agent: axios/1.6.8\r\n' +
                            'Content-Length: 119\r\n' +
                            'Accept-Encoding: gzip, compress, deflate, br\r\n' +
                            'Host: accounts.spotify.com\r\n' +
                            'Connection: close\r\n' +
                            '\r\n',
                          _keepAliveTimeout: 0,
                          _onPendingData: [Function: nop],
                          agent: [Circular *3],
                          socketPath: undefined,
                          method: 'POST',
                          maxHeaderSize: undefined,
                          insecureHTTPParser: undefined,
                          joinDuplicateHeaders: undefined,
                          path: '/api/token',
                          _ended: false,
                          res: null,
                          aborted: false,
                          timeoutCb: null,
                          upgradeOrConnect: false,
                          parser: [Circular *4],
                          maxHeadersCount: null,
                          reusedSocket: false,
                          host: 'accounts.spotify.com',
                          protocol: 'https:',
                          _redirectable: Writable {
                            _writableState: WritableState {
                              objectMode: false,
                              highWaterMark: 16384,
                              finalCalled: false,
                              needDrain: false,
                              ending: false,
                              ended: false,
                              finished: false,
                              destroyed: false,
                              decodeStrings: true,
                              defaultEncoding: 'utf8',
                              length: 0,
                              writing: false,
                              corked: 0,
                              sync: true,
                              bufferProcessing: false,
                              onwrite: [Function: bound onwrite],
                              writecb: null,
                              writelen: 0,
                              afterWriteTickInfo: null,
                              buffered: [],
                              bufferedIndex: 0,
                              allBuffers: true,
                              allNoop: true,
                              pendingcb: 0,
                              constructed: true,
                              prefinished: false,
                              errorEmitted: false,
                              emitClose: true,
                              autoDestroy: true,
                              errored: null,
                              closed: false,
                              closeEmitted: false,
                              [Symbol(kOnFinished)]: []
                            },
                            _events: [Object: null prototype] {
                              response: [Function: handleResponse],
                              error: [Function: handleRequestError],
                              socket: [Function: handleRequestSocket]
                            },
                            _eventsCount: 3,
                            _maxListeners: undefined,
                            _options: {
                              maxRedirects: 21,
                              maxBodyLength: Infinity,
                              protocol: 'https:',
                              path: '/api/token',
                              method: 'POST',
                              headers: [Object: null prototype] {
                                Accept: 'application/json, text/plain, */*',
                                'Content-Type': 'application/x-www-form-urlencoded',
                                'User-Agent': 'axios/1.6.8',
                                'Content-Length': '119',
                                'Accept-Encoding': 'gzip, compress, deflate, br'
                              },
                              agents: { http: undefined, https: undefined },
                              auth: undefined,
                              family: undefined,
                              beforeRedirect: [Function: dispatchBeforeRedirect],
                              beforeRedirects: { proxy: [Function: beforeRedirect] },
                              hostname: 'accounts.spotify.com',
                              port: '',
                              agent: undefined,
                              nativeProtocols: [Circular *5],
                              pathname: '/api/token'
                            },
                            _ended: false,
                            _ending: true,
                            _redirectCount: 0,
                            _redirects: [],
                            _requestBodyLength: 119,
                            _requestBodyBuffers: [
                              {
                                data: <Buffer 67 72 61 6e 74 5f 74 79 70 65 3d 63 6c 69 65 6e 74 5f 63 72 65 64 65 6e 74 69 61 6c 73 26 63 6c 69 65 6e 74 5f 69 64 3d 65 62 63 63 39 39 31 32 34 30 ... 69 more bytes>,
                                encoding: undefined
                              }
                            ],
                            _onNativeResponse: [Function (anonymous)],
                            _currentRequest: [Circular *6],
                            _currentUrl: 'https://accounts.spotify.com/api/token',
                            [Symbol(kCapture)]: false
                          },
                          [Symbol(kCapture)]: false,
                          [Symbol(kBytesWritten)]: 0,
                          [Symbol(kEndCalled)]: false,
                          [Symbol(kNeedDrain)]: false,
                          [Symbol(corked)]: 0,
                          [Symbol(kOutHeaders)]: [Object: null prototype] {
                            accept: [
                              'Accept',
                              'application/json, text/plain, */*'
                            ],
                            'content-type': [
                              'Content-Type',
                              'application/x-www-form-urlencoded'
                            ],
                            'user-agent': [ 'User-Agent', 'axios/1.6.8' ],
                            'content-length': [ 'Content-Length', '119' ],
                            'accept-encoding': [
                              'Accept-Encoding',
                              'gzip, compress, deflate, br'
                            ],
                            host: [ 'Host', 'accounts.spotify.com' ]
                          },
                          [Symbol(errored)]: null,
                          [Symbol(kUniqueHeaders)]: null
                        },
                        maxHeaderPairs: 2000,
                        _consumed: false,
                        onIncoming: [Function: parserOnIncomingClient],
                        joinDuplicateHeaders: undefined,
                        [Symbol(resource_symbol)]: HTTPClientAsyncResource {
                          type: 'HTTPINCOMINGMESSAGE',
                          req: <ref *6> ClientRequest {
                            _events: [Object: null prototype] {
                              response: [Function: bound onceWrapper] {
                                listener: [Function (anonymous)]
                              },
                              abort: [Function (anonymous)],
                              aborted: [Function (anonymous)],
                              connect: [Function (anonymous)],
                              error: [Function (anonymous)],
                              socket: [Function (anonymous)],
                              timeout: [Function (anonymous)]
                            },
                            _eventsCount: 7,
                            _maxListeners: undefined,
                            outputData: [],
                            outputSize: 0,
                            writable: true,
                            destroyed: false,
                            _last: true,
                            chunkedEncoding: false,
                            shouldKeepAlive: false,
                            maxRequestsOnConnectionReached: false,
                            _defaultKeepAlive: true,
                            useChunkedEncodingByDefault: true,
                            sendDate: false,
                            _removedConnection: false,
                            _removedContLen: false,
                            _removedTE: false,
                            strictContentLength: false,
                            _contentLength: '119',
                            _hasBody: true,
                            _trailer: '',
                            finished: false,
                            _headerSent: true,
                            _closed: false,
                            socket: [Circular *2],
                            _header: 'POST /api/token HTTP/1.1\r\n' +
                              'Accept: application/json, text/plain, */*\r\n' +
                              'Content-Type: application/x-www-form-urlencoded\r\n' +
                              'User-Agent: axios/1.6.8\r\n' +
                              'Content-Length: 119\r\n' +
                              'Accept-Encoding: gzip, compress, deflate, br\r\n' +
                              'Host: accounts.spotify.com\r\n' +
                              'Connection: close\r\n' +
                              '\r\n',
                            _keepAliveTimeout: 0,
                            _onPendingData: [Function: nop],
                            agent: [Circular *3],
                            socketPath: undefined,
                            method: 'POST',
                            maxHeaderSize: undefined,
                            insecureHTTPParser: undefined,
                            joinDuplicateHeaders: undefined,
                            path: '/api/token',
                            _ended: false,
                            res: null,
                            aborted: false,
                            timeoutCb: null,
                            upgradeOrConnect: false,
                            parser: [Circular *4],
                            maxHeadersCount: null,
                            reusedSocket: false,
                            host: 'accounts.spotify.com',
                            protocol: 'https:',
                            _redirectable: Writable {
                              _writableState: WritableState {
                                objectMode: false,
                                highWaterMark: 16384,
                                finalCalled: false,
                                needDrain: false,
                                ending: false,
                                ended: false,
                                finished: false,
                                destroyed: false,
                                decodeStrings: true,
                                defaultEncoding: 'utf8',
                                length: 0,
                                writing: false,
                                corked: 0,
                                sync: true,
                                bufferProcessing: false,
                                onwrite: [Function: bound onwrite],
                                writecb: null,
                                writelen: 0,
                                afterWriteTickInfo: null,
                                buffered: [],
                                bufferedIndex: 0,
                                allBuffers: true,
                                allNoop: true,
                                pendingcb: 0,
                                constructed: true,
                                prefinished: false,
                                errorEmitted: false,
                                emitClose: true,
                                autoDestroy: true,
                                errored: null,
                                closed: false,
                                closeEmitted: false,
                                [Symbol(kOnFinished)]: []
                              },
                              _events: [Object: null prototype] {
                                response: [Function: handleResponse],
                                error: [Function: handleRequestError],
                                socket: [Function: handleRequestSocket]
                              },
                              _eventsCount: 3,
                              _maxListeners: undefined,
                              _options: {
                                maxRedirects: 21,
                                maxBodyLength: Infinity,
                                protocol: 'https:',
                                path: '/api/token',
                                method: 'POST',
                                headers: [Object: null prototype] {
                                  Accept: 'application/json, text/plain, */*',
                                  'Content-Type': 'application/x-www-form-urlencoded',
                                  'User-Agent': 'axios/1.6.8',
                                  'Content-Length': '119',
                                  'Accept-Encoding': 'gzip, compress, deflate, br'
                                },
                                agents: { http: undefined, https: undefined },
                                auth: undefined,
                                family: undefined,
                                beforeRedirect: [Function: dispatchBeforeRedirect],
                                beforeRedirects: { proxy: [Function: beforeRedirect] },
                                hostname: 'accounts.spotify.com',
                                port: '',
                                agent: undefined,
                                nativeProtocols: [Circular *5],
                                pathname: '/api/token'
                              },
                              _ended: false,
                              _ending: true,
                              _redirectCount: 0,
                              _redirects: [],
                              _requestBodyLength: 119,
                              _requestBodyBuffers: [
                                {
                                  data: <Buffer 67 72 61 6e 74 5f 74 79 70 65 3d 63 6c 69 65 6e 74 5f 63 72 65 64 65 6e 74 69 61 6c 73 26 63 6c 69 65 6e 74 5f 69 64 3d 65 62 63 63 39 39 31 32 34 30 ... 69 more bytes>,
                                  encoding: undefined
                                }
                              ],
                              _onNativeResponse: [Function (anonymous)],
                              _currentRequest: [Circular *6],
                              _currentUrl: 'https://accounts.spotify.com/api/token',
                              [Symbol(kCapture)]: false
                            },
                            [Symbol(kCapture)]: false,
                            [Symbol(kBytesWritten)]: 0,
                            [Symbol(kEndCalled)]: false,
                            [Symbol(kNeedDrain)]: false,
                            [Symbol(corked)]: 0,
                            [Symbol(kOutHeaders)]: [Object: null prototype] {
                              accept: [
                                'Accept',
                                'application/json, text/plain, */*'
                              ],
                              'content-type': [
                                'Content-Type',
                                'application/x-www-form-urlencoded'
                              ],
                              'user-agent': [ 'User-Agent', 'axios/1.6.8' ],
                              'content-length': [ 'Content-Length', '119' ],
                              'accept-encoding': [
                                'Accept-Encoding',
                                'gzip, compress, deflate, br'
                              ],
                              host: [ 'Host', 'accounts.spotify.com' ]
                            },
                            [Symbol(errored)]: null,
                            [Symbol(kUniqueHeaders)]: null
                          }
                        }
                      },
                      _httpMessage: <ref *6> ClientRequest {
                        _events: [Object: null prototype] {
                          response: [Function: bound onceWrapper] {
                            listener: [Function (anonymous)]
                          },
                          abort: [Function (anonymous)],
                          aborted: [Function (anonymous)],
                          connect: [Function (anonymous)],
                          error: [Function (anonymous)],
                          socket: [Function (anonymous)],
                          timeout: [Function (anonymous)]
                        },
                        _eventsCount: 7,
                        _maxListeners: undefined,
                        outputData: [],
                        outputSize: 0,
                        writable: true,
                        destroyed: false,
                        _last: true,
                        chunkedEncoding: false,
                        shouldKeepAlive: false,
                        maxRequestsOnConnectionReached: false,
                        _defaultKeepAlive: true,
                        useChunkedEncodingByDefault: true,
                        sendDate: false,
                        _removedConnection: false,
                        _removedContLen: false,
                        _removedTE: false,
                        strictContentLength: false,
                        _contentLength: '119',
                        _hasBody: true,
                        _trailer: '',
                        finished: false,
                        _headerSent: true,
                        _closed: false,
                        socket: [Circular *2],
                        _header: 'POST /api/token HTTP/1.1\r\n' +
                          'Accept: application/json, text/plain, */*\r\n' +
                          'Content-Type: application/x-www-form-urlencoded\r\n' +
                          'User-Agent: axios/1.6.8\r\n' +
                          'Content-Length: 119\r\n' +
                          'Accept-Encoding: gzip, compress, deflate, br\r\n' +
                          'Host: accounts.spotify.com\r\n' +
                          'Connection: close\r\n' +
                          '\r\n',
                        _keepAliveTimeout: 0,
                        _onPendingData: [Function: nop],
                        agent: [Circular *3],
                        socketPath: undefined,
                        method: 'POST',
                        maxHeaderSize: undefined,
                        insecureHTTPParser: undefined,
                        joinDuplicateHeaders: undefined,
                        path: '/api/token',
                        _ended: false,
                        res: null,
                        aborted: false,
                        timeoutCb: null,
                        upgradeOrConnect: false,
                        parser: <ref *4> HTTPParser {
                          '0': null,
                          '1': [Function: parserOnHeaders],
                          '2': [Function: parserOnHeadersComplete],
                          '3': [Function: parserOnBody],
                          '4': [Function: parserOnMessageComplete],
                          '5': null,
                          '6': null,
                          _headers: [],
                          _url: '',
                          socket: [Circular *2],
                          incoming: null,
                          outgoing: [Circular *6],
                          maxHeaderPairs: 2000,
                          _consumed: false,
                          onIncoming: [Function: parserOnIncomingClient],
                          joinDuplicateHeaders: undefined,
                          [Symbol(resource_symbol)]: HTTPClientAsyncResource {
                            type: 'HTTPINCOMINGMESSAGE',
                            req: [Circular *6]
                          }
                        },
                        maxHeadersCount: null,
                        reusedSocket: false,
                        host: 'accounts.spotify.com',
                        protocol: 'https:',
                        _redirectable: Writable {
                          _writableState: WritableState {
                            objectMode: false,
                            highWaterMark: 16384,
                            finalCalled: false,
                            needDrain: false,
                            ending: false,
                            ended: false,
                            finished: false,
                            destroyed: false,
                            decodeStrings: true,
                            defaultEncoding: 'utf8',
                            length: 0,
                            writing: false,
                            corked: 0,
                            sync: true,
                            bufferProcessing: false,
                            onwrite: [Function: bound onwrite],
                            writecb: null,
                            writelen: 0,
                            afterWriteTickInfo: null,
                            buffered: [],
                            bufferedIndex: 0,
                            allBuffers: true,
                            allNoop: true,
                            pendingcb: 0,
                            constructed: true,
                            prefinished: false,
                            errorEmitted: false,
                            emitClose: true,
                            autoDestroy: true,
                            errored: null,
                            closed: false,
                            closeEmitted: false,
                            [Symbol(kOnFinished)]: []
                          },
                          _events: [Object: null prototype] {
                            response: [Function: handleResponse],
                            error: [Function: handleRequestError],
                            socket: [Function: handleRequestSocket]
                          },
                          _eventsCount: 3,
                          _maxListeners: undefined,
                          _options: {
                            maxRedirects: 21,
                            maxBodyLength: Infinity,
                            protocol: 'https:',
                            path: '/api/token',
                            method: 'POST',
                            headers: [Object: null prototype] {
                              Accept: 'application/json, text/plain, */*',
                              'Content-Type': 'application/x-www-form-urlencoded',
                              'User-Agent': 'axios/1.6.8',
                              'Content-Length': '119',
                              'Accept-Encoding': 'gzip, compress, deflate, br'
                            },
                            agents: { http: undefined, https: undefined },
                            auth: undefined,
                            family: undefined,
                            beforeRedirect: [Function: dispatchBeforeRedirect],
                            beforeRedirects: { proxy: [Function: beforeRedirect] },
                            hostname: 'accounts.spotify.com',
                            port: '',
                            agent: undefined,
                            nativeProtocols: [Circular *5],
                            pathname: '/api/token'
                          },
                          _ended: false,
                          _ending: true,
                          _redirectCount: 0,
                          _redirects: [],
                          _requestBodyLength: 119,
                          _requestBodyBuffers: [
                            {
                              data: <Buffer 67 72 61 6e 74 5f 74 79 70 65 3d 63 6c 69 65 6e 74 5f 63 72 65 64 65 6e 74 69 61 6c 73 26 63 6c 69 65 6e 74 5f 69 64 3d 65 62 63 63 39 39 31 32 34 30 ... 69 more bytes>,
                              encoding: undefined
                            }
                          ],
                          _onNativeResponse: [Function (anonymous)],
                          _currentRequest: [Circular *6],
                          _currentUrl: 'https://accounts.spotify.com/api/token',
                          [Symbol(kCapture)]: false
                        },
                        [Symbol(kCapture)]: false,
                        [Symbol(kBytesWritten)]: 0,
                        [Symbol(kEndCalled)]: false,
                        [Symbol(kNeedDrain)]: false,
                        [Symbol(corked)]: 0,
                        [Symbol(kOutHeaders)]: [Object: null prototype] {
                          accept: [
                            'Accept',
                            'application/json, text/plain, */*'
                          ],
                          'content-type': [
                            'Content-Type',
                            'application/x-www-form-urlencoded'
                          ],
                          'user-agent': [ 'User-Agent', 'axios/1.6.8' ],
                          'content-length': [ 'Content-Length', '119' ],
                          'accept-encoding': [
                            'Accept-Encoding',
                            'gzip, compress, deflate, br'
                          ],
                          host: [ 'Host', 'accounts.spotify.com' ]
                        },
                        [Symbol(errored)]: null,
                        [Symbol(kUniqueHeaders)]: null
                      },
                      [Symbol(res)]: TLSWrap {
                        _parent: TCP {
                          reading: [Getter/Setter],
                          onconnection: null,
                          [Symbol(owner_symbol)]: [Circular *2]
                        },
                        _parentWrap: undefined,
                        _secureContext: SecureContext { context: SecureContext {} },
                        reading: false,
                        onkeylog: [Function: onkeylog],
                        onhandshakestart: {},
                        onhandshakedone: [Function (anonymous)],
                        onocspresponse: [Function: onocspresponse],
                        onnewsession: [Function: onnewsessionclient],
                        onerror: [Function: onerror],
                        [Symbol(owner_symbol)]: [Circular *2]
                      },
                      [Symbol(verified)]: false,
                      [Symbol(pendingSession)]: null,
                      [Symbol(async_id_symbol)]: 6,
                      [Symbol(kHandle)]: TLSWrap {
                        _parent: TCP {
                          reading: [Getter/Setter],
                          onconnection: null,
                          [Symbol(owner_symbol)]: [Circular *2]
                        },
                        _parentWrap: undefined,
                        _secureContext: SecureContext { context: SecureContext {} },
                        reading: false,
                        onkeylog: [Function: onkeylog],
                        onhandshakestart: {},
                        onhandshakedone: [Function (anonymous)],
                        onocspresponse: [Function: onocspresponse],
                        onnewsession: [Function: onnewsessionclient],
                        onerror: [Function: onerror],
                        [Symbol(owner_symbol)]: [Circular *2]
                      },
                      [Symbol(lastWriteQueueSize)]: 0,
                      [Symbol(timeout)]: null,
                      [Symbol(kBuffer)]: null,
                      [Symbol(kBufferCb)]: null,
                      [Symbol(kBufferGen)]: null,
                      [Symbol(kCapture)]: false,
                      [Symbol(kSetNoDelay)]: false,
                      [Symbol(kSetKeepAlive)]: true,
                      [Symbol(kSetKeepAliveInitialDelay)]: 60,
                      [Symbol(kBytesRead)]: 0,
                      [Symbol(kBytesWritten)]: 0,
                      [Symbol(connect-options)]: {
                        rejectUnauthorized: true,
                        ciphers: 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
                        checkServerIdentity: [Function: checkServerIdentity],
                        minDHSize: 1024,
                        maxRedirects: 21,
                        maxBodyLength: Infinity,
                        protocol: 'https:',
                        path: null,
                        method: 'POST',
                        headers: [Object: null prototype] {
                          Accept: 'application/json, text/plain, */*',
                          'Content-Type': 'application/x-www-form-urlencoded',
                          'User-Agent': 'axios/1.6.8',
                          'Content-Length': '119',
                          'Accept-Encoding': 'gzip, compress, deflate, br'
                        },
                        agents: { http: undefined, https: undefined },
                        auth: undefined,
                        family: undefined,
                        beforeRedirect: [Function: dispatchBeforeRedirect],
                        beforeRedirects: { proxy: [Function: beforeRedirect] },
                        hostname: 'accounts.spotify.com',
                        port: 443,
                        agent: undefined,
                        nativeProtocols: [Circular *5],
                        pathname: '/api/token',
                        _defaultAgent: [Circular *3],
                        host: 'accounts.spotify.com',
                        noDelay: true,
                        servername: 'accounts.spotify.com',
                        _agentKey: 'accounts.spotify.com:443:::::::::::::::::::::',
                        encoding: null,
                        singleUse: true
                      }
                    }
                  ]
                },
                freeSockets: [Object: null prototype] {},
                keepAliveMsecs: 1000,
                keepAlive: false,
                maxSockets: Infinity,
                maxFreeSockets: 256,
                scheduling: 'lifo',
                maxTotalSockets: Infinity,
                totalSocketCount: 1,
                maxCachedSessions: 100,
                _sessionCache: {
                  map: {
                    'www.wikidata.org:443:::::::::::::::::::::': <Buffer 30 82 08 7d 02 01 01 02 02 03 04 04 02 13 02 04 20 49 81 10 e3 ea 7d 84 9b e4 63 a1 f3 bf 02 aa db cd 63 84 bf 4f 51 15 cc 96 ff a3 1c ef 0f 60 a7 04 ... 2127 more bytes>
                  },
                  list: [ 'www.wikidata.org:443:::::::::::::::::::::' ]
                },
                [Symbol(kCapture)]: false
              },
              Server: [Function: Server],
              createServer: [Function: createServer],
              get: [Function: get],
              request: [Function: request]
            }
          },
          pathname: '/w/rest.php/oauth2/access_token'
        },
        _ended: true,
        _ending: true,
        _redirectCount: 0,
        _redirects: [],
        _requestBodyLength: 141,
        _requestBodyBuffers: [],
        _onNativeResponse: [Function (anonymous)],
        _currentRequest: [Circular *1],
        _currentUrl: 'https://www.wikidata.org/w/rest.php/oauth2/access_token',
        [Symbol(kCapture)]: false
      },
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(kEndCalled)]: true,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype] {
        accept: [ 'Accept', 'application/json, text/plain, */*' ],
        'content-type': [ 'Content-Type', 'application/json' ],
        'user-agent': [ 'User-Agent', 'axios/1.6.8' ],
        'content-length': [ 'Content-Length', '141' ],
        'accept-encoding': [ 'Accept-Encoding', 'gzip, compress, deflate, br' ],
        host: [ 'Host', 'www.wikidata.org' ]
      },
      [Symbol(errored)]: null,
      [Symbol(kUniqueHeaders)]: null
    },
    data: {
      error: 'invalid_request',
      error_description: 'The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed.',
      hint: 'Check the `grant_type` parameter',
      message: 'The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed.'
    }
  }
}